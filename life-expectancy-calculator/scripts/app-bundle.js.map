{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/aboutyou/capitalize-converter.js","src/aboutyou/personalinfo.js","src/health/familyhealth.js","src/health/myhealth.js","src/occupation/occupation.js","src/resources/index.js","src/results/results.js","src/services/user.js","src/utilities/chart.js","src/utilities/readFile.js","src/utilities/slider.js","src/services/data/familyHealthData.js","src/services/data/myHealthData.js","src/services/data/occupationData.js","src/services/data/personalInfoData.js","src/services/data/resultsData.js","src/services/data/stateData.js","src/utilities/calculations/calculateFamilyHealth.js","src/utilities/calculations/calculateMyHealth.js","src/utilities/calculations/calculateOccupation.js","src/utilities/calculations/calculateResults.js"],"names":["App","httpClient","readFile","message","activate","fetch","data","json","data2","getStateList","configureRouter","config","router","title","map","route","moduleId","name","nav","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","CapitalizeValueConverter","toView","value","replace","txt","charAt","toUpperCase","substr","toLowerCase","ionRangeSlider","personalinfo","user","stateData","slider","calculateResults","calculateOccupation","occupationData","currentCountyArray","laborArray","length","loadOccupation","gender","person","checkgender","console","log","checkspouse","clientPersonalInfo","checkState","state","self","countyWithLifeArrays","stateToCountyMap","get","split","forEach","currentCountyInfo","push","pop","county","checkLifeExpectancy","lifeExpectancy","indexOf","countyLifeExpectancy","checkMaritalStatus","maritalStatus","isSingle","isMarried","isWidowed","isDivorced","myhealth","navigate","familyhealth","occupation","submit","education","calculateEducation","clientResults","addExpectancies","spousePersonalInfo","spouseResults","getLifeTableData","attached","createAgeSlider","calculateFamilyHealth","heartdisease","checkHeartDisease","cancer","checkCancer","mentalhealth","checkMentalHealth","diabetes","checkDiabetes","back","calculateAgeOfParents","clientFamilyHealth","spouseFamilyHealth","calculateMyHealth","formHeightWeight","checkHeight","valid","test","height","validHeight","heightError","feetAndInches","heightInInches","parseInt","validWeight","calculateBMI","validBMI","setIconType","iconType","spouse","bmi","checkdiabetes","mental","checkmental","smoking","checksmoking","stillSmoking","checkStillSmoking","check","exerciseCalculations","calc","results","exercisePerWeek","calculateExercise","exercise","exerciseLifeExpectancy","alert","smokerCalculations","kindOfSmoker","calculateSmoker","smoker","smokerLifeExpectancy","ageQuitSmoking","clientMyHealth","calculateMentalHealth","spouseMyHealth","tooltip","content","currentJobArray","allowDrop","ev","preventDefault","drag","dataTransfer","setData","target","innerText","srcElement","textContent","removeDrop","set","drop","id","spouseOccupation","occupationArray","getData","clientOccupation","current","elements","document","getElementsByClassName","i","trim","currentTarget","appendChild","income","checkincome","checkOccupation","occupationName","type","industryArray","publicServiceArray","managementArray","calculationOccupation","isNaN","calculateIncome","chart","chartTuples","clientTuples","spouseTuples","averageTuples","createChart","age","User","HighCharts","Chart","containerID","Highcharts","text","xAxis","plotOptions","series","pointStart","yAxis","ReadFile","jsonData","stateObject","stateSet","add","State","getCountyList","has","existingValues","County","Male","Female","getCategoryList","jobObject","occupationCategorySet","Category","categoryToJobMap","undefined","Occupation","getOccupationDeathNumber","arrayOccupations","deathTotal","userOccupation","Deaths","Slider","$","grid","min","max","from","step","onFinish","FamilyHealthData","ageOfParents","MyHealthData","weight","healthRank","alcoholPerWeek","OccupationData","incomeLifeExpectancy","occupationType","Set","Map","occupationChangeInLifeExpectancy","PersonalInfoData","race","yearsOfMarriage","yearsSinceSpousePassing","yearsOfDivorce","expectedYearsLeft","ResultsData","marital","parentAges","overallLifeExpectancy","clientTableAge","clientTableValue","spouseTableAge","spouseTableValue","averageTableAge","averageTableValue","finalLifeExpectancy","StateData","CalculateFamilyHealth","personResults","CalculateMyHealth","metricWeight","metricHeight","metricHeightSquared","toPrecision","CalculateOccupation","parseFloat","loadedData","createJobArrays","currentArray","listToArray","job","CalculateResults","client","clientEthnicityExpectancy","clientResultsData","setUserExpectedAge","spouseEthnicityExpectancy","spouseResultsData","getTestTuples","currentAgeArray","Age","slice","Number","educationLifeExpectancy","calculateDiabetes","more","less","difference","number","check90","check75","check50","check25","check10","toFixed"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {ReadFile} from 'utilities/readFile';\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\n@inject(HttpClient, ReadFile)\r\nexport class App {\r\n  httpClient;\r\n\r\n  constructor(httpClient, readFile) {\r\n    this.httpClient = httpClient;\r\n    this.readFile = readFile;\r\n    this.message = 'Life Expectancy Calculator';\r\n  }\r\n\r\n  async activate() {\r\n    let data = await this.httpClient.fetch('/api/life-expectancy/get.json');\r\n    let data2 = await data.json();\r\n    this.readFile.getStateList(data2);\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Life Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'personalinfo'], moduleId: 'aboutyou/personalinfo',\r\n        name: 'personalinfo', title: 'Personal Info', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'myhealth', moduleId: 'health/myhealth',\r\n        name: 'myhealth', title: 'My Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'familyhealth', moduleId: 'health/familyhealth',\r\n        name: 'familyhealth', title: 'Family Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'occupation', moduleId: 'occupation/occupation',\r\n        name: 'occupation', title: 'Occupation', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Results', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'jsonfile', moduleId: 'services/lifeExpectancy.json!json',\r\n        name: 'jsonfile', title: 'Json File', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export class CapitalizeValueConverter {\r\n    toView(value) {\r\n        return value.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {StateData} from '../services/data/stateData';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\nimport {Slider} from '../utilities/slider';\r\nimport {CalculateResults} from '../utilities/calculations/calculateResults';\r\nimport {CalculateOccupation} from '../utilities/calculations/calculateOccupation';\r\nimport {OccupationData} from '../services/data/occupationData'\r\n\r\n@inject(Router, User, StateData, Slider, CalculateResults, CalculateOccupation, OccupationData)\r\nexport class personalinfo {\r\n    currentCountyArray = [];\r\n\r\n    constructor(router, user, stateData, slider, calculateResults, calculateOccupation, occupationData) {\r\n        this.slider = slider;\r\n        this.router = router;\r\n        this.user = user;\r\n        this.stateData = stateData;\r\n        this.calculateResults = calculateResults;\r\n        this.calculateOccupation = calculateOccupation;\r\n        this.occupationData = occupationData;\r\n        if(this.occupationData.laborArray.length == 0) \r\n            calculateOccupation.loadOccupation();\r\n    }\r\n\r\n    gender(person) {\r\n        person.checkgender = !person.checkgender;\r\n        person.gender = person.checkgender ? 'Male' : 'Female';\r\n        console.log(person);\r\n    }\r\n\r\n    checkspouse() {\r\n        this.user.clientPersonalInfo.checkspouse = !this.user.clientPersonalInfo.checkspouse;\r\n    }\r\n\r\n    //======================LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n    //This method retrieves all of the counties from the client's current state\r\n    checkState(person) {\r\n        var state = person.state;\r\n        if(state != \"Please Select\") {\r\n            var self = this;\r\n            this.currentCountyArray = [];\r\n            state = state.toLowerCase();\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                self.currentCountyArray.push(currentCountyInfo[0]);\r\n            });\r\n            this.currentCountyArray.pop();\r\n        }\r\n        else person.county = \"Please Select\";\r\n    }\r\n\r\n    //This method checks the current client's life expectancy\r\n    checkLifeExpectancy(person) {\r\n        if(person.county != \"Please Select\") {\r\n            var state = person.state;\r\n            state = state.toLowerCase();\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                //Life expectancy of male is index 2, life expectancy of female is index 1\r\n                var lifeExpectancy =  person.checkgender ? currentCountyInfo[2] : currentCountyInfo[1];\r\n                //If county name is found in array, then get life expectancy\r\n                if(currentCountyInfo[0].indexOf(person.county) != -1) {\r\n                    person.countyLifeExpectancy =  person.checkgender ? currentCountyInfo[1] : currentCountyInfo[2];\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //===================END LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n\r\n    checkMaritalStatus(person) {\r\n        if(person.maritalStatus == \"Single/Never Married\") {\r\n            person.isSingle = true;\r\n            person.isMarried = false;\r\n            person.isWidowed = false;\r\n            person.isDivorced = false;\r\n        }\r\n        else if(person.maritalStatus == \"Married/Cohabitated\") {\r\n            person.isMarried = true;\r\n            person.isSingle = false;\r\n            person.isWidowed = false;\r\n            person.isDivorced = false;\r\n        }\r\n        else if(person.maritalStatus == \"Widowed\") {\r\n            person.isWidowed = true;\r\n            person.isSingle = false;\r\n            person.isMarried = false;\r\n            person.isDivorced = false;\r\n        }\r\n        else if(person.maritalStatus == \"Divorced\") {\r\n            person.isDivorced = true;\r\n            person.isSingle = false;\r\n            person.isMarried = false;\r\n            person.isWidowed = false;\r\n        }\r\n        else {\r\n            person.isSingle = false;\r\n            person.isMarried = false;\r\n            person.isWidowed = false;\r\n            person.isDivorced = false;\r\n        }\r\n    }\r\n\r\n    myhealth() {\r\n        this.router.navigate('#/myhealth');  \r\n    }\r\n\r\n    familyhealth() {\r\n        this.router.navigate('#/familyhealth');  \r\n    }\r\n\r\n    occupation() {\r\n        this.router.navigate('#/occupation');  \r\n    }\r\n\r\n    async submit() {\r\n        //Client calculations - results\r\n        if(this.user.clientPersonalInfo.education && this.user.clientPersonalInfo.education !== \"Please Select\") {\r\n            this.calculateResults.calculateEducation(this.user.clientPersonalInfo, this.user.clientResults);\r\n        }\r\n        this.calculateResults.addExpectancies(this.user.clientResults);\r\n        \r\n        console.log(\"=======CLIENT=======\");\r\n        console.log(this.user.clientPersonalInfo);\r\n        console.log(this.user.clientResults);\r\n\r\n        //Spouse calculations - results\r\n        if(this.user.clientPersonalInfo.checkspouse){\r\n            if(this.user.spousePersonalInfo.education && this.user.spousePersonalInfo.education !== \"Please Select\") {\r\n                this.calculateResults.calculateEducation(this.user.spousePersonalInfo, this.user.spouseResults);\r\n            }\r\n            this.calculateResults.addExpectancies(this.user.spouseResults);\r\n\r\n            console.log(\"=======SPOUSE=======\");\r\n            console.log(this.user.spousePersonalInfo);\r\n            console.log(this.user.spouseResults);\r\n        } \r\n\r\n        await this.calculateResults.getLifeTableData(this.user.clientPersonalInfo, this.user.clientResults,\r\n            this.user.spousePersonalInfo, this.user.spouseResults);\r\n        \r\n        this.router.navigate('#/results');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createAgeSlider();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateFamilyHealth} from '../utilities/calculations/calculateFamilyHealth';\r\nimport {Slider} from '../utilities/slider';\r\n\r\n@inject(Router, User, CalculateFamilyHealth, Slider)\r\nexport class familyhealth {\r\n    constructor(router, user, calculateFamilyHealth, slider) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateFamilyHealth = calculateFamilyHealth;\r\n        this.slider = slider;\r\n    }\r\n\r\n    //HEART DISEASE\r\n    heartdisease(person) {\r\n        person.checkHeartDisease = !person.checkHeartDisease;\r\n    }\r\n\r\n    //CANCER\r\n    cancer(person) {\r\n        person.checkCancer = !person.checkCancer;\r\n    }\r\n\r\n    //MENTAL HEALTH\r\n    mentalhealth(person) {\r\n        person.checkMentalHealth = !person.checkMentalHealth;\r\n    }\r\n\r\n    //DIABETES\r\n    diabetes(person) {\r\n        person.checkDiabetes = !person.checkDiabetes;\r\n    }\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.calculateFamilyHealth.calculateAgeOfParents(this.user.clientFamilyHealth, this.user.clientResults, this.user.clientPersonalInfo.gender);\r\n\r\n        if(this.user.clientPersonalInfo.checkspouse) {\r\n            this.calculateFamilyHealth.calculateAgeOfParents(this.user.spouseFamilyHealth, this.user.spouseResults, this.user.clientPersonalInfo.gender);            \r\n        }\r\n        \r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","import $ from 'jquery';\r\nimport 'jquery-ui-dist';\r\nimport {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateMyHealth} from '../utilities/calculations/calculateMyHealth';\r\n\r\n@inject(Router, User, CalculateMyHealth)\r\nexport class myhealth {\r\n    formHeightWeight = \"\";\r\n\r\n    constructor(router, user, calculateMyHealth) {\r\n        this.calculateMyHealth = calculateMyHealth;\r\n        this.router = router;\r\n        this.user = user;\r\n    }\r\n\r\n    //Checks for valid height for the client.\r\n    checkHeight(person) {\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(person.height);\r\n        person.validHeight = valid;\r\n        person.heightError = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = person.height.split(\"'\");\r\n            person.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        //This handles the case where they first entered their weight\r\n        if(person.validWeight) {\r\n            this.calculateBMI(person);\r\n        }\r\n    }\r\n\r\n    //This calculates the BMI once both of the height and weight have been entered\r\n    calculateBMI(person) {\r\n        if(person.validHeight) {\r\n            this.calculateMyHealth.calculateBMI(person);\r\n            person.validBMI = true;\r\n            this.setIconType(person, false)\r\n            person.iconType = \"./src/health/images/\" + person.iconType + \".jpg\";\r\n        }\r\n        person.validWeight = true;\r\n        person.formHeightWeight = true;\r\n    }\r\n\r\n    //Determines the icon types give the client/spouse. If client is passed in then, spouse = false.\r\n    setIconType(person, spouse) {\r\n        switch(true) {\r\n            case person.bmi < 18.5:\r\n                person.iconType = \"underweight\";\r\n                break;\r\n            case person.bmi >= 18.5 && person.bmi < 25:\r\n                person.iconType = \"normal\";\r\n                break;\r\n            case person.bmi >= 25 && person.bmi < 30:\r\n                person.iconType = \"overweight\";\r\n                break;\r\n            case person.bmi > 30 && person.bmi < 35:\r\n                person.iconType = \"obese\";\r\n                break;\r\n            default:\r\n                person.iconType = \"extremely-obese\";\r\n                break;\r\n        }\r\n        return person;\r\n    }\r\n\r\n    diabetes(person) {\r\n        person.checkdiabetes = !person.checkdiabetes;\r\n    }\r\n\r\n    mental(person) {\r\n        person.checkmental = !person.checkmental;\r\n    }\r\n\r\n    //CHECK SMOKING\r\n    smoking(person) {\r\n        person.checksmoking = !person.checksmoking;\r\n    }\r\n\r\n    stillSmoking(person) {\r\n        person.checkStillSmoking = !person.checkStillSmoking;\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        var check = true;\r\n\r\n        //EXERCISE\r\n        function exerciseCalculations(person, calc, results) {\r\n            if(person.exercisePerWeek && person.exercisePerWeek != \"Please Select\") {\r\n                if(person.bmi) {\r\n                    calc.calculateExercise(person);\r\n                    results.exercise = person.exerciseLifeExpectancy;\r\n                }\r\n                else {\r\n                    check = false;\r\n                    alert(\"We need a BMI to factor in your exercise per week\");\r\n                }\r\n            }\r\n        }\r\n        \r\n        function smokerCalculations(person, calc, results) {\r\n            if(person.checksmoking) {\r\n                if(person.kindOfSmoker && person.kindOfSmoker != \"Please Select\") {\r\n                    if(person.checkStillSmoking) {\r\n                        calc.calculateSmoker(person);\r\n                        results.smoker = person.smokerLifeExpectancy;\r\n                    }\r\n                }\r\n                else {\r\n                    check = false;\r\n                    alert(\"Enter what kind of smoker you are\");\r\n                }\r\n\r\n                if(!person.checkStillSmoking && person.ageQuitSmoking && person.ageQuitSmoking != \"Please Select\") {\r\n                    calc.calculateSmoker(person);\r\n                    results.smoker = person.smokerLifeExpectancy;\r\n                }\r\n                else if(!person.checkStillSmoking && (person.ageQuitSmoking || person.ageQuitSmoking != \"Please Select\")) {\r\n                    check = false;\r\n                    alert(\"Enter what age you quit smoking\");\r\n                }\r\n            }\r\n        }\r\n\r\n        //this.calculateMyHealth.calculateExercise(this.user.clientMyHealth);\r\n\r\n        exerciseCalculations(this.user.clientMyHealth, this.calculateMyHealth, this.user.clientResults);\r\n        smokerCalculations(this.user.clientMyHealth, this.calculateMyHealth, this.user.clientResults);\r\n        this.calculateMyHealth.calculateMentalHealth(this.user.clientMyHealth, this.user.clientResults);\r\n        console.log(this.user.clientMyHealth);\r\n\r\n        if(this.user.clientPersonalInfo.checkspouse) {\r\n            exerciseCalculations(this.user.spouseMyHealth, this.calculateMyHealth, this.user.spouseResults);\r\n            smokerCalculations(this.user.spouseMyHealth, this.calculateMyHealth, this.user.spouseResults);\r\n            this.calculateMyHealth.calculateMentalHealth(this.user.spouseMyHealth, this.user.spouseResults);\r\n            console.log(this.user.spouseMyHealth);\r\n        }\r\n        \r\n        if(check) this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    //This takes care of setting up the content for the tooltips\r\n    attached() {\r\n        //=====================CLIENT TOOLTIPS============================\r\n        $('#height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise, you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n\r\n        $('#health-rank-tooltip').tooltip({\r\n            content: \"How you view your health impacts your life expectancy.\"\r\n        })\r\n\r\n        $('#mental-tooltip').tooltip({\r\n            content: \"The serious mental conditions we account for include:<br>\" + \r\n                \"<b>Bipolar Disorder</b>, <br>\" + \r\n                \"<b>Schizophrenia</b>, <br>\" +\r\n                \"<b>Drug & Alcohol Abuse</b>, <br>\" +\r\n                \"<b>Recurrent Depression</b>.\"\r\n        })\r\n\r\n        //=====================SPOUSE TOOLTIPS============================\r\n        $('#spouse-height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#spouse-weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#spouse-exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise, you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n\r\n        $('#spouse-health-rank-tooltip').tooltip({\r\n            content: \"How you view your health impacts your life expectancy.\"\r\n        })\r\n\r\n        $('#spouse-mental-tooltip').tooltip({\r\n            content: \"The serious mental conditions we account for include:<br>\" + \r\n                \"<b>Bipolar Disorder</b>, <br>\" + \r\n                \"<b>Schizophrenia</b>, <br>\" +\r\n                \"<b>Drug & Alcohol Abuse</b>, <br>\" +\r\n                \"<b>Recurrent Depression</b>.\"\r\n        })\r\n\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { User } from '../services/user';\r\nimport { CalculateOccupation } from '../utilities/calculations/calculateOccupation';\r\nimport { OccupationData } from '../services/data/occupationData';\r\n\r\n@inject(Router, User, CalculateOccupation, OccupationData)\r\nexport class occupation {\r\n\r\n    constructor(router, user, calculateOccupation, occupationData) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateOccupation = calculateOccupation;\r\n        this.occupationData = occupationData;\r\n        this.occupationData.currentJobArray = this.occupationData.laborArray;\r\n    }\r\n\r\n    //DRAG AND DROP\r\n    allowDrop(ev) {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    drag(ev) {\r\n        ev.dataTransfer.setData(\"tonberry\", ev.target.innerText);\r\n        ev.dataTransfer.setData(\"occu-name\", ev.srcElement.textContent);\r\n        return true;\r\n    }\r\n\r\n    removeDrop(ev) {\r\n        ev.dataTransfer.set\r\n    }\r\n\r\n    drop(ev) {\r\n        ev.preventDefault();\r\n        if(ev.target.id === \"spouse-drop-box\")\r\n            this.user.spouseOccupation.occupationArray.push(ev.dataTransfer.getData(\"occu-name\"));\r\n        if(ev.target.id === \"drop-box\")\r\n            this.user.clientOccupation.occupationArray.push(ev.dataTransfer.getData(\"occu-name\"));\r\n        var current;\r\n        var data = ev.dataTransfer.getData(\"tonberry\");\r\n        var elements = document.getElementsByClassName(\"current-buttons\");\r\n        for(var i = 0; i < elements.length; i++) {\r\n            if((elements[i].textContent).trim() === data.trim()) {\r\n                current = elements[i];\r\n            }\r\n        }\r\n        ev.currentTarget.appendChild(current);\r\n    }\r\n\r\n    //INCOME\r\n    income(person) {\r\n        person.checkincome = !person.checkincome;\r\n    }\r\n\r\n    //CHECK OCCUPATION TYPE\r\n    checkOccupation(person, occupationName) {\r\n        person.type = occupationName.type;\r\n        switch(true) {\r\n            case occupationName.type.trim() === \"Skilled/Unskilled\":\r\n                this.occupationData.currentJobArray = this.occupationData.laborArray;\r\n                break;\r\n            case occupationName.type.trim() === \"Industry\":\r\n                this.occupationData.currentJobArray = this.occupationData.industryArray;\r\n                break;\r\n            case occupationName.type.trim() === \"Public Service\":\r\n                this.occupationData.currentJobArray = this.occupationData.publicServiceArray;\r\n                break;\r\n            case occupationName.type.trim() === \"Management\":\r\n                this.occupationData.currentJobArray = this.occupationData.managementArray;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');\r\n    }\r\n\r\n    submit() {\r\n        var check = true;\r\n        if(this.user.clientOccupation.occupationArray.length != 0)\r\n            this.calculateOccupation.calculationOccupation(this.user.clientOccupation);\r\n        if(this.user.spouseOccupation.occupationArray.length != 0)\r\n            this.calculateOccupation.calculationOccupation(this.user.spouseOccupation);\r\n        if(this.user.clientOccupation.checkincome) {\r\n            if(!isNaN(this.user.clientOccupation.income)) {\r\n                this.calculateOccupation.calculateIncome(this.user.clientOccupation, this.user.clientPersonalInfo.gender, this.user.clientResults);\r\n            }\r\n            else {\r\n                check = false;\r\n                alert('Enter a valid income');\r\n            }\r\n        }\r\n           \r\n        if(this.user.clientPersonalInfo.checkspouse) {\r\n            if(this.user.spouseOccupation.checkincome) {\r\n                if(!isNaN(this.user.spouseOccupation.income)) {\r\n                    this.calculateOccupation.calculateIncome(this.user.spouseOccupation, this.user.spousePersonalInfo.gender, this.user.spouseResults);\r\n                }\r\n                else {\r\n                    check = false;\r\n                    alert('Enter a valid income');\r\n                }\r\n            }\r\n        }\r\n\r\n        if(check) this.router.navigate('#/personalinfo');\r\n    }\r\n}","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {Chart} from '../utilities/chart';\r\nimport {CalculateResults} from '../utilities/calculations/calculateResults';\r\n\r\n@inject(Router, User, Chart, CalculateResults)\r\nexport class results {\r\n    constructor(router, user, chart, calculateResults) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.chart = chart;\r\n        this.calculateResults = calculateResults;\r\n    }\r\n\r\n    attached() {\r\n        var chartTuples = [];\r\n        if(this.user.clientPersonalInfo.checkspouse) {\r\n            chartTuples = [{\r\n                    name: 'Client',\r\n                    data:  this.user.clientResults.clientTuples\r\n                }, {\r\n                    name: 'Co-client',\r\n                    data:  this.user.spouseResults.spouseTuples\r\n                }, {\r\n                    name: 'Average',\r\n                    data:  this.user.clientResults.averageTuples\r\n                }];\r\n        }\r\n        else {\r\n            chartTuples = [{\r\n                    name: 'Client',\r\n                    data:  this.user.clientResults.clientTuples\r\n                }, {\r\n                    name: 'Average',\r\n                    data:  this.user.clientResults.averageTuples\r\n                }]\r\n        }\r\n\r\n        this.chart.createChart('chart-container', this.user.clientPersonalInfo.age, chartTuples);\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","import {singleton} from 'aurelia-framework';\r\nimport {PersonalInfoData} from '../services/data/personalInfoData';\r\nimport {MyHealthData} from '../services/data/myHealthData';\r\nimport {FamilyHealthData} from '../services/data/familyHealthData';\r\nimport {OccupationData} from '../services/data/occupationData';\r\nimport {ResultsData} from '../services/data/resultsData';\r\n\r\n@singleton()\r\nexport class User {\r\n    constructor() {\r\n        this.clientPersonalInfo = new PersonalInfoData();\r\n        this.spousePersonalInfo = new PersonalInfoData();\r\n        \r\n        this.clientMyHealth = new MyHealthData();\r\n        this.spouseMyHealth = new MyHealthData();\r\n\r\n        this.clientFamilyHealth = new FamilyHealthData();\r\n        this.spouseFamilyHealth = new FamilyHealthData();\r\n\r\n        this.clientOccupation = new OccupationData();\r\n        this.spouseOccupation = new OccupationData();\r\n\r\n        this.clientResults = new ResultsData();\r\n        this.spouseResults = new ResultsData();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport * as HighCharts from \"highcharts\";\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class Chart {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    createChart(containerID, age, chartTuples) {\r\n        //console.log(this.user.clientPersonalInfo.testTuples);\r\n        Highcharts.chart(containerID, {\r\n                title: {\r\n                    text: 'Life Expectancy'\r\n                },\r\n                xAxis: {\r\n                    title: {\r\n                        text: 'Age'\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    series: {\r\n                        pointStart: age\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: 'Chance of Living'\r\n                    }\r\n                },\r\n                series: chartTuples\r\n            }); \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {StateData} from '../services/data/stateData';\r\nimport {OccupationData} from '../services/data/occupationData';\r\n\r\n@inject(StateData, OccupationData)\r\nexport class ReadFile {\r\n\r\n    constructor(stateData, occupationData) {\r\n        this.stateData = stateData;\r\n        this.occupationData = occupationData;\r\n    }\r\n\r\n    //Given the json data this method will create a set of states and save in stateData.js\r\n    getStateList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject) { \r\n            self.stateData.stateSet.add(stateObject.State.toLowerCase())\r\n        });\r\n        this.getCountyList(jsonData);\r\n    } \r\n\r\n    //Given a state as input this method reads the json object and returns all counties for that state.\r\n    getCountyList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject){\r\n            if(self.stateData.stateToCountyMap.has(stateObject.State.toLowerCase())) {\r\n                   var existingValues = self.stateData.stateToCountyMap.get(stateObject.State.toLowerCase());\r\n                   // Format for each county => County : Male Life Expectancy : Female Life Expectancy\r\n                   existingValues += \" \" + stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\";\r\n                   self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), existingValues);\r\n            }\r\n            else self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\");\r\n        });\r\n    }\r\n\r\n    //Given json data as input this method reads the json object and saves the information in a category set and map for jobs.\r\n    getCategoryList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach((jobObject) => {\r\n            self.occupationData.occupationCategorySet.add(jobObject.Category);\r\n            var existingValues = self.occupationData.categoryToJobMap.get(jobObject.Category);\r\n            if(existingValues === undefined) existingValues = \"\";\r\n            existingValues += \" \" + jobObject.Occupation + \":\";\r\n            self.occupationData.categoryToJobMap.set(jobObject.Category, existingValues);\r\n        });\r\n    }\r\n\r\n    //Given json data and array of user occupations, this will find the change in life expectancy from occupation.\r\n    getOccupationDeathNumber(jsonData, arrayOccupations) {\r\n        var self = this;\r\n        var deathTotal = 0;\r\n        jsonData.forEach((jobObject) => {\r\n            arrayOccupations.forEach((userOccupation) => {\r\n                if(userOccupation.trim() === jobObject.Occupation.trim()) {\r\n                    deathTotal += parseInt(jobObject.Deaths);\r\n                }\r\n            })\r\n        });\r\n        return deathTotal;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\n\r\n@inject(User)\r\nexport class Slider {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n    \r\n    createAgeSlider() {\r\n        $(\"#age\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: this.user.clientPersonalInfo.age,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientPersonalInfo.age = data.from;\r\n            }\r\n        });\r\n\r\n        $(\"#spouseage\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: this.user.spousePersonalInfo.age,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spousePersonalInfo.age = data.from;\r\n            }\r\n        });\r\n    }\r\n}","export class FamilyHealthData {\r\n    constructor() {\r\n        this.ageOfParents;\r\n        \r\n        this.checkHeartDisease = false;\r\n        this.checkCancer = false;\r\n        this.checkMentalHealth = false;\r\n        this.checkDiabetes = false;\r\n        \r\n    }\r\n}","export class MyHealthData {\r\n    constructor() {\r\n        this.height;\r\n        this.heightInInches;\r\n        this.weight;\r\n        this.bmi;\r\n        this.formHeightWeight = false;\r\n        this.exerciseLifeExpectancy = 0;\r\n\r\n        this.validHeight = false;\r\n        this.validWeight = false;\r\n        this.validBMI = false;\r\n        this.iconType = \"underweight\";\r\n        this.heightError = \"\";\r\n\r\n        this.exercisePerWeek;\r\n        this.healthRank;\r\n        this.checkdiabetes = false;\r\n        this.checkmental = false;\r\n        this.alcoholPerWeek;\r\n\r\n        this.checksmoking = false;\r\n        this.checkStillSmoking = true;\r\n        this.kindOfSmoker;\r\n        this.ageQuitSmoking;\r\n        this.smokerLifeExpectancy = 0;\r\n    }\r\n}","export class OccupationData {\r\n    constructor() {\r\n        this.checkincome = false;\r\n        this.income = 0;\r\n        this.incomeLifeExpectancy = 0;\r\n\r\n        this.occupationType = ['Skilled/Unskilled', 'Industry', 'Public Service', 'Management'];\r\n        this.type = 'Skilled/Unskilled';\r\n\r\n        this.occupationCategorySet = new Set();\r\n        this.categoryToJobMap = new Map();\r\n        this.occupationChangeInLifeExpectancy = 0;\r\n\r\n        this.laborArray = [];\r\n        this.industryArray = [];\r\n        this.publicServiceArray = [];\r\n        this.managementArray = [];\r\n        this.currentJobArray = [];\r\n        //Keeps track of current occupation in drag and drop\r\n        this.occupationArray = [];\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class PersonalInfoData {\r\n    constructor() {\r\n        this.checkspouse = false;\r\n        \r\n        this.age = 30;\r\n        this.checkgender = true;\r\n        this.gender = 'male';\r\n\r\n        this.education;\r\n        this.race = 'white';\r\n\r\n        this.maritalStatus;\r\n        this.isSingle = false;\r\n        this.isMarried = false;\r\n        this.yearsOfMarriage = 0;\r\n        this.isWidowed = false;\r\n        this.yearsSinceSpousePassing = 0;\r\n        this.isDivorced = false;\r\n        this.yearsOfDivorce = 0;\r\n\r\n        this.state = \"Please Select\";\r\n        this.county = 'Please Select';\r\n        this.countyLifeExpectancy;\r\n        this.expectedYearsLeft;\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class ResultsData {\r\n    constructor() {\r\n        //PERSONAL INFO EXPECTANCIES\r\n        this.education = 0;\r\n        this.marital = 0;\r\n\r\n        //MY HEALTH EXPECTANCIES\r\n        this.exercise = 0;\r\n        this.smoker = 0;\r\n        this.diabetes = 0;\r\n        this.mental = 0;\r\n        \r\n        //FAMILY HEALTH EXPECTANCIES\r\n        this.parentAges = 0;\r\n\r\n        //OCCUPATION EXPECTANCIES\r\n        this.income = 0;\r\n\r\n        //OVERALL EXPECTANCY\r\n        this.overallLifeExpectancy = 0;\r\n\r\n        //TUPLES\r\n        this.clientTuples = [];\r\n        this.clientTableAge = [];\r\n        this.clientTableValue = [];\r\n\r\n        this.spouseTuples = [];\r\n        this.spouseTableAge = [];\r\n        this.spouseTableValue = [];\r\n\r\n        this.averageTuples = [];\r\n        this.averageTableAge = [];\r\n        this.averageTableValue = [];\r\n\r\n        this.finalLifeExpectancy = 0;\r\n    }\r\n}","export class StateData {\r\n    stateSet = new Set();\r\n    stateToCountyMap = new Map();\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateFamilyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    calculateAgeOfParents(person, personResults, gender) {\r\n        var parentAges = 0;\r\n        if(person.ageOfParents.indexOf(\"Both after\") !== -1 || person.ageOfParents.indexOf(\"both still alive and older than 75\") !== -1) {\r\n            if(gender == \"Male\" || gender == 'male') parentAges += 4.2;\r\n            else if(gender == \"Female\") parentAges += 3.5;\r\n        }\r\n        else if(person.ageOfParents.indexOf(\"Both before\") !== -1) {\r\n            if(gender == \"Male\" || gender == 'male') parentAges -= 4.2;\r\n            else if(gender == \"Female\") parentAges -= 3.5;\r\n        }\r\n\r\n        personResults.parentAges = parentAges;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateMyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    //this calculates the body mass index(if you're wondering, tweet me @JesseCochran1)\r\n    calculateBMI(person) {\r\n        var metricWeight = person.weight * 0.45;\r\n        var metricHeight = person.heightInInches * 0.025;\r\n        var metricHeightSquared = metricHeight * metricHeight;\r\n        person.bmi = (metricWeight / metricHeightSquared).toPrecision(4);\r\n    }\r\n\r\n    //this calculates added/decreased life expectancy based on how many hours of exercise per week\r\n    calculateExercise(person) {\r\n        var exerciseLifeExpectancy = 0;\r\n\r\n        if(person.exercisePerWeek) {\r\n            var bmi = person.bmi;\r\n\r\n            if(person.exercisePerWeek.indexOf(\"0\") !== -1) {\r\n                exerciseLifeExpectancy = 0;\r\n                if(bmi >= 18.5 && bmi < 25) exerciseLifeExpectancy -= 4.7;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 3.9;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 5.0;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 7.2;\r\n            }\r\n            else if(person.exercisePerWeek.indexOf(\"Less\") !== -1) {\r\n                exerciseLifeExpectancy = 1.8;\r\n                if(bmi >= 18.5 && bmi <= 24.9) exerciseLifeExpectancy -= 2.4;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 1.8;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 3.2;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 6.2;\r\n            }\r\n            else if(person.exercisePerWeek.indexOf(\"Approximately\") !== -1) {\r\n                exerciseLifeExpectancy = 3.4;\r\n                if(bmi >= 18.5 && bmi <= 24.9) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 1.6;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 4.5;\r\n            }\r\n            else if(person.exercisePerWeek.indexOf(\"More\") !== -1) {\r\n                exerciseLifeExpectancy = 4.5;\r\n                if(bmi >= 18.5 && bmi <= 24.9) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 1.6;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 4.5;\r\n            }\r\n        }\r\n        person.exerciseLifeExpectancy = exerciseLifeExpectancy;\r\n    }\r\n\r\n    //this calculates added/decreased life expectancy based on smoking\r\n    calculateSmoker(person) {\r\n        var smokerLifeExpectancy = 0;\r\n        var stillSmoking = person.checkStillSmoking;\r\n        var kindOfSmoker = person.kindOfSmoker;\r\n        \r\n        //CHECK KIND OF SMOKER\r\n        if(kindOfSmoker.indexOf(\"Light\") !== -1) {\r\n            smokerLifeExpectancy = -4.8;\r\n\r\n            //Add years if they quit smoking\r\n            if(!stillSmoking) { \r\n                var age = person.ageQuitSmoking;\r\n                if(age.indexOf(\"25\") !== -1) smokerLifeExpectancy += 4.8; //max 10\r\n                else if(age.indexOf(\"35\") !== -1) smokerLifeExpectancy += 4.8; //max 9\r\n                else if(age.indexOf(\"45\") !== -1) smokerLifeExpectancy += 4.8; //max 6\r\n                else if(age.indexOf(\"60\") !== -1) smokerLifeExpectancy += 3; //max 3\r\n            }\r\n        }\r\n        else if(kindOfSmoker.indexOf(\"Average\") !== -1) {\r\n            smokerLifeExpectancy -= 6.8;\r\n\r\n            //Add years if they quit smoking\r\n            if(!stillSmoking) { \r\n                var age = person.ageQuitSmoking;\r\n                if(age.indexOf(\"25\") !== -1) smokerLifeExpectancy += 6.8; //max 10\r\n                else if(age.indexOf(\"35\") !== -1) smokerLifeExpectancy += 6.8; //max 9\r\n                else if(age.indexOf(\"45\") !== -1) smokerLifeExpectancy += 6; //max 6\r\n                else if(age.indexOf(\"60\") !== -1) smokerLifeExpectancy += 3; //max 3\r\n            }\r\n        }\r\n        else if(kindOfSmoker.indexOf(\"Heavy\") !== -1) {\r\n            smokerLifeExpectancy -= 8.8;\r\n\r\n            //Add years if they quit smoking\r\n            if(!stillSmoking) { \r\n                var age = person.ageQuitSmoking;\r\n                if(age.indexOf(\"25\") !== -1) smokerLifeExpectancy += 8.8; //max 10\r\n                else if(age.indexOf(\"35\") !== -1) smokerLifeExpectancy += 8.8; //max 9\r\n                else if(age.indexOf(\"45\") !== -1) smokerLifeExpectancy += 6; //max 6\r\n                else if(age.indexOf(\"60\") !== -1) smokerLifeExpectancy += 3; //max 3\r\n            }\r\n        }\r\n        person.smokerLifeExpectancy = smokerLifeExpectancy;\r\n    }\r\n\r\n    //this calculates added/decreased life expectancy based on mental illness\r\n    calculateMentalHealth(person, personResults) {\r\n        if(person.checkmental) {\r\n            personResults.mental = -9;\r\n        }\r\n        else {\r\n            personResults.mental = 0;\r\n        }\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../../services/user';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {ReadFile} from 'utilities/readFile';\r\nimport {OccupationData} from '../../services/data/occupationData';\r\n\r\n@inject(User, HttpClient, ReadFile, OccupationData)\r\nexport class CalculateOccupation {\r\n    constructor(user, httpClient, readFile, occupationData) {\r\n        this.user = user;\r\n        this.httpClient = httpClient;\r\n        this.readFile = readFile;\r\n        this.occupationData = occupationData;\r\n    }\r\n\r\n    //Calculate income\r\n    calculateIncome(person, gender, results) {\r\n        var incomeLifeExpectancy = 0;\r\n\r\n        if(person.checkincome) {\r\n            if(parseFloat(person.income) >= 188996) {\r\n                if(gender == \"male\" || gender == \"Male\") incomeLifeExpectancy += 2.34;\r\n                else if(gender == \"Female\") incomeLifeExpectancy += 2.91;\r\n            }\r\n            else {\r\n                if(gender == \"male\" || gender == \"Male\") incomeLifeExpectancy += 0.32;\r\n                else if(gender == \"Female\") incomeLifeExpectancy += 0.04;\r\n            }\r\n        }\r\n\r\n        person.incomeLifeExpectancy = incomeLifeExpectancy;\r\n        results.income = incomeLifeExpectancy;\r\n    }\r\n\r\n    //Loads the occupation data\r\n    async loadOccupation() {\r\n        let data = await this.httpClient.fetch('/api/occupation-table/occupation.json');\r\n        let loadedData = await data.json();\r\n        this.readFile.getCategoryList(loadedData);\r\n        this.createJobArrays(\"Manual Labor\");\r\n        this.createJobArrays(\"Industry\");\r\n        this.createJobArrays(\"Public Service\");\r\n        this.createJobArrays(\"Management\");\r\n    }\r\n\r\n    //Calculate life expectancy values based on occupation\r\n    async calculationOccupation(person) {\r\n        let data = await this.httpClient.fetch('/api/occupation-table/occupation.json');\r\n        let loadedData = await data.json();\r\n        person.occupationChangeInLifeExpectancy = this.readFile.getOccupationDeathNumber(loadedData, person.occupationArray);\r\n        console.log(person.occupationChangeInLifeExpectancy);\r\n    }\r\n\r\n    //Creates job array\r\n    createJobArrays(type) {\r\n        var currentArray = [];\r\n        var listToArray = this.occupationData.categoryToJobMap.get(type).split(\":\");\r\n        listToArray.forEach(function (job) {\r\n            currentArray.push(job);\r\n        }); \r\n        //Gets rid of blank space at end of array\r\n        currentArray.pop();\r\n        switch(true) {\r\n            case type === 'Manual Labor':\r\n                this.occupationData.laborArray = currentArray;\r\n                break;\r\n            case type === 'Industry':\r\n                this.occupationData.industryArray = currentArray;\r\n                break;\r\n            case type === 'Public Service':\r\n                this.occupationData.publicServiceArray = currentArray;\r\n                break;\r\n            case type === 'Management':\r\n                this.occupationData.managementArray = currentArray;\r\n                break;\r\n        }\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {User} from '../../services/user';\r\n\r\n@inject(HttpClient, User)\r\nexport class CalculateResults {\r\n    httpClient;\r\n\r\n    constructor(httpClient, user) {\r\n        this.httpClient = httpClient;\r\n        this.user = user;\r\n    }\r\n\r\n    //Gets the life table based on the users race and gender\r\n    async getLifeTableData(client, clientResults, spouse, spouseResults) {\r\n        let clientEthnicityExpectancy = await this.httpClient.fetch('/api/life-table/' + client.race.toLowerCase() + '-' + client.gender.toLowerCase() + '.json');\r\n        let clientResultsData = await clientEthnicityExpectancy.json();\r\n        this.setUserExpectedAge(clientResultsData, client);\r\n\r\n        var spouseResultsData;\r\n        if(client.checkspouse) {\r\n            let spouseEthnicityExpectancy = await this.httpClient.fetch('/api/life-table/' + spouse.race.toLowerCase() + '-' + spouse.gender.toLowerCase() + '.json');\r\n            spouseResultsData = await spouseEthnicityExpectancy.json();\r\n            this.setUserExpectedAge(spouseResultsData, spouse);\r\n        }\r\n\r\n        this.getTestTuples(clientResultsData, client, clientResults,\r\n            spouseResultsData, spouse, spouseResults);\r\n    }\r\n\r\n    //Iterates through the json object to determine the user's expected age\r\n    setUserExpectedAge(data, person) {\r\n        data.forEach(function(value) {\r\n            //If the user is currently the age in the json object, then the current age is set\r\n            var currentAgeArray = [];\r\n            currentAgeArray[0] = parseInt(value.Age.slice(0, 2));\r\n            currentAgeArray[1] = parseInt(value.Age.slice(3, 5));\r\n            if((currentAgeArray[0] === person.age || currentAgeArray[1] === person.age) && person.age <= currentAgeArray[0]) {\r\n                person.expectedYearsLeft = parseInt(value.Number);\r\n            }\r\n        });\r\n    }\r\n\r\n    //Education calculation\r\n    calculateEducation(person, results) {\r\n        var educationLifeExpectancy = 0;\r\n        var education = person.education;\r\n        if(education.indexOf(\"Didn't\") !== -1) { //If didn't complete high school\r\n            if(person.gender == 'Male' || person.gender == 'male') educationLifeExpectancy -= 2;\r\n            else if(person.gender == 'Female') educationLifeExpectancy -= 0.4;\r\n        } \r\n        if(education.indexOf(\"trade school\") !== -1) { //If graduated high school\r\n            if(person.gender == 'Male' || person.gender == 'male') educationLifeExpectancy -= 0.4;\r\n            else if(person.gender == 'Female') educationLifeExpectancy += 0.25;\r\n        } \r\n        if(education.indexOf(\"college\") !== -1) { //If graduated college or more\r\n            if(person.gender == 'Male' || person.gender == 'male') educationLifeExpectancy += 3;\r\n            else if(person.gender == 'Female') educationLifeExpectancy += 1.9;\r\n        } \r\n\r\n        results.education = educationLifeExpectancy;\r\n    }\r\n\r\n    //Add years from expectancies\r\n    addExpectancies(personResults) {\r\n        personResults.overallLifeExpectancy = 0;\r\n        //Personal Info Factors\r\n        personResults.overallLifeExpectancy += personResults.education;\r\n        \r\n        //MyHealth Factors\r\n        personResults.overallLifeExpectancy += personResults.exercise;\r\n        personResults.overallLifeExpectancy += personResults.smoker;\r\n        personResults.overallLifeExpectancy += personResults.diabetes;\r\n        personResults.overallLifeExpectancy += personResults.mental;\r\n\r\n        //FamilyHealth Factors\r\n        personResults.overallLifeExpectancy += personResults.parentAges;\r\n\r\n        //Occupation Factors\r\n        personResults.overallLifeExpectancy += personResults.income;\r\n    }\r\n    \r\n    //Gets test tuples for chart data\r\n    getTestTuples(clientResultsData, client, clientResults,\r\n            spouseResultsData, spouse, spouseResults) {\r\n        \r\n        //SUBTRACT DIABETES YEARS\r\n        function calculateDiabetes(person, age, personResults) {\r\n            if(person.checkdiabetes) {\r\n                if(age < 70) personResults.overallLifeExpectancy -= 5.4;\r\n                else if(age >= 70) personResults.overallLifeExpectancy -= 4.0;\r\n                else if(age >= 80) personResults.overallLifeExpectancy -= 2.5;\r\n                else if(age >= 90) personResults.overallLifeExpectancy -= 1.0;\r\n                else if(age >= 100) personResults.overallLifeExpectancy -= 0;\r\n            } \r\n        }\r\n\r\n        var clientTuples = [];\r\n        var clientTableAge = [];\r\n        var clientTableValue = [];\r\n        var self = this;\r\n        var age, more, less, difference, number, check90, check75, check50, check25, check10;\r\n        check90 = true; \r\n        check75 = true; \r\n        check50 = true; \r\n        check25 = true; \r\n        check10 = true;\r\n        //CLIENT\r\n        clientResultsData.forEach(function(value, i) {\r\n            if(parseInt(value.Age) >= client.age) {\r\n                if(value.Number < 90000 && check90) {\r\n                    age = clientResultsData[i-1].Age;\r\n                    more = clientResultsData[i].Number;\r\n                    less = clientResultsData[i-1].Number;\r\n                    difference = more - less;\r\n                    number = (more - 90000) / difference;\r\n\r\n                    clientTableAge.push((parseInt(age) + number).toFixed(2));\r\n                    clientTableValue.push(\"90%\");\r\n                    check90 = false;\r\n                }\r\n                else if(value.Number < 75000 && check75) {\r\n                    age = clientResultsData[i-1].Age;\r\n                    more = clientResultsData[i].Number;\r\n                    less = clientResultsData[i-1].Number;\r\n                    difference = more - less;\r\n                    number = (more - 75000) / difference;\r\n\r\n                    clientTableAge.push((parseInt(age) + number).toFixed(2));\r\n                    clientTableValue.push(\"75%\");\r\n                    check75 = false;\r\n                }\r\n                else if(value.Number < 50000 && check50) {\r\n                    age = clientResultsData[i-1].Age;\r\n                    more = clientResultsData[i].Number;\r\n                    less = clientResultsData[i-1].Number;\r\n                    difference = more - less;\r\n                    number = (more - 50000) / difference;\r\n\r\n                    clientTableAge.push((parseInt(age) + number).toFixed(2));\r\n                    clientTableValue.push(\"50%\");\r\n                    calculateDiabetes(self.user.clientMyHealth, parseInt(age) + number, clientResults);\r\n                    clientResults.finalLifeExpectancy = (parseInt(age) + number).toFixed(2);\r\n\r\n                    check50 = false;\r\n                }\r\n                else if(value.Number < 25000 && check25) {\r\n                    age = clientResultsData[i-1].Age;\r\n                    more = clientResultsData[i].Number;\r\n                    less = clientResultsData[i-1].Number;\r\n                    difference = more - less;\r\n                    number = (more - 25000) / difference;\r\n\r\n                    clientTableAge.push((parseInt(age) + number).toFixed(2));\r\n                    clientTableValue.push(\"25%\");\r\n                    check25 = false;\r\n                }\r\n                else if(value.Number < 10000 && check10) {\r\n                    age = clientResultsData[i-1].Age;\r\n                    more = clientResultsData[i].Number;\r\n                    less = clientResultsData[i-1].Number;\r\n                    difference = more - less;\r\n                    number = (more - 10000) / difference;\r\n\r\n                    clientTableAge.push((parseInt(age) + number).toFixed(2));\r\n                    clientTableValue.push(\"10%\");\r\n                    check10 = false;\r\n                }\r\n\r\n                clientTuples.push([parseInt(value.Age), value.Number]);\r\n            }\r\n        });\r\n\r\n        var spouseTuples = [];\r\n        var spouseTableAge = [];\r\n        var spouseTableValue = [];\r\n\r\n        check90 = true; \r\n        check75 = true; \r\n        check50 = true; \r\n        check25 = true; \r\n        check10 = true;\r\n        //CO-CLIENT\r\n        if(client.checkspouse) {\r\n            spouseResultsData.forEach(function(value, i) {\r\n                if(parseInt(value.Age) >= spouse.age) {\r\n                    if(value.Number < 90000 && check90) {\r\n                        age = spouseResultsData[i-1].Age;\r\n                        more = spouseResultsData[i].Number;\r\n                        less = spouseResultsData[i-1].Number;\r\n                        difference = more - less;\r\n                        number = (more - 90000) / difference;\r\n\r\n                        spouseTableAge.push((parseInt(age) + number).toFixed(2));\r\n                        spouseTableValue.push(\"90%\");\r\n                        check90 = false;\r\n                    }\r\n                    else if(value.Number < 75000 && check75) {\r\n                        age = spouseResultsData[i-1].Age;\r\n                        more = spouseResultsData[i].Number;\r\n                        less = spouseResultsData[i-1].Number;\r\n                        difference = more - less;\r\n                        number = (more - 75000) / difference;\r\n\r\n                        spouseTableAge.push((parseInt(age) + number).toFixed(2));\r\n                        spouseTableValue.push(\"75%\");\r\n                        check75 = false;\r\n                    }\r\n                    else if(value.Number < 50000 && check50) {\r\n                        age = spouseResultsData[i-1].Age;\r\n                        more = spouseResultsData[i].Number;\r\n                        less = spouseResultsData[i-1].Number;\r\n                        difference = more - less;\r\n                        number = (more - 50000) / difference;\r\n\r\n                        spouseTableAge.push((parseInt(age) + number).toFixed(2));\r\n                        spouseTableValue.push(\"50%\");\r\n                        calculateDiabetes(self.user.spouseMyHealth, parseInt(age) + number, spouseResults);\r\n                        spouseResults.finalLifeExpectancy = (parseInt(age) + number).toFixed(2);\r\n\r\n                        check50 = false;\r\n                    }\r\n                    else if(value.Number < 25000 && check25) {\r\n                        age = spouseResultsData[i-1].Age;\r\n                        more = spouseResultsData[i].Number;\r\n                        less = spouseResultsData[i-1].Number;\r\n                        difference = more - less;\r\n                        number = (more - 25000) / difference;\r\n\r\n                        spouseTableAge.push((parseInt(age) + number).toFixed(2));\r\n                        spouseTableValue.push(\"25%\");\r\n                        check25 = false;\r\n                    }\r\n                    else if(value.Number < 10000 && check10) {\r\n                        age = spouseResultsData[i-1].Age;\r\n                        more = spouseResultsData[i].Number;\r\n                        less = spouseResultsData[i-1].Number;\r\n                        difference = more - less;\r\n                        number = (more - 10000) / difference;\r\n\r\n                        spouseTableAge.push((parseInt(age) + number).toFixed(2));\r\n                        spouseTableValue.push(\"10%\");\r\n                        check10 = false;\r\n                    }\r\n\r\n                    spouseTuples.push([parseInt(value.Age), value.Number]);\r\n                }\r\n            });\r\n        }\r\n\r\n        var averageTuples = [];\r\n        var averageTableAge = [];\r\n        var averageTableValue = [];\r\n\r\n        check90 = true; \r\n        check75 = true; \r\n        check50 = true; \r\n        check25 = true; \r\n        check10 = true;\r\n        //AVERAGE\r\n        clientResultsData.forEach(function(value, i) {\r\n            if(parseInt(value.Age) >= client.age) {\r\n                if(value.Number < 90000 && check90) {\r\n                    age = clientResultsData[i-1].Age;\r\n                    more = clientResultsData[i].Number;\r\n                    less = clientResultsData[i-1].Number;\r\n                    difference = more - less;\r\n                    number = (more - 90000) / difference;\r\n\r\n                    averageTableAge.push((parseInt(age) + number).toFixed(2));\r\n                    averageTableValue.push(\"90%\");\r\n                    check90 = false;\r\n                }\r\n                else if(value.Number < 75000 && check75) {\r\n                    age = clientResultsData[i-1].Age;\r\n                    more = clientResultsData[i].Number;\r\n                    less = clientResultsData[i-1].Number;\r\n                    difference = more - less;\r\n                    number = (more - 75000) / difference;\r\n\r\n                    averageTableAge.push((parseInt(age) + number).toFixed(2));\r\n                    averageTableValue.push(\"75%\");\r\n                    check75 = false;\r\n                }\r\n                else if(value.Number < 50000 && check50) {\r\n                    age = clientResultsData[i-1].Age;\r\n                    more = clientResultsData[i].Number;\r\n                    less = clientResultsData[i-1].Number;\r\n                    difference = more - less;\r\n                    number = (more - 50000) / difference;\r\n\r\n                    averageTableAge.push((parseInt(age) + number).toFixed(2));\r\n                    averageTableValue.push(\"50%\");\r\n                    check50 = false;\r\n                }\r\n                else if(value.Number < 25000 && check25) {\r\n                    age = clientResultsData[i-1].Age;\r\n                    more = clientResultsData[i].Number;\r\n                    less = clientResultsData[i-1].Number;\r\n                    difference = more - less;\r\n                    number = (more - 25000) / difference;\r\n\r\n                    averageTableAge.push((parseInt(age) + number).toFixed(2));\r\n                    averageTableValue.push(\"25%\");\r\n                    check25 = false;\r\n                }\r\n                else if(value.Number < 10000 && check10) {\r\n                    age = clientResultsData[i-1].Age;\r\n                    more = clientResultsData[i].Number;\r\n                    less = clientResultsData[i-1].Number;\r\n                    difference = more - less;\r\n                    number = (more - 10000) / difference;\r\n\r\n                    averageTableAge.push((parseInt(age) + number).toFixed(2));\r\n                    averageTableValue.push(\"10%\");\r\n                    check10 = false;\r\n                }\r\n\r\n                averageTuples.push([parseInt(value.Age), value.Number]);\r\n            }\r\n        });\r\n\r\n        //GET TUPLES FOR GRAPH\r\n        clientResults.clientTuples = clientTuples;\r\n        spouseResults.spouseTuples = spouseTuples;\r\n        clientResults.averageTuples = averageTuples;\r\n\r\n        //GET AGES FOR TABLE\r\n        clientResults.clientTableAge = clientTableAge;\r\n        spouseResults.spouseTableAge = spouseTableAge;\r\n        clientResults.averageTableAge = averageTableAge;\r\n\r\n        //GET VALUES FOR TABLE\r\n        clientResults.clientTableValue = clientTableValue;\r\n        spouseResults.spouseTableValue = spouseTableValue;\r\n        clientResults.averageTableValue = averageTableValue;\r\n    }\r\n}"],"sourceRoot":".."}