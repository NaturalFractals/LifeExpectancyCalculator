{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/aboutyou/capitalize-converter.js","src/aboutyou/personalinfo.js","src/health/familyhealth.js","src/health/myhealth.js","src/occupation/occupation.js","src/resources/index.js","src/results/results.js","src/services/user.js","src/utilities/chart.js","src/utilities/readFile.js","src/utilities/slider.js","src/utilities/calculations/calculateFamilyHealth.js","src/utilities/calculations/calculateMyHealth.js","src/utilities/calculations/calculateOccupation.js","src/utilities/calculations/calculateResults.js","src/services/data/familyHealthData.js","src/services/data/myHealthData.js","src/services/data/occupationData.js","src/services/data/personalInfoData.js","src/services/data/resultsData.js","src/services/data/stateData.js"],"names":["App","httpClient","readFile","message","activate","fetch","data","json","data2","getStateList","configureRouter","config","router","title","map","route","moduleId","name","nav","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","CapitalizeValueConverter","toView","value","replace","txt","charAt","toUpperCase","substr","toLowerCase","ionRangeSlider","personalinfo","user","stateData","slider","calculateResults","calculateOccupation","occupationData","currentCountyArray","laborArray","length","loadOccupation","gender","person","checkgender","console","log","checkspouse","clientPersonalInfo","checkState","state","self","countyWithLifeArrays","stateToCountyMap","get","split","forEach","currentCountyInfo","push","pop","county","checkLifeExpectancy","lifeExpectancy","indexOf","countyLifeExpectancy","myhealth","navigate","familyhealth","occupation","submit","getLifeTableData","calculateEducation","clientResults","addExpectancies","spousePersonalInfo","spouseResults","attached","createAgeSlider","calculateFamilyHealth","heartdisease","checkHeartDisease","cancer","checkCancer","mentalhealth","checkMentalHealth","diabetes","checkDiabetes","back","createLifeExpectancySlider","calculateMyHealth","formHeightWeight","checkHeight","valid","test","height","validHeight","heightError","feetAndInches","heightInInches","parseInt","validWeight","calculateBMI","validBMI","setIconType","iconType","spouse","bmi","smoking","checksmoking","stillSmoking","checkStillSmoking","check","exerciseCalculations","calc","results","exercisePerWeek","calculateExercise","exercise","exerciseLifeExpectancy","alert","smokerCalculations","kindOfSmoker","calculateSmoker","smoker","smokerLifeExpectancy","ageQuitSmoking","clientMyHealth","spouseMyHealth","tooltip","content","currentJobArray","allowDrop","ev","preventDefault","drag","dataTransfer","setData","target","innerText","clientOccupationArray","srcElement","textContent","removeDrop","set","drop","current","getData","elements","document","getElementsByClassName","i","trim","currentTarget","appendChild","income","checkincome","checkOccupation","occupationName","type","industryArray","publicServiceArray","managementArray","occupationArray","calculationOccupation","clientOccupation","isNaN","calculateIncome","spouseOccupation","chart","createChart","User","clientFamilyHealth","spouseFamilyHealth","HighCharts","Chart","containerID","Highcharts","text","xAxis","plotOptions","series","pointStart","age","yAxis","testTuples","testTuples2","testTuples3","ReadFile","jsonData","stateObject","stateSet","add","State","getCountyList","has","existingValues","County","Male","Female","getCategoryList","jobObject","occupationCategorySet","Category","categoryToJobMap","undefined","Occupation","getOccupationDeathNumber","arrayOccupations","deathTotal","userOccupation","total","Slider","$","grid","min","max","from","step","onFinish","familyLifeExpectancy","CalculateFamilyHealth","CalculateMyHealth","metricWeight","weight","metricHeight","metricHeightSquared","toPrecision","CalculateOccupation","incomeLifeExpectancy","parseFloat","loadedData","createJobArrays","occupationChangeInLifeExpectancy","currentArray","listToArray","job","CalculateResults","race","resultsData","setUserExpectedAge","getTestTuples","currentAgeArray","Age","slice","expectedYearsLeft","ExpectedAge","ethnicityLifeExpectancy","education","personResults","overallLifeExpectancy","tempArr","tempArr2","tempArr3","Number","FamilyHealthData","MyHealthData","sleepPerWeek","healthRank","alcoholPerWeek","OccupationData","occupationType","Set","Map","PersonalInfoData","maritalStatus","ResultsData","StateData"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {ReadFile} from 'utilities/readFile';\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\n@inject(HttpClient, ReadFile)\r\nexport class App {\r\n  httpClient;\r\n\r\n  constructor(httpClient, readFile) {\r\n    this.httpClient = httpClient;\r\n    this.readFile = readFile;\r\n    this.message = 'Life Expectancy Calculator';\r\n  }\r\n\r\n  async activate() {\r\n    let data = await this.httpClient.fetch('/api/life-expectancy/get.json');\r\n    let data2 = await data.json();\r\n    this.readFile.getStateList(data2);\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Life Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'personalinfo'], moduleId: 'aboutyou/personalinfo',\r\n        name: 'personalinfo', title: 'Personal Info', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'myhealth', moduleId: 'health/myhealth',\r\n        name: 'myhealth', title: 'My Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'familyhealth', moduleId: 'health/familyhealth',\r\n        name: 'familyhealth', title: 'Family Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'occupation', moduleId: 'occupation/occupation',\r\n        name: 'occupation', title: 'Occupation', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Results', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'jsonfile', moduleId: 'services/lifeExpectancy.json!json',\r\n        name: 'jsonfile', title: 'Json File', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export class CapitalizeValueConverter {\r\n    toView(value) {\r\n        return value.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {StateData} from '../services/data/stateData';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\nimport {Slider} from '../utilities/slider';\r\nimport {CalculateResults} from '../utilities/calculations/calculateResults';\r\nimport {CalculateOccupation} from '../utilities/calculations/calculateOccupation';\r\nimport {OccupationData} from '../services/data/occupationData'\r\n\r\n@inject(Router, User, StateData, Slider, CalculateResults, CalculateOccupation, OccupationData)\r\nexport class personalinfo {\r\n    currentCountyArray = [];\r\n\r\n    constructor(router, user, stateData, slider, calculateResults, calculateOccupation, occupationData) {\r\n        this.slider = slider;\r\n        this.router = router;\r\n        this.user = user;\r\n        this.stateData = stateData;\r\n        this.calculateResults = calculateResults;\r\n        this.calculateOccupation = calculateOccupation;\r\n        this.occupationData = occupationData;\r\n        if(this.occupationData.laborArray.length == 0) \r\n            calculateOccupation.loadOccupation();\r\n    }\r\n\r\n    gender(person) {\r\n        person.checkgender = !person.checkgender;\r\n        person.gender = person.checkgender ? 'Male' : 'Female';\r\n        console.log(person);\r\n    }\r\n\r\n    checkspouse() {\r\n        this.user.clientPersonalInfo.checkspouse = !this.user.clientPersonalInfo.checkspouse;\r\n    }\r\n\r\n    //======================LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n    //This method retrieves all of the counties from the client's current state\r\n    checkState(person) {\r\n        var state = person.state;\r\n        if(state != \"Please Select\") {\r\n            var self = this;\r\n            this.currentCountyArray = [];\r\n            state = state.toLowerCase();\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                self.currentCountyArray.push(currentCountyInfo[0]);\r\n            });\r\n            this.currentCountyArray.pop();\r\n        }\r\n        else person.county = \"Please Select\";\r\n    }\r\n\r\n    //This method checks the current client's life expectancy\r\n    checkLifeExpectancy(person) {\r\n        if(person.county != \"Please Select\") {\r\n            var state = person.state;\r\n            state = state.toLowerCase();\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                //Life expectancy of male is index 2, life expectancy of female is index 1\r\n                var lifeExpectancy =  person.checkgender ? currentCountyInfo[2] : currentCountyInfo[1];\r\n                //If county name is found in array, then get life expectancy\r\n                if(currentCountyInfo[0].indexOf(person.county) != -1) {\r\n                    person.countyLifeExpectancy =  person.checkgender ? currentCountyInfo[1] : currentCountyInfo[2];\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //===================END LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n\r\n    myhealth() {\r\n        this.router.navigate('#/myhealth');  \r\n    }\r\n\r\n    familyhealth() {\r\n        this.router.navigate('#/familyhealth');  \r\n    }\r\n\r\n    occupation() {\r\n        this.router.navigate('#/occupation');  \r\n    }\r\n\r\n    async submit() {\r\n        //Get life expectancy based on age, gender, and ethnicity\r\n        await this.calculateResults.getLifeTableData(this.user.clientPersonalInfo);\r\n        this.calculateResults.calculateEducation(this.user.clientPersonalInfo, this.user.clientResults)\r\n        this.calculateResults.addExpectancies(this.user.clientResults);\r\n\r\n        console.log(\"=======CLIENT=======\");\r\n        console.log(this.user.clientPersonalInfo);\r\n        console.log(this.user.clientResults);\r\n\r\n        if(this.user.clientPersonalInfo.checkspouse){\r\n            await this.calculateResults.getLifeTableData(this.user.spousePersonalInfo);\r\n            this.calculateResults.calculateEducation(this.user.spousePersonalInfo, this.user.spouseResults)\r\n            this.calculateResults.addExpectancies(this.user.spouseResults);\r\n        \r\n            console.log(\"=======SPOUSE=======\");\r\n            console.log(this.user.spousePersonalInfo);\r\n            console.log(this.user.spouseResults);\r\n        } \r\n        \r\n        this.router.navigate('#/results');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createAgeSlider();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateFamilyHealth} from '../utilities/calculations/calculateFamilyHealth';\r\nimport {Slider} from '../utilities/slider';\r\n\r\n@inject(Router, User, CalculateFamilyHealth, Slider)\r\nexport class familyhealth {\r\n    constructor(router, user, calculateFamilyHealth, slider) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateFamilyHealth = calculateFamilyHealth;\r\n        this.slider = slider;\r\n    }\r\n\r\n    //HEART DISEASE\r\n    heartdisease(person) {\r\n        person.checkHeartDisease = !person.checkHeartDisease;\r\n    }\r\n\r\n    //CANCER\r\n    cancer(person) {\r\n        person.checkCancer = !person.checkCancer;\r\n    }\r\n\r\n    //MENTAL HEALTH\r\n    mentalhealth(person) {\r\n        person.checkMentalHealth = !person.checkMentalHealth;\r\n    }\r\n\r\n    //DIABETES\r\n    diabetes(person) {\r\n        person.checkDiabetes = !person.checkDiabetes;\r\n    }\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createLifeExpectancySlider();\r\n    }\r\n}","import $ from 'jquery';\r\nimport 'jquery-ui-dist';\r\nimport {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateMyHealth} from '../utilities/calculations/calculateMyHealth';\r\n\r\n@inject(Router, User, CalculateMyHealth)\r\nexport class myhealth {\r\n    formHeightWeight = \"\";\r\n\r\n    constructor(router, user, calculateMyHealth) {\r\n        this.calculateMyHealth = calculateMyHealth;\r\n        this.router = router;\r\n        this.user = user;\r\n    }\r\n\r\n    //Checks for valid height for the client.\r\n    checkHeight(person) {\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(person.height);\r\n        person.validHeight = valid;\r\n        person.heightError = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = person.height.split(\"'\");\r\n            person.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        //This handles the case where they first entered their weight\r\n        if(person.validWeight) {\r\n            this.calculateBMI(person);\r\n        }\r\n    }\r\n\r\n    //This calculates the BMI once both of the height and weight have been entered\r\n    calculateBMI(person) {\r\n        if(person.validHeight) {\r\n            this.calculateMyHealth.calculateBMI(person);\r\n            person.validBMI = true;\r\n            this.setIconType(person, false)\r\n            person.iconType = \"./src/health/images/\" + person.iconType + \".jpg\";\r\n        }\r\n        person.validWeight = true;\r\n        person.formHeightWeight = true;\r\n    }\r\n\r\n    //Determines the icon types give the client/spouse. If client is passed in then, spouse = false.\r\n    setIconType(person, spouse) {\r\n        switch(true) {\r\n            case person.bmi < 18.5:\r\n                person.iconType = \"underweight\";\r\n                break;\r\n            case person.bmi >= 18.5 && person.bmi < 25:\r\n                person.iconType = \"normal\";\r\n                break;\r\n            case person.bmi >= 25 && person.bmi < 30:\r\n                person.iconType = \"overweight\";\r\n                break;\r\n            case person.bmi > 30 && person.bmi < 35:\r\n                person.iconType = \"obese\";\r\n                break;\r\n            default:\r\n                person.iconType = \"extremely-obese\";\r\n                break;\r\n        }\r\n        return person;\r\n    }\r\n\r\n    //CHECK SMOKING\r\n    smoking(person) {\r\n        person.checksmoking = !person.checksmoking;\r\n    }\r\n\r\n    stillSmoking(person) {\r\n        person.checkStillSmoking = !person.checkStillSmoking;\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        var check = true;\r\n\r\n        //EXERCISE\r\n        function exerciseCalculations(person, calc, results) {\r\n            if(person.exercisePerWeek && person.exercisePerWeek != \"Please Select\") {\r\n                if(person.bmi) {\r\n                    calc.calculateExercise(person);\r\n                    results.exercise = person.exerciseLifeExpectancy;\r\n                }\r\n                else {\r\n                    check = false;\r\n                    alert(\"We need a BMI to factor in your exercise per week\");\r\n                }\r\n            }\r\n        }\r\n        \r\n        function smokerCalculations(person, calc, results) {\r\n            if(person.checksmoking) {\r\n                if(person.kindOfSmoker && person.kindOfSmoker != \"Please Select\") {\r\n                    if(person.checkStillSmoking) {\r\n                        calc.calculateSmoker(person);\r\n                        results.smoker = person.smokerLifeExpectancy;\r\n                    }\r\n                }\r\n                else {\r\n                    check = false;\r\n                    alert(\"Enter what kind of smoker you are\");\r\n                }\r\n\r\n                if(!person.checkStillSmoking && person.ageQuitSmoking && person.ageQuitSmoking != \"Please Select\") {\r\n                    calc.calculateSmoker(person);\r\n                    results.smoker = person.smokerLifeExpectancy;\r\n                }\r\n                else if(!person.checkStillSmoking && (person.ageQuitSmoking || person.ageQuitSmoking != \"Please Select\")) {\r\n                    check = false;\r\n                    alert(\"Enter what age you quit smoking\");\r\n                }\r\n            }\r\n        }\r\n\r\n        //this.calculateMyHealth.calculateExercise(this.user.clientMyHealth);\r\n\r\n        exerciseCalculations(this.user.clientMyHealth, this.calculateMyHealth, this.user.clientResults);\r\n        smokerCalculations(this.user.clientMyHealth, this.calculateMyHealth, this.user.clientResults);\r\n        console.log(this.user.clientMyHealth);\r\n\r\n        if(this.user.clientPersonalInfo.checkspouse) {\r\n            exerciseCalculations(this.user.spouseMyHealth, this.calculateMyHealth, this.user.spouseResults);\r\n            smokerCalculations(this.user.spouseMyHealth, this.calculateMyHealth, this.user.spouseResults);\r\n            console.log(this.user.spouseMyHealth);\r\n        }\r\n        \r\n        if(check) this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    //This takes care of setting up the content for the tooltips\r\n    attached() {\r\n        //=====================CLIENT TOOLTIPS============================\r\n        $('#height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise, you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n\r\n        $('#health-rank-tooltip').tooltip({\r\n            content: \"How you view your health impacts your life expectancy.\"\r\n        })\r\n\r\n        //=====================SPOUSE TOOLTIPS============================\r\n        $('#spouse-height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#spouse-weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#spouse-exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise, you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n\r\n        $('#spouse-health-rank-tooltip').tooltip({\r\n            content: \"How you view your health impacts your life expectancy.\"\r\n        })\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { User } from '../services/user';\r\nimport { CalculateOccupation } from '../utilities/calculations/calculateOccupation';\r\nimport { OccupationData } from '../services/data/occupationData';\r\n\r\n@inject(Router, User, CalculateOccupation, OccupationData)\r\nexport class occupation {\r\n\r\n    constructor(router, user, calculateOccupation, occupationData) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateOccupation = calculateOccupation;\r\n        this.occupationData = occupationData;\r\n        this.occupationData.currentJobArray = this.occupationData.laborArray;\r\n    }\r\n\r\n    //DRAG AND DROP\r\n    allowDrop(ev) {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    drag(ev) {\r\n        ev.dataTransfer.setData(\"tonberry\", ev.target.innerText);\r\n        this.occupationData.clientOccupationArray.push(ev.srcElement.textContent);\r\n        return true;\r\n    }\r\n\r\n    removeDrop(ev) {\r\n        ev.dataTransfer.set\r\n    }\r\n\r\n    drop(ev) {\r\n        ev.preventDefault();\r\n        var current;\r\n        var data = ev.dataTransfer.getData(\"tonberry\");\r\n        var elements = document.getElementsByClassName(\"current-buttons\");\r\n        for(var i = 0; i < elements.length; i++) {\r\n            if((elements[i].textContent).trim() === data.trim()) {\r\n                current = elements[i];\r\n            }\r\n        }\r\n        ev.currentTarget.appendChild(current);\r\n    }\r\n\r\n    //INCOME\r\n    income(person) {\r\n        person.checkincome = !person.checkincome;\r\n    }\r\n\r\n    //CHECK OCCUPATION TYPE\r\n    checkOccupation(person, occupationName) {\r\n        person.type = occupationName.type;\r\n        console.log(person.type);\r\n        console.log(occupationName.type);\r\n        console.log(occupationName.type === \"Industry\");\r\n        switch(true) {\r\n            case occupationName.type.trim() === \"Skilled/Unskilled\":\r\n                this.occupationData.currentJobArray = this.occupationData.laborArray;\r\n                break;\r\n            case occupationName.type.trim() === \"Industry\":\r\n                this.occupationData.currentJobArray = this.occupationData.industryArray;\r\n                break;\r\n            case occupationName.type.trim() === \"Public Service\":\r\n                this.occupationData.currentJobArray = this.occupationData.publicServiceArray;\r\n                break;\r\n            case occupationName.type.trim() === \"Management\":\r\n                this.occupationData.currentJobArray = this.occupationData.managementArray;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');\r\n    }\r\n\r\n    submit(occupationArray) {\r\n        var check = true;\r\n        this.calculateOccupation. calculationOccupation(occupationArray);\r\n        console.log(occupationArray);\r\n        \r\n        if(this.user.clientOccupation.checkincome) {\r\n            if(!isNaN(this.user.clientOccupation.income)) {\r\n                this.calculateOccupation.calculateIncome(this.user.clientOccupation, this.user.clientPersonalInfo.gender, this.user.clientResults);\r\n            }\r\n            else {\r\n                check = false;\r\n                alert('Enter a valid income');\r\n            }\r\n        }\r\n           \r\n        if(this.user.clientPersonalInfo.checkspouse) {\r\n            if(this.user.spouseOccupation.checkincome) {\r\n                if(!isNaN(this.user.spouseOccupation.income)) {\r\n                    this.calculateOccupation.calculateIncome(this.user.spouseOccupation, this.user.spousePersonalInfo.gender, this.user.spouseResults);\r\n                }\r\n                else {\r\n                    check = false;\r\n                    alert('Enter a valid income');\r\n                }\r\n            }\r\n        }\r\n\r\n        if(check) this.router.navigate('#/personalinfo');\r\n    }\r\n}","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {Chart} from '../utilities/chart';\r\nimport {CalculateResults} from '../utilities/calculations/calculateResults';\r\n\r\n@inject(Router, User, Chart, CalculateResults)\r\nexport class results {\r\n    constructor(router, user, chart, calculateResults) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.chart = chart;\r\n        this.calculateResults = calculateResults;\r\n    }\r\n\r\n    attached() {\r\n        this.chart.createChart('chart-container');\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","import {singleton} from 'aurelia-framework';\r\nimport {PersonalInfoData} from '../services/data/personalInfoData';\r\nimport {MyHealthData} from '../services/data/myHealthData';\r\nimport {FamilyHealthData} from '../services/data/familyHealthData';\r\nimport {OccupationData} from '../services/data/occupationData';\r\nimport {ResultsData} from '../services/data/resultsData';\r\n\r\n@singleton()\r\nexport class User {\r\n    constructor() {\r\n        this.clientPersonalInfo = new PersonalInfoData();\r\n        this.spousePersonalInfo = new PersonalInfoData();\r\n        \r\n        this.clientMyHealth = new MyHealthData();\r\n        this.spouseMyHealth = new MyHealthData();\r\n\r\n        this.clientFamilyHealth = new FamilyHealthData();\r\n        this.spouseFamilyHealth = new FamilyHealthData();\r\n\r\n        this.clientOccupation = new OccupationData();\r\n        this.spouseOccupation = new OccupationData();\r\n\r\n        this.clientResults = new ResultsData();\r\n        this.spouseResults = new ResultsData();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport * as HighCharts from \"highcharts\";\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class Chart {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    createChart(containerID) {\r\n        //console.log(this.user.clientPersonalInfo.testTuples);\r\n        Highcharts.chart(containerID, {\r\n                title: {\r\n                    text: 'Life Expectancy'\r\n                },\r\n                xAxis: {\r\n                    title: {\r\n                        text: 'Age'\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    series: {\r\n                        pointStart: this.user.clientPersonalInfo.age\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: 'Chance of Living'\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Client',\r\n                    data:  this.user.clientPersonalInfo.testTuples\r\n                }, {\r\n                    name: 'Co-client',\r\n                    data:  this.user.clientPersonalInfo.testTuples2\r\n                }, {\r\n                    name: 'Average',\r\n                    data:  this.user.clientPersonalInfo.testTuples3\r\n                }]\r\n            }); \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {StateData} from '../services/data/stateData';\r\nimport {OccupationData} from '../services/data/occupationData';\r\n\r\n@inject(StateData, OccupationData)\r\nexport class ReadFile {\r\n\r\n    constructor(stateData, occupationData) {\r\n        this.stateData = stateData;\r\n        this.occupationData = occupationData;\r\n    }\r\n\r\n    //Given the json data this method will create a set of states and save in stateData.js\r\n    getStateList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject) { \r\n            self.stateData.stateSet.add(stateObject.State.toLowerCase())\r\n        });\r\n        this.getCountyList(jsonData);\r\n    } \r\n\r\n    //Given a state as input this method reads the json object and returns all counties for that state.\r\n    getCountyList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject){\r\n            if(self.stateData.stateToCountyMap.has(stateObject.State.toLowerCase())) {\r\n                   var existingValues = self.stateData.stateToCountyMap.get(stateObject.State.toLowerCase());\r\n                   // Format for each county => County : Male Life Expectancy : Female Life Expectancy\r\n                   existingValues += \" \" + stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\";\r\n                   self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), existingValues);\r\n            }\r\n            else self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\");\r\n        });\r\n    }\r\n\r\n    //Given json data as input this method reads the json object and saves the information in a category set and map for jobs.\r\n    getCategoryList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach((jobObject) => {\r\n            self.occupationData.occupationCategorySet.add(jobObject.Category);\r\n            var existingValues = self.occupationData.categoryToJobMap.get(jobObject.Category);\r\n            if(existingValues === undefined) existingValues = \"\";\r\n            existingValues += \" \" + jobObject.Occupation + \":\";\r\n            self.occupationData.categoryToJobMap.set(jobObject.Category, existingValues);\r\n        });\r\n    }\r\n\r\n    //Given json data and array of user occupations, this will find the change in life expectancy from occupation.\r\n    getOccupationDeathNumber(jsonData, arrayOccupations) {\r\n        var self = this;\r\n        var deathTotal = 0;\r\n        jsonData.forEach((jobObject) => {\r\n            arrayOccupations.forEach((userOccupation) => {\r\n                if(userOccupation === jobObject.Occupation)\r\n                    total += jobObject.deathTotal;\r\n            })\r\n        });\r\n        return deathTotal;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\n\r\n@inject(User)\r\nexport class Slider {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n    \r\n    createAgeSlider() {\r\n        $(\"#age\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientPersonalInfo.age = data.from;\r\n            }\r\n        });\r\n\r\n        $(\"#spouseage\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spousePersonalInfo.age = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    createLifeExpectancySlider() {\r\n        $('#familyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n\r\n        $('#spousefamilyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spouseFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateFamilyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateMyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    //this calculates the body mass index(if you're wondering, tweet me @JesseCochran1)\r\n    calculateBMI(person) {\r\n        var metricWeight = person.weight * 0.45;\r\n        var metricHeight = person.heightInInches * 0.025;\r\n        var metricHeightSquared = metricHeight * metricHeight;\r\n        person.bmi = (metricWeight / metricHeightSquared).toPrecision(4);\r\n    }\r\n\r\n    //this calculates added/decreased life expectancy based on how many hours of exercise per week\r\n    calculateExercise(person) {\r\n        var exerciseLifeExpectancy = 0;\r\n\r\n        if(person.exercisePerWeek) {\r\n            var bmi = person.bmi;\r\n\r\n            if(person.exercisePerWeek.indexOf(\"0\") !== -1) {\r\n                exerciseLifeExpectancy = 0;\r\n                if(bmi >= 18.5 && bmi < 25) exerciseLifeExpectancy -= 4.7;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 3.9;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 5.0;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 7.2;\r\n            }\r\n            else if(person.exercisePerWeek.indexOf(\"Less\") !== -1) {\r\n                exerciseLifeExpectancy = 1.8;\r\n                if(bmi >= 18.5 && bmi <= 24.9) exerciseLifeExpectancy -= 2.4;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 1.8;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 3.2;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 6.2;\r\n            }\r\n            else if(person.exercisePerWeek.indexOf(\"Approximately\") !== -1) {\r\n                exerciseLifeExpectancy = 3.4;\r\n                if(bmi >= 18.5 && bmi <= 24.9) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 1.6;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 4.5;\r\n            }\r\n            else if(person.exercisePerWeek.indexOf(\"More\") !== -1) {\r\n                exerciseLifeExpectancy = 4.5;\r\n                if(bmi >= 18.5 && bmi <= 24.9) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 1.6;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 4.5;\r\n            }\r\n        }\r\n        person.exerciseLifeExpectancy = exerciseLifeExpectancy;\r\n    }\r\n\r\n    calculateSmoker(person) {\r\n        var smokerLifeExpectancy = 0;\r\n        var stillSmoking = person.checkStillSmoking;\r\n        var kindOfSmoker = person.kindOfSmoker;\r\n        \r\n        //CHECK KIND OF SMOKER\r\n        if(kindOfSmoker.indexOf(\"Light\") !== -1) {\r\n            smokerLifeExpectancy = -4.8;\r\n\r\n            //Add years if they quit smoking\r\n            if(!stillSmoking) { \r\n                var age = person.ageQuitSmoking;\r\n                if(age.indexOf(\"25\") !== -1) smokerLifeExpectancy += 4.8; //max 10\r\n                else if(age.indexOf(\"35\") !== -1) smokerLifeExpectancy += 4.8; //max 9\r\n                else if(age.indexOf(\"45\") !== -1) smokerLifeExpectancy += 4.8; //max 6\r\n                else if(age.indexOf(\"60\") !== -1) smokerLifeExpectancy += 3; //max 3\r\n            }\r\n        }\r\n        else if(kindOfSmoker.indexOf(\"Average\") !== -1) {\r\n            smokerLifeExpectancy -= 6.8;\r\n\r\n            //Add years if they quit smoking\r\n            if(!stillSmoking) { \r\n                var age = person.ageQuitSmoking;\r\n                if(age.indexOf(\"25\") !== -1) smokerLifeExpectancy += 6.8; //max 10\r\n                else if(age.indexOf(\"35\") !== -1) smokerLifeExpectancy += 6.8; //max 9\r\n                else if(age.indexOf(\"45\") !== -1) smokerLifeExpectancy += 6; //max 6\r\n                else if(age.indexOf(\"60\") !== -1) smokerLifeExpectancy += 3; //max 3\r\n            }\r\n        }\r\n        else if(kindOfSmoker.indexOf(\"Heavy\") !== -1) {\r\n            smokerLifeExpectancy -= 8.8;\r\n\r\n            //Add years if they quit smoking\r\n            if(!stillSmoking) { \r\n                var age = person.ageQuitSmoking;\r\n                if(age.indexOf(\"25\") !== -1) smokerLifeExpectancy += 8.8; //max 10\r\n                else if(age.indexOf(\"35\") !== -1) smokerLifeExpectancy += 8.8; //max 9\r\n                else if(age.indexOf(\"45\") !== -1) smokerLifeExpectancy += 6; //max 6\r\n                else if(age.indexOf(\"60\") !== -1) smokerLifeExpectancy += 3; //max 3\r\n            }\r\n        }\r\n        person.smokerLifeExpectancy = smokerLifeExpectancy;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../../services/user';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {ReadFile} from 'utilities/readFile';\r\nimport {OccupationData} from '../../services/data/occupationData';\r\n\r\n@inject(User, HttpClient, ReadFile, OccupationData)\r\nexport class CalculateOccupation {\r\n    constructor(user, httpClient, readFile, occupationData) {\r\n        this.user = user;\r\n        this.httpClient = httpClient;\r\n        this.readFile = readFile;\r\n        this.occupationData = occupationData;\r\n    }\r\n\r\n    //Calculate income\r\n    calculateIncome(person, gender, results) {\r\n        var incomeLifeExpectancy = 0;\r\n\r\n        if(person.checkincome) {\r\n            if(parseFloat(person.income) >= 188996) {\r\n                if(gender == \"male\" || gender == \"Male\") incomeLifeExpectancy += 2.34;\r\n                else if(gender == \"Female\") incomeLifeExpectancy += 2.91;\r\n            }\r\n            else {\r\n                if(gender == \"male\" || gender == \"Male\") incomeLifeExpectancy += 0.32;\r\n                else if(gender == \"Female\") incomeLifeExpectancy += 0.04;\r\n            }\r\n        }\r\n\r\n        person.incomeLifeExpectancy = incomeLifeExpectancy;\r\n        results.income = incomeLifeExpectancy;\r\n    }\r\n\r\n    //Loads the occupation data\r\n    async loadOccupation() {\r\n        let data = await this.httpClient.fetch('/api/occupation-table/occupation.json');\r\n        let loadedData = await data.json();\r\n        this.readFile.getCategoryList(loadedData);\r\n        this.createJobArrays(\"Manual Labor\");\r\n        this.createJobArrays(\"Industry\");\r\n        this.createJobArrays(\"Public Service\");\r\n        this.createJobArrays(\"Management\");\r\n    }\r\n\r\n    //Calculate life expectancy values based on occupation\r\n    async calculationOccupation(arrayOccupations) {\r\n        let data = await this.httpClient.fetch('/api/occupation-table/occupation.json');\r\n        let loadedData = await data.json();\r\n        this.occupationData.occupationChangeInLifeExpectancy = this.readFile.getOccupationDeathNumber(loadedData, arrayOccupations);\r\n    }\r\n\r\n    //Creates job array\r\n    createJobArrays(type) {\r\n        var currentArray = [];\r\n        var listToArray = this.occupationData.categoryToJobMap.get(type).split(\":\");\r\n        listToArray.forEach(function (job) {\r\n            currentArray.push(job);\r\n        }); \r\n        //Gets rid of blank space at end of array\r\n        currentArray.pop();\r\n        switch(true) {\r\n            case type === 'Manual Labor':\r\n                this.occupationData.laborArray = currentArray;\r\n                break;\r\n            case type === 'Industry':\r\n                this.occupationData.industryArray = currentArray;\r\n                break;\r\n            case type === 'Public Service':\r\n                this.occupationData.publicServiceArray = currentArray;\r\n                break;\r\n            case type === 'Management':\r\n                this.occupationData.managementArray = currentArray;\r\n                break;\r\n        }\r\n        console.log(this.occupationData.laborArray);\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {User} from '../../services/user';\r\n\r\n@inject(HttpClient, User)\r\nexport class CalculateResults {\r\n    httpClient;\r\n\r\n    constructor(httpClient, user) {\r\n        this.httpClient = httpClient;\r\n        this.user = user;\r\n    }\r\n\r\n    //Gets the life table based on the users race and gender\r\n    async getLifeTableData(person) {\r\n        let results = await this.httpClient.fetch('/api/life-table/' + person.race.toLowerCase() + '-' + person.gender.toLowerCase() + '.json');\r\n        let resultsData = await results.json();\r\n        this.setUserExpectedAge(resultsData, person);\r\n        this.getTestTuples(resultsData, person);\r\n    }\r\n\r\n    //Iterates through the json object to determine the user's expected age\r\n    setUserExpectedAge(data, person) {\r\n        data.forEach(function(value) {\r\n            //If the user is currently the age in the json object, then the current age is set\r\n            var currentAgeArray = [];\r\n            currentAgeArray[0] = parseInt(value.Age.slice(0, 2));\r\n            currentAgeArray[1] = parseInt(value.Age.slice(3, 5));\r\n            if(currentAgeArray[0] === person.age || currentAgeArray[1] === person.age) {\r\n                person.expectedYearsLeft = parseInt(value.ExpectedAge);\r\n                person.ethnicityLifeExpectancy = person.age;\r\n            }\r\n        });\r\n    }\r\n\r\n    //Education calculation\r\n    calculateEducation(person, results) {\r\n        console.log(person.education);\r\n    }\r\n\r\n    addExpectancies(personResults) {\r\n        //MyHealth Factors\r\n        personResults.overallLifeExpectancy += personResults.exercise;\r\n        personResults.overallLifeExpectancy += personResults.smoker;\r\n\r\n        //FamilyHealth Factors\r\n\r\n\r\n        //Occupation Factors\r\n        personResults.overallLifeExpectancy += personResults.income;\r\n    }\r\n    \r\n    //Gets test tuples for chart data\r\n    getTestTuples(jsonData, person) {\r\n        var tempArr = [];\r\n        var tempArr2 = [];\r\n        var tempArr3 = [];\r\n        \r\n        jsonData.forEach(function(value) {\r\n            tempArr.push([value.Age, value.Number]);\r\n        });\r\n        jsonData.forEach(function(value) {\r\n            tempArr2.push([parseInt(value.Age) + 3, value.Number]);\r\n        });\r\n        jsonData.forEach(function(value) {\r\n            tempArr3.push([parseInt(value.Age) - 5, value.Number]);\r\n        });\r\n        person.testTuples = tempArr;\r\n        person.testTuples2 = tempArr2;\r\n        console.log(tempArr2);\r\n        person.testTuples3 = tempArr3;\r\n        console.log(tempArr3);\r\n    }\r\n}","export class FamilyHealthData {\r\n    constructor() {\r\n        this.familyLifeExpectancy = 70;\r\n        this.checkHeartDisease = false;\r\n        this.checkCancer = false;\r\n        this.checkMentalHealth = false;\r\n        this.checkDiabetes = false;\r\n        \r\n    }\r\n}","export class MyHealthData {\r\n    constructor() {\r\n        this.height;\r\n        this.heightInInches;\r\n        this.weight;\r\n        this.bmi;\r\n        this.formHeightWeight = false;\r\n        this.exerciseLifeExpectancy = 0;\r\n\r\n        this.validHeight = false;\r\n        this.validWeight = false;\r\n        this.validBMI = false;\r\n        this.iconType = \"underweight\";\r\n        this.heightError = \"\";\r\n\r\n        this.exercisePerWeek;\r\n        this.sleepPerWeek;\r\n        this.healthRank;\r\n\r\n        this.alcoholPerWeek;\r\n\r\n        this.checksmoking = false;\r\n        this.checkStillSmoking = true;\r\n        this.kindOfSmoker;\r\n        this.ageQuitSmoking;\r\n        this.smokerLifeExpectancy = 0;\r\n    }\r\n}","export class OccupationData {\r\n    constructor() {\r\n        this.checkincome = false;\r\n        this.income = 0;\r\n        this.incomeLifeExpectancy = 0;\r\n\r\n        this.occupationType = ['Skilled/Unskilled', 'Industry', 'Public Service', 'Management'];\r\n        this.type = 'Skilled/Unskilled';\r\n\r\n        this.occupationCategorySet = new Set();\r\n        this.categoryToJobMap = new Map();\r\n        this.occupationChangeInLifeExpectancy = 0;\r\n\r\n        this.laborArray = [];\r\n        this.industryArray = [];\r\n        this.publicServiceArray = [];\r\n        this.managementArray = [];\r\n        this.currentJobArray = [];\r\n\r\n        this.clientOccupationArray = [];\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class PersonalInfoData {\r\n    constructor() {\r\n        this.checkspouse = false;\r\n        \r\n        this.age = 30;\r\n        this.checkgender = true;\r\n        this.gender = 'male';\r\n\r\n        this.education;\r\n        this.race = 'black';\r\n        this.maritalStatus;\r\n\r\n        this.state = \"Please Select\";\r\n        this.county = 'Please Select';\r\n        this.countyLifeExpectancy;\r\n        this.expectedYearsLeft;\r\n        this.testTuples = [];\r\n        this.testTuples2 = [];\r\n        this.testTuples3 = [];\r\n\r\n        this.ethnicityLifeExpectancy;\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class ResultsData {\r\n    constructor() {\r\n        //PERSONAL INFO EXPECTANCIES\r\n        this.education = 0;\r\n\r\n        //MY HEALTH EXPECTANCIES\r\n        this.exercise = 0;\r\n        this.smoker = 0;\r\n        this.diabetes = 0;\r\n        \r\n        //FAMILY HEALTH EXPECTANCIES\r\n\r\n\r\n        //OCCUPATION EXPECTANCIES\r\n        this.income = 0;\r\n\r\n        //OVERALL EXPECTANCY\r\n        this.overallLifeExpectancy = 0;\r\n    }\r\n}","export class StateData {\r\n    stateSet = new Set();\r\n    stateToCountyMap = new Map();\r\n}"],"sourceRoot":".."}