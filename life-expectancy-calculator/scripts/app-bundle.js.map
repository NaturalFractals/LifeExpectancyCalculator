{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/aboutyou/personalinfo.js","src/health/familyhealth.js","src/health/myhealth.js","src/occupation/occupation.js","src/resources/index.js","src/results/results.js","src/services/familyHealthData.js","src/services/myHealthData.js","src/services/occupationData.js","src/services/personalInfoData.js","src/services/resultsData.js","src/services/stateData.js","src/services/user.js","src/utilities/calculateFamilyHealth.js","src/utilities/calculateMyHealth.js","src/utilities/calculateOccupation.js","src/utilities/calculateResults.js","src/utilities/chart.js","src/utilities/readFile.js","src/utilities/slider.js"],"names":["App","httpClient","readFile","message","activate","fetch","data","json","data2","getStateList","configureRouter","config","router","title","map","route","moduleId","name","nav","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","ionRangeSlider","personalinfo","user","stateData","slider","calculateResults","currentCountyArray","checkState","gender","clientPersonalInfo","checkgender","console","log","spousegender","spousePersonalInfo","checkspouse","state","self","countyWithLifeArrays","stateToCountyMap","get","split","forEach","currentCountyInfo","push","pop","county","checkLifeExpectancy","lifeExpectancy","indexOf","checkStateSpouse","checkLifeExpectancySpouse","myhealth","navigate","familyhealth","occupation","submit","getLifeTableData","addExerciseExpectancy","clientResults","attached","createAgeSlider","calculateFamilyHealth","heartdisease","clientFamilyHealth","checkHeartDisease","spouseheartdisease","spouseFamilyHealth","cancer","checkCancer","spousecancer","mentalhealth","checkMentalHealth","spousementalhealth","diabetes","checkDiabetes","spousediabetes","back","createLifeExpectancySlider","calculateMyHealth","heightError","formHeightWeight","validHeight","validHeightSpouse","validBMIClient","validBMISpouse","iconClientType","iconSpouseType","checkHeight","valid","test","clientMyHealth","height","feetAndInches","heightInInches","parseInt","checkHeightSpouse","spouseMyHealth","heightErrorSpouse","calculateBMI","setIconType","bmi","iconsetIconType","person","spouse","currentPerson","currenPerson","smoking","checksmoking","smokingSpouse","tooltip","content","calculateOccupation","education","clientOccupation","checkEducation","spouseeducation","spouseOccupation","construction","checkConstruction","spouseconstruction","emergencyResponding","checkEmergencyResponding","spouseemergencyResponding","results","chart","createChart","FamilyHealthData","familyLifeExpectancy","MyHealthData","weight","exercisePerWeek","sleepPerWeek","healthRank","alcoholPerWeek","exerciseLifeExpectancy","OccupationData","PersonalInfoData","age","race","maritalStatus","countyLifeExpectancy","expectedYearsLeft","testTuples","ethnicityLifeExpectancy","ResultsData","overallLifeExpectancy","StateData","stateSet","Set","Map","User","spouseResults","CalculateFamilyHealth","CalculateMyHealth","metricWeight","metricHeight","metricHeightSquared","calculateExercise","CalculateOccupation","CalculateResults","toLowerCase","setUserExpectedAge","getTestTuples","value","currentAgeArray","Age","slice","ExpectedAge","expectedLife","addedExercise","averageLifeExpectancy","averagedLifeExpectancy","jsonData","tempArr","Probability","HighCharts","Chart","containerID","Highcharts","text","xAxis","plotOptions","series","pointStart","yAxis","ReadFile","stateObject","add","State","getCountyList","has","existingValues","County","Male","Female","set","Slider","$","grid","min","max","from","step","onFinish"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {ReadFile} from 'utilities/readFile';\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\n@inject(HttpClient, ReadFile)\r\nexport class App {\r\n  httpClient;\r\n\r\n  constructor(httpClient, readFile) {\r\n    this.httpClient = httpClient;\r\n    this.readFile = readFile;\r\n    this.message = 'Life Expectancy Calculator';\r\n  }\r\n\r\n  async activate() {\r\n    let data = await this.httpClient.fetch('/api/life-expectancy/get.json');\r\n    let data2 = await data.json();\r\n    this.readFile.getStateList(data2);\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Life Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'personalinfo'], moduleId: 'aboutyou/personalinfo',\r\n        name: 'personalinfo', title: 'Personal Info', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'myhealth', moduleId: 'health/myhealth',\r\n        name: 'myhealth', title: 'My Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'familyhealth', moduleId: 'health/familyhealth',\r\n        name: 'familyhealth', title: 'Family Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'occupation', moduleId: 'occupation/occupation',\r\n        name: 'occupation', title: 'Occupation', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Results', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'jsonfile', moduleId: 'services/lifeExpectancy.json!json',\r\n        name: 'jsonfile', title: 'Json File', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {StateData} from '../services/stateData';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\nimport {Slider} from '../utilities/slider';\r\nimport {CalculateResults} from '../utilities/calculateResults';\r\n\r\n@inject(Router, User, StateData, Slider, CalculateResults)\r\nexport class personalinfo {\r\n    currentCountyArray = [];\r\n\r\n    constructor(router, user, stateData, slider, calculateResults) {\r\n        this.slider = slider;\r\n        this.router = router;\r\n        this.user = user;\r\n        this.stateData = stateData;\r\n        this.calculateResults = calculateResults;\r\n        this.checkState();\r\n    }\r\n\r\n    gender() {\r\n        this.user.clientPersonalInfo.checkgender = !this.user.clientPersonalInfo.checkgender;\r\n        this.user.clientPersonalInfo.gender = (this.user.clientPersonalInfo.checkgender) ? 'Male' : 'Female';\r\n        console.log(this.user.clientPersonalInfo);\r\n    }\r\n\r\n    spousegender() {\r\n        this.user.spousePersonalInfo.checkgender = !this.user.spousePersonalInfo.checkgender;\r\n        this.user.spousePersonalInfo.gender = (this.user.spousePersonalInfo.checkgender) ? 'Male' : 'Female';\r\n        console.log(this.user.clientPersonalInfo);\r\n        console.log(this.user.spousePersonalInfo);\r\n    }\r\n\r\n    checkspouse() {\r\n        this.user.clientPersonalInfo.checkspouse = !this.user.clientPersonalInfo.checkspouse;\r\n    }\r\n\r\n    //======================LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n    //This method retrieves all of the counties from the client's current state\r\n    checkState() {\r\n        var state = this.user.clientPersonalInfo.state;\r\n        if(state != \"Please Select\") {\r\n            var self = this;\r\n            this.currentCountyArray = [];\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                self.currentCountyArray.push(currentCountyInfo[0]);\r\n            });\r\n            this.currentCountyArray.pop();\r\n        }\r\n        else this.user.clientPersonalInfo.county = \"Please Select\";\r\n    }\r\n\r\n    //This method checks the current client's life expectancy\r\n    checkLifeExpectancy() {\r\n        if(this.user.clientPersonalInfo.county != \"Please Select\") {\r\n            var self = this;\r\n            var state = this.user.clientPersonalInfo.state;\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                //Life expectancy of male is index 2, life expectancy of female is index 1\r\n                var lifeExpectancy =  self.user.clientPersonalInfo.checkgender ? currentCountyInfo[2] : currentCountyInfo[1];\r\n                //If county name is found in array, then get life expectancy\r\n                if(currentCountyInfo[0].indexOf(self.user.clientPersonalInfo.county) != -1) {\r\n                    self.user.clientPersonalInfo.lifeExpectancy =  self.user.clientPersonalInfo.checkgender ? currentCountyInfo[1] : currentCountyInfo[2];\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    //This method retrieves all of the counties from the co-client's current state\r\n    checkStateSpouse() {\r\n        var state = this.user.spousePersonalInfo.state;\r\n        if(state != \"Please Select\") {\r\n            var self = this;\r\n            this.currentCountyArray = [];\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                self.currentCountyArray.push(currentCountyInfo[0]);\r\n            });\r\n            this.currentCountyArray.pop();\r\n        }\r\n        else this.user.spousePersonalInfo.county = \"Please Select\";\r\n    }\r\n\r\n    //This method checks the current co-client's life expectancy\r\n    checkLifeExpectancySpouse() {\r\n        if(this.user.spousePersonalInfo.county != \"Please Select\") {\r\n            var self = this;\r\n            var state = this.user.spousePersonalInfo.state;\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                //Life expectancy of male is index 2, life expectancy of female is index 1\r\n                var lifeExpectancy =  self.user.spousePersonalInfo.checkgender ? currentCountyInfo[2] : currentCountyInfo[1];\r\n                //If county name is found in array, then get life expectancy\r\n                if(currentCountyInfo[0].indexOf(self.user.spousePersonalInfo.county) != -1) {\r\n                    self.user.spousePersonalInfo.lifeExpectancy =  self.user.spousePersonalInfo.checkgender ? currentCountyInfo[1] : currentCountyInfo[2];\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //===================END LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n\r\n\r\n    myhealth() {\r\n        this.router.navigate('#/myhealth');  \r\n    }\r\n\r\n    familyhealth() {\r\n        this.router.navigate('#/familyhealth');  \r\n    }\r\n\r\n    occupation() {\r\n        this.router.navigate('#/occupation');  \r\n    }\r\n\r\n    async submit() {\r\n        await this.calculateResults.getLifeTableData(this.user);\r\n        this.calculateResults.addExerciseExpectancy();\r\n        console.log(this.user.clientPersonalInfo);\r\n        console.log(this.user.clientResults);\r\n        this.router.navigate('#/results');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createAgeSlider();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateFamilyHealth} from '../utilities/calculateFamilyHealth';\r\nimport {Slider} from '../utilities/slider';\r\n\r\n@inject(Router, User, CalculateFamilyHealth, Slider)\r\nexport class familyhealth {\r\n    constructor(router, user, calculateFamilyHealth, slider) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateFamilyHealth = calculateFamilyHealth;\r\n        this.slider = slider;\r\n    }\r\n\r\n    //HEART DISEASE\r\n    heartdisease() {\r\n        this.user.clientFamilyHealth.checkHeartDisease = !this.user.clientFamilyHealth.checkHeartDisease;\r\n    }\r\n\r\n    spouseheartdisease() {\r\n        this.user.spouseFamilyHealth.checkHeartDisease = !this.user.spouseFamilyHealth.checkHeartDisease;\r\n    }\r\n\r\n    //CANCER\r\n    cancer() {\r\n        this.user.clientFamilyHealth.checkCancer = !this.user.clientFamilyHealth.checkCancer;\r\n    }\r\n\r\n    spousecancer() {\r\n        this.user.spouseFamilyHealth.checkCancer = !this.user.spouseFamilyHealth.checkCancer;\r\n    }\r\n\r\n    //MENTAL HEALTH\r\n    mentalhealth() {\r\n        this.user.clientFamilyHealth.checkMentalHealth = !this.user.clientFamilyHealth.checkMentalHealth;\r\n    }\r\n\r\n    spousementalhealth() {\r\n        this.user.spouseFamilyHealth.checkMentalHealth = !this.user.spouseFamilyHealth.checkMentalHealth;\r\n    }\r\n\r\n    //DIABETES\r\n    diabetes() {\r\n        this.user.clientFamilyHealth.checkDiabetes = !this.user.clientFamilyHealth.checkDiabetes;\r\n    }\r\n\r\n    spousediabetes() {\r\n        this.user.spouseFamilyHealth.checkDiabetes = !this.user.spouseFamilyHealth.checkDiabetes;\r\n    }\r\n\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createLifeExpectancySlider();\r\n    }\r\n}","import $ from 'jquery';\r\nimport 'jquery-ui-dist';\r\n\r\nimport {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateMyHealth} from '../utilities/calculateMyHealth';\r\n\r\n@inject(Router, User, CalculateMyHealth)\r\nexport class myhealth {\r\n    heightError = \"\";\r\n    formHeightWeight = \"\";\r\n    validHeight = false;\r\n    validHeightSpouse = false;\r\n    validBMIClient = false;\r\n    validBMISpouse = false;\r\n    iconClientType = \"underweight\";\r\n    iconSpouseType = \"underweight\";\r\n\r\n    constructor(router, user, calculateMyHealth) {\r\n        this.calculateMyHealth = calculateMyHealth;\r\n        this.router = router;\r\n        this.user = user;\r\n    }\r\n\r\n    //Checks for valid height for the client.\r\n    checkHeight() {\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(this.user.clientMyHealth.height);\r\n        this.validHeight = !valid;\r\n        this.heightError = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = this.user.clientMyHealth.height.split(\"'\");\r\n            this.user.clientMyHealth.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        console.log(this.user.clientMyHealth.heightInInches);\r\n    }\r\n\r\n    //Checks for valid height for the spouse. \r\n    checkHeightSpouse() {\r\n        //TODO: DONT LET CLICK SUBMIT WITHOUT PROPER HEIGHT\r\n        console.log(this.user.spouseMyHealth.height);\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(this.user.spouseMyHealth.height);\r\n        this.validHeightSpouse = !valid;\r\n        this.heightErrorSpouse = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = this.user.spouseMyHealth.height.split(\"'\");\r\n            this.user.spouseMyHealth.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        console.log(this.user.spouseMyHealth.heightInInches);\r\n    }\r\n\r\n    //This calculates the BMI once both of the height and weight have been entered\r\n    calculateBMI() {\r\n        if(!this.validHeight) {\r\n            this.calculateMyHealth.calculateBMI(this.user.clientMyHealth);\r\n            this.validBMIClient = true;\r\n            iconClientType = setIconType(this.user.clientMyHealth.bmi, false);\r\n        }\r\n        if(!this.validHeightSpouse) {\r\n            this.calculateMyHealth.calculateBMI(this.user.spouseMyHealth);\r\n            this.validBMISpouse = true;\r\n            iconsetIconType(this.user.spouseMyHealth.bmi, true);\r\n        }\r\n        this.formHeightWeight = \"form-height-weight\";\r\n    }\r\n\r\n    //Determines the icon types give the client/spouse. If client is passed in then, spouse = false.\r\n    setIconType(person, spouse) {\r\n        var currentPerson = spouse ? iconClientType : iconSpouseType;\r\n        switch(this.user.clientMyHealth.bmi) {\r\n            case person.bmi < 18:\r\n                currentPerson = \"underweight\";\r\n            case person.bmi > 18 && person.bmi < 23:\r\n                currentPerson = \"normal\";\r\n            case person.bmi > 23 && person.bmi < 30:\r\n                currenPerson = \"overweight\";\r\n            case person.bmi > 30 && person.bmi < 35:\r\n                currentPerson = \"obese\";\r\n            case person.bmi > 35:\r\n                currentPerson = \"extremely-obese\";\r\n        }\r\n        return currentPerson;\r\n    }\r\n\r\n    smoking() {\r\n        this.user.clientMyHealth.checksmoking = !this.user.clientMyHealth.checksmoking;\r\n    }\r\n\r\n    smokingSpouse() {\r\n        this.user.spouseMyHealth.checksmoking = !this.user.spouseMyHealth.checksmoking;\r\n    }\r\n\r\n    back() {\r\n        console.log(this.user.clientMyHealth);\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        //this.calculateMyHealth.calculateExercise();\r\n        console.log(this.user.clientMyHealth);\r\n        console.log(this.user.spouseMyHealth);\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    //This takes care of setting up the content for the tooltips\r\n    attached() {\r\n        //=====================MY HEALTH TOOLTIPS============================\r\n        $('#height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n\r\n        $('#spouse-height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#spouse-weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#spouse-exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateOccupation} from '../utilities/calculateOccupation';\r\n\r\n@inject(Router, User, CalculateOccupation)\r\nexport class occupation {\r\n    constructor(router, user, calculateOccupation) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateOccupation = calculateOccupation;\r\n    }\r\n\r\n    //EDUCATION\r\n    education() {\r\n        this.user.clientOccupation.checkEducation = !this.user.clientOccupation.checkEducation;\r\n    }\r\n\r\n    spouseeducation() {\r\n        this.user.spouseOccupation.checkEducation = !this.user.spouseOccupation.checkEducation;\r\n    }\r\n\r\n    //CONSTRUCTION\r\n    construction() {\r\n        this.user.clientOccupation.checkConstruction = !this.user.clientOccupation.checkConstruction;\r\n    }\r\n\r\n    spouseconstruction() {\r\n        this.user.spouseOccupation.checkConstruction = !this.user.spouseOccupation.checkConstruction;\r\n    }\r\n\r\n    //EMERGENCY RESPONDING\r\n    emergencyResponding() {\r\n        this.user.clientOccupation.checkEmergencyResponding = !this.user.clientOccupation.checkEmergencyResponding;\r\n    }\r\n\r\n    spouseemergencyResponding() {\r\n        this.user.spouseOccupation.checkEmergencyResponding = !this.user.spouseOccupation.checkEmergencyResponding;\r\n    }\r\n\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {Chart} from '../utilities/chart';\r\nimport {CalculateResults} from '../utilities/calculateResults';\r\n\r\n@inject(Router, User, Chart, CalculateResults)\r\nexport class results {\r\n    constructor(router, user, chart, calculateResults) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.chart = chart;\r\n        this.calculateResults = calculateResults;\r\n    }\r\n\r\n    activate() {\r\n        // this.calculateResults.addExerciseExpectancy();\r\n        // console.log(this.user.clientPersonalInfo);\r\n        // console.log(this.user.clientResults);\r\n    }\r\n\r\n    attached() {\r\n        this.chart.createChart('chart-container');\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","export class FamilyHealthData {\r\n    constructor() {\r\n        this.familyLifeExpectancy = 70;\r\n        this.checkHeartDisease = false;\r\n        this.checkCancer = false;\r\n        this.checkMentalHealth = false;\r\n        this.checkDiabetes = false;\r\n        \r\n    }\r\n}","export class MyHealthData {\r\n    constructor() {\r\n        this.height;\r\n        this.heightInInches;\r\n        this.weight;\r\n        this.bmi;\r\n\r\n        this.exercisePerWeek;\r\n        this.sleepPerWeek;\r\n        this.healthRank;\r\n\r\n        this.alcoholPerWeek;\r\n        this.checksmoking;\r\n\r\n        this.exerciseLifeExpectancy;\r\n    }\r\n}","export class OccupationData {\r\n    constructor() {\r\n        this.checkEducation = false;\r\n        this.checkConstruction = false;\r\n        this.checkEmergencyResponding = false;\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class PersonalInfoData {\r\n    constructor() {\r\n        this.checkspouse = false;\r\n        \r\n        this.age = 30;\r\n        this.checkgender = true;\r\n        this.gender = 'male';\r\n        this.race = 'white';\r\n        this.maritalStatus;\r\n\r\n        this.state = \"Please Select\";\r\n        this.county = 'Please Select';\r\n        this.countyLifeExpectancy;\r\n        this.expectedYearsLeft;\r\n        this.testTuples = [];\r\n\r\n        this.ethnicityLifeExpectancy;\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class ResultsData {\r\n    constructor() {\r\n        this.overallLifeExpectancy;\r\n    }\r\n}","export class StateData {\r\n    stateSet = new Set();\r\n    stateToCountyMap = new Map();\r\n}","import {singleton} from 'aurelia-framework';\r\nimport {PersonalInfoData} from '../services/personalInfoData';\r\nimport {MyHealthData} from '../services/myHealthData';\r\nimport {FamilyHealthData} from '../services/familyHealthData';\r\nimport {OccupationData} from '../services/occupationData';\r\nimport {ResultsData} from '../services/resultsData';\r\n\r\n@singleton()\r\nexport class User {\r\n    constructor() {\r\n        this.clientPersonalInfo = new PersonalInfoData();\r\n        this.spousePersonalInfo = new PersonalInfoData();\r\n        \r\n        this.clientMyHealth = new MyHealthData();\r\n        this.spouseMyHealth = new MyHealthData();\r\n\r\n        this.clientFamilyHealth = new FamilyHealthData();\r\n        this.spouseFamilyHealth = new FamilyHealthData();\r\n\r\n        this.clientOccupation = new OccupationData();\r\n        this.spouseOccupation = new OccupationData();\r\n\r\n        this.clientResults = new ResultsData();\r\n        this.spouseResults = new ResultsData();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateFamilyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateMyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    //this calculates the body mass index(if you're wondering, tweet me @JesseCochran1)\r\n    calculateBMI(person) {\r\n        var metricWeight = person.weight * 0.45;\r\n        var metricHeight = person.heightInInches * 0.025;\r\n        var metricHeightSquared = metricHeight * metricHeight;\r\n        person.bmi = metricWeight / metricHeightSquared;\r\n    }\r\n\r\n    //this calculates added/decreased life expectancy based on how many hours of exercise per week\r\n    calculateExercise() {\r\n        var exercisePerWeek = this.user.clientMyHealth.exercisePerWeek;\r\n        if(exercisePerWeek.indexOf(\"Less\") !== -1) {\r\n            this.user.clientMyHealth.exerciseLifeExpectancy = 1.8;\r\n        }\r\n        else if(exercisePerWeek.indexOf(\"Approximately\") !== -1) {\r\n            this.user.clientMyHealth.exerciseLifeExpectancy = 3.4;\r\n        }\r\n        else if(exercisePerWeek.indexOf(\"More\") !== -1) {\r\n            this.user.clientMyHealth.exerciseLifeExpectancy = 4.5;\r\n        }\r\n        else {\r\n            this.user.clientMyHealth.exerciseLifeExpectancy = 0;\r\n        }\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateOccupation {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {User} from '../services/user';\r\n\r\n@inject(HttpClient, User)\r\nexport class CalculateResults {\r\n    httpClient;\r\n\r\n    constructor(httpClient, user) {\r\n        this.httpClient = httpClient;\r\n        this.user = user;\r\n    }\r\n\r\n    //Gets the life table based on the users race and gender\r\n    async getLifeTableData(user) {\r\n        let data = await this.httpClient.fetch('/api/life-table/' + user.clientPersonalInfo.race.toLowerCase() + '-' + user.clientPersonalInfo.gender.toLowerCase() + '.json');\r\n        let data2 = await data.json();\r\n        this.setUserExpectedAge(data2, user);\r\n        this.getTestTuples(data2);\r\n    }\r\n\r\n    //Iterates through the json object to determine the user's expected age\r\n    setUserExpectedAge(data, user) {\r\n        data.forEach(function(value) {\r\n            //If the user is currently the age in the json object, then the current age is set\r\n            var currentAgeArray = [];\r\n            currentAgeArray[0] = parseInt(value.Age.slice(0, 2));\r\n            currentAgeArray[1] = parseInt(value.Age.slice(3, 5));\r\n            if(currentAgeArray[0] === user.clientPersonalInfo.age || currentAgeArray[1] === user.clientPersonalInfo.age) {\r\n                user.clientPersonalInfo.expectedYearsLeft = parseInt(value.ExpectedAge);\r\n                user.clientPersonalInfo.ethnicityLifeExpectancy = user.clientPersonalInfo.expectedYearsLeft + user.clientPersonalInfo.age;\r\n            }\r\n        });\r\n    }\r\n\r\n    addExerciseExpectancy() {\r\n        var expectedLife = this.user.clientPersonalInfo.ethnicityLifeExpectancy;\r\n        var addedExercise = this.user.clientMyHealth.exerciseLifeExpectancy;\r\n        console.log(this.user.clientPersonalInfo.ethnicityLifeExpectancy);\r\n        console.log(this.user.clientMyHealth.exerciseLifeExpectancy);\r\n        this.user.clientResults.overallLifeExpectancy = expectedLife + addedExercise;\r\n    }\r\n\r\n    //Averages the life expectancy from the life table and life expectancy county table\r\n    averageLifeExpectancy() {\r\n        var averagedLifeExpectancy = ((this.user.clientPersonalInfo.expectedYearsLeft + this.user.clientPersonalInfo.age) + this.user.clientPersonalInfo.ethnicityLifeExpectancy ) / 2;\r\n        //TODO: Set this variable to new life expectancy if we decide to in future\r\n    }\r\n    \r\n    //Gets test tuples for chart data\r\n    getTestTuples(jsonData) {\r\n        var self = this;\r\n        var tempArr = [];\r\n        jsonData.forEach(function(value) {\r\n            tempArr.push([value.Age, 1 - value.Probability]);\r\n        });\r\n        this.user.clientPersonalInfo.testTuples = tempArr;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport * as HighCharts from \"highcharts\";\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class Chart {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    createChart(containerID) {\r\n        //console.log(this.user.clientPersonalInfo.testTuples);\r\n        Highcharts.chart(containerID, {\r\n                title: {\r\n                    text: 'Life Expectancy'\r\n                },\r\n                xAxis: {\r\n                    title: {\r\n                        text: 'Age'\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    series: {\r\n                        pointStart: this.user.clientPersonalInfo.age\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: 'Probability'\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Client',\r\n                    data:  this.user.clientPersonalInfo.testTuples\r\n                }, {\r\n                    name: 'Co-client',\r\n                    data: this.user.clientPersonalInfo.testTuples\r\n                }, {\r\n                    name: 'Average',\r\n                    data: this.user.clientPersonalInfo.testTuples\r\n                }]\r\n            }); \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {StateData} from '../services/stateData';\r\n\r\n@inject(StateData)\r\nexport class ReadFile {\r\n\r\n    constructor(stateData) {\r\n        this.stateData = stateData;\r\n    }\r\n\r\n    //Given the json data this method will create a set of states and save in stateData.js\r\n    getStateList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject) { \r\n            self.stateData.stateSet.add(stateObject.State.toLowerCase())\r\n        });\r\n        this.getCountyList(jsonData);\r\n    } \r\n\r\n    //Given a state as input this method reads the csv file and returns all counties for that state.\r\n    getCountyList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject){\r\n            if(self.stateData.stateToCountyMap.has(stateObject.State.toLowerCase())) {\r\n                   var existingValues = self.stateData.stateToCountyMap.get(stateObject.State.toLowerCase());\r\n                   // Format for each county => County : Male Life Expectancy : Female Life Expectancy\r\n                   existingValues += \" \" + stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\";\r\n                   self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), existingValues);\r\n            }\r\n            else self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\");\r\n        });\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\n\r\n@inject(User)\r\nexport class Slider {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n    \r\n    createAgeSlider() {\r\n        $(\"#age\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientPersonalInfo.age = data.from;\r\n            }\r\n        });\r\n\r\n        $(\"#spouseage\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spousePersonalInfo.age = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    createLifeExpectancySlider() {\r\n        $('#familyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n\r\n        $('#spousefamilyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spouseFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n}"],"sourceRoot":".."}