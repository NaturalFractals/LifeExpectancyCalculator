{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/aboutyou/personalinfo.js","src/health/familyhealth.js","src/health/myhealth.js","src/occupation/occupation.js","src/resources/index.js","src/results/results.js","src/utilities/calculateFamilyHealth.js","src/utilities/calculateMyHealth.js","src/utilities/calculateOccupation.js","src/utilities/calculateResults.js","src/utilities/chart.js","src/utilities/readFile.js","src/utilities/slider.js","src/services/familyHealthData.js","src/services/myHealthData.js","src/services/occupationData.js","src/services/personalInfoData.js","src/services/stateData.js","src/services/user.js"],"names":["App","httpClient","readFile","message","activate","fetch","data","json","data2","getStateList","configureRouter","config","router","title","map","route","moduleId","name","nav","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","ionRangeSlider","personalinfo","user","stateData","slider","calculateResults","currentCountyArray","checkState","gender","clientPersonalInfo","checkgender","console","log","spousegender","spousePersonalInfo","checkspouse","state","self","countyWithLifeArrays","stateToCountyMap","get","split","forEach","currentCountyInfo","push","pop","county","checkLifeExpectancy","lifeExpectancy","indexOf","checkStateSpouse","checkLifeExpectancySpouse","myhealth","navigate","familyhealth","occupation","submit","getLifeTableData","attached","createAgeSlider","calculateFamilyHealth","heartdisease","clientFamilyHealth","checkHeartDisease","spouseheartdisease","spouseFamilyHealth","cancer","checkCancer","spousecancer","mentalhealth","checkMentalHealth","spousementalhealth","diabetes","checkDiabetes","spousediabetes","back","createLifeExpectancySlider","calculateMyHealth","heightError","validHeight","validHeightSpouse","checkHeight","valid","test","clientMyHealth","height","feetAndInches","heightInInches","parseInt","checkHeightSpouse","spouseMyHealth","heightErrorSpouse","smoking","checksmoking","smokingSpouse","calculateBMI","tooltip","content","calculateOccupation","education","clientOccupation","checkEducation","spouseeducation","spouseOccupation","construction","checkConstruction","spouseconstruction","emergencyResponding","checkEmergencyResponding","spouseemergencyResponding","results","chart","createChart","CalculateFamilyHealth","CalculateMyHealth","metricWeight","weight","metricHeight","metricHeightSquared","bmi","CalculateOccupation","CalculateResults","race","toLowerCase","setUserExpectedAge","getTestTuples","value","currentAgeArray","Age","slice","age","expectedYearsLeft","ExpectedAge","averageLifeExpectancy","averagedLifeExpectancy","ageAndRaceLifeExpectancy","jsonData","tempArr","Probability","testTuples","HighCharts","Chart","containerID","Highcharts","text","xAxis","plotOptions","series","pointStart","yAxis","ReadFile","stateObject","stateSet","add","State","getCountyList","has","existingValues","County","Male","Female","set","getCountyLifeExpectancy","countyToLifeExpectancy","Slider","$","grid","min","max","from","step","onFinish","familyLifeExpectancy","FamilyHealthData","MyHealthData","exercisePerWeek","sleepPerWeek","healthRank","alcoholPerWeek","OccupationData","PersonalInfoData","maritalStatus","countyLifeExpectancy","StateData","Set","Map","User"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {ReadFile} from 'utilities/readFile';\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\n@inject(HttpClient, ReadFile)\r\nexport class App {\r\n  httpClient;\r\n\r\n  constructor(httpClient, readFile) {\r\n    this.httpClient = httpClient;\r\n    this.readFile = readFile;\r\n    this.message = 'Life Expectancy Calculator';\r\n  }\r\n\r\n  async activate() {\r\n    let data = await this.httpClient.fetch('/api/life-expectancy/get.json');\r\n    let data2 = await data.json();\r\n    this.readFile.getStateList(data2);\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Life Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'personalinfo'], moduleId: 'aboutyou/personalinfo',\r\n        name: 'personalinfo', title: 'Personal Info', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'myhealth', moduleId: 'health/myhealth',\r\n        name: 'myhealth', title: 'My Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'familyhealth', moduleId: 'health/familyhealth',\r\n        name: 'familyhealth', title: 'Family Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'occupation', moduleId: 'occupation/occupation',\r\n        name: 'occupation', title: 'Occupation', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Results', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'jsonfile', moduleId: 'services/lifeExpectancy.json!json',\r\n        name: 'jsonfile', title: 'Json File', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {StateData} from '../services/stateData';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\nimport {Slider} from '../utilities/slider';\r\nimport {CalculateResults} from '../utilities/calculateResults';\r\n\r\n@inject(Router, User, StateData, Slider, CalculateResults)\r\nexport class personalinfo {\r\n    currentCountyArray = [];\r\n\r\n    constructor(router, user, stateData, slider, calculateResults) {\r\n        this.slider = slider;\r\n        this.router = router;\r\n        this.user = user;\r\n        this.stateData = stateData;\r\n        this.calculateResults = calculateResults;\r\n        this.checkState();\r\n    }\r\n\r\n    gender() {\r\n        this.user.clientPersonalInfo.checkgender = !this.user.clientPersonalInfo.checkgender;\r\n        this.user.clientPersonalInfo.gender = (this.user.clientPersonalInfo.checkgender) ? 'Male' : 'Female';\r\n        console.log(this.user.clientPersonalInfo);\r\n    }\r\n\r\n    spousegender() {\r\n        this.user.spousePersonalInfo.checkgender = !this.user.spousePersonalInfo.checkgender;\r\n        this.user.spousePersonalInfo.gender = (this.user.spousePersonalInfo.checkgender) ? 'Male' : 'Female';\r\n        console.log(this.user.clientPersonalInfo);\r\n        console.log(this.user.spousePersonalInfo);\r\n    }\r\n\r\n    checkspouse() {\r\n        this.user.clientPersonalInfo.checkspouse = !this.user.clientPersonalInfo.checkspouse;\r\n    }\r\n\r\n    //======================LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n    //This method retrieves all of the counties from the client's current state\r\n    checkState() {\r\n        var state = this.user.clientPersonalInfo.state;\r\n        if(state != \"Please Select\") {\r\n            var self = this;\r\n            this.currentCountyArray = [];\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                self.currentCountyArray.push(currentCountyInfo[0]);\r\n            });\r\n            this.currentCountyArray.pop();\r\n        }\r\n        else this.user.clientPersonalInfo.county = \"Please Select\";\r\n    }\r\n\r\n    //This method checks the current client's life expectancy\r\n    checkLifeExpectancy() {\r\n        if(this.user.clientPersonalInfo.county != \"Please Select\") {\r\n            var self = this;\r\n            var state = this.user.clientPersonalInfo.state;\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                //Life expectancy of male is index 2, life expectancy of female is index 1\r\n                var lifeExpectancy =  self.user.clientPersonalInfo.checkgender ? currentCountyInfo[2] : currentCountyInfo[1];\r\n                //If county name is found in array, then get life expectancy\r\n                if(currentCountyInfo[0].indexOf(self.user.clientPersonalInfo.county) != -1) {\r\n                    self.user.clientPersonalInfo.lifeExpectancy =  self.user.clientPersonalInfo.checkgender ? currentCountyInfo[1] : currentCountyInfo[2];\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    //This method retrieves all of the counties from the co-client's current state\r\n    checkStateSpouse() {\r\n        var state = this.user.spousePersonalInfo.state;\r\n        if(state != \"Please Select\") {\r\n            var self = this;\r\n            this.currentCountyArray = [];\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                self.currentCountyArray.push(currentCountyInfo[0]);\r\n            });\r\n            this.currentCountyArray.pop();\r\n        }\r\n        else this.user.spousePersonalInfo.county = \"Please Select\";\r\n    }\r\n\r\n    //This method checks the current co-client's life expectancy\r\n    checkLifeExpectancySpouse() {\r\n        if(this.user.spousePersonalInfo.county != \"Please Select\") {\r\n            var self = this;\r\n            var state = this.user.spousePersonalInfo.state;\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                //Life expectancy of male is index 2, life expectancy of female is index 1\r\n                var lifeExpectancy =  self.user.spousePersonalInfo.checkgender ? currentCountyInfo[2] : currentCountyInfo[1];\r\n                //If county name is found in array, then get life expectancy\r\n                if(currentCountyInfo[0].indexOf(self.user.spousePersonalInfo.county) != -1) {\r\n                    self.user.spousePersonalInfo.lifeExpectancy =  self.user.spousePersonalInfo.checkgender ? currentCountyInfo[1] : currentCountyInfo[2];\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //===================END LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n\r\n\r\n    myhealth() {\r\n        this.router.navigate('#/myhealth');  \r\n    }\r\n\r\n    familyhealth() {\r\n        this.router.navigate('#/familyhealth');  \r\n    }\r\n\r\n    occupation() {\r\n        this.router.navigate('#/occupation');  \r\n    }\r\n\r\n    submit() {\r\n        this.calculateResults.getLifeTableData(this.user);\r\n        this.router.navigate('#/results');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createAgeSlider();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateFamilyHealth} from '../utilities/calculateFamilyHealth';\r\nimport {Slider} from '../utilities/slider';\r\n\r\n@inject(Router, User, CalculateFamilyHealth, Slider)\r\nexport class familyhealth {\r\n    constructor(router, user, calculateFamilyHealth, slider) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateFamilyHealth = calculateFamilyHealth;\r\n        this.slider = slider;\r\n    }\r\n\r\n    //HEART DISEASE\r\n    heartdisease() {\r\n        this.user.clientFamilyHealth.checkHeartDisease = !this.user.clientFamilyHealth.checkHeartDisease;\r\n    }\r\n\r\n    spouseheartdisease() {\r\n        this.user.spouseFamilyHealth.checkHeartDisease = !this.user.spouseFamilyHealth.checkHeartDisease;\r\n    }\r\n\r\n    //CANCER\r\n    cancer() {\r\n        this.user.clientFamilyHealth.checkCancer = !this.user.clientFamilyHealth.checkCancer;\r\n    }\r\n\r\n    spousecancer() {\r\n        this.user.spouseFamilyHealth.checkCancer = !this.user.spouseFamilyHealth.checkCancer;\r\n    }\r\n\r\n    //MENTAL HEALTH\r\n    mentalhealth() {\r\n        this.user.clientFamilyHealth.checkMentalHealth = !this.user.clientFamilyHealth.checkMentalHealth;\r\n    }\r\n\r\n    spousementalhealth() {\r\n        this.user.spouseFamilyHealth.checkMentalHealth = !this.user.spouseFamilyHealth.checkMentalHealth;\r\n    }\r\n\r\n    //DIABETES\r\n    diabetes() {\r\n        this.user.clientFamilyHealth.checkDiabetes = !this.user.clientFamilyHealth.checkDiabetes;\r\n    }\r\n\r\n    spousediabetes() {\r\n        this.user.spouseFamilyHealth.checkDiabetes = !this.user.spouseFamilyHealth.checkDiabetes;\r\n    }\r\n\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createLifeExpectancySlider();\r\n    }\r\n}","import $ from 'jquery';\r\nimport 'jquery-ui-dist';\r\n\r\nimport {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateMyHealth} from '../utilities/calculateMyHealth';\r\n\r\n@inject(Router, User, CalculateMyHealth)\r\nexport class myhealth {\r\n    heightError = \"\";\r\n    validHeight = false;\r\n    validHeightSpouse = false;\r\n\r\n    constructor(router, user, calculateMyHealth) {\r\n        this.calculateMyHealth = calculateMyHealth;\r\n        this.router = router;\r\n        this.user = user;\r\n    }\r\n\r\n    checkHeight() {\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(this.user.clientMyHealth.height);\r\n        this.validHeight = !valid;\r\n        this.heightError = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = this.user.clientMyHealth.height.split(\"'\");\r\n            this.user.clientMyHealth.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        console.log(this.user.clientMyHealth.heightInInches);\r\n    }\r\n\r\n    checkHeightSpouse() {\r\n        console.log(this.user.spouseMyHealth.height);\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(this.user.spouseMyHealth.height);\r\n        this.validHeightSpouse = !valid;\r\n        this.heightErrorSpouse = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = this.user.spouseMyHealth.height.split(\"'\");\r\n            this.user.spouseMyHealth.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        console.log(this.user.spouseMyHealth.heightInInches);\r\n    }\r\n\r\n    smoking() {\r\n        this.user.clientMyHealth.checksmoking = !this.user.clientMyHealth.checksmoking;\r\n    }\r\n\r\n    smokingSpouse() {\r\n        this.user.spouseMyHealth.checksmoking = !this.user.spouseMyHealth.checksmoking;\r\n    }\r\n\r\n    back() {\r\n        console.log(this.user.clientMyHealth);\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.calculateMyHealth.calculateBMI();\r\n        console.log(this.user.clientMyHealth);\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    attached() {\r\n        //=====================MY HEALTH TOOLTIPS============================\r\n        $('#height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise you get 7 minutes of extra life. -National Institute of Health\"\r\n        });\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateOccupation} from '../utilities/calculateOccupation';\r\n\r\n@inject(Router, User, CalculateOccupation)\r\nexport class occupation {\r\n    constructor(router, user, calculateOccupation) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateOccupation = calculateOccupation;\r\n    }\r\n\r\n    //EDUCATION\r\n    education() {\r\n        this.user.clientOccupation.checkEducation = !this.user.clientOccupation.checkEducation;\r\n    }\r\n\r\n    spouseeducation() {\r\n        this.user.spouseOccupation.checkEducation = !this.user.spouseOccupation.checkEducation;\r\n    }\r\n\r\n    //CONSTRUCTION\r\n    construction() {\r\n        this.user.clientOccupation.checkConstruction = !this.user.clientOccupation.checkConstruction;\r\n    }\r\n\r\n    spouseconstruction() {\r\n        this.user.spouseOccupation.checkConstruction = !this.user.spouseOccupation.checkConstruction;\r\n    }\r\n\r\n    //EMERGENCY RESPONDING\r\n    emergencyResponding() {\r\n        this.user.clientOccupation.checkEmergencyResponding = !this.user.clientOccupation.checkEmergencyResponding;\r\n    }\r\n\r\n    spouseemergencyResponding() {\r\n        this.user.spouseOccupation.checkEmergencyResponding = !this.user.spouseOccupation.checkEmergencyResponding;\r\n    }\r\n\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {Chart} from '../utilities/chart';\r\n\r\n@inject(Router, User, Chart)\r\nexport class results {\r\n    constructor(router, user, chart) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.chart = chart;\r\n    }\r\n\r\n    attached() {\r\n        this.chart.createChart('chart-container');\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateFamilyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateMyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    //this calculates the body mass index(if you're wondering, tweet me @JesseCochran1)\r\n    calculateBMI() {\r\n        var metricWeight = this.user.clientMyHealth.weight * 0.45;\r\n        var metricHeight = this.user.clientMyHealth.heightInInches * 0.025;\r\n        var metricHeightSquared = metricHeight * metricHeight;\r\n        this.user.clientMyHealth.bmi = metricWeight / metricHeightSquared;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateOccupation {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {User} from '../services/user';\r\n\r\n@inject(HttpClient, User)\r\nexport class CalculateResults {\r\n    httpClient;\r\n\r\n    constructor(httpClient, user) {\r\n        this.httpClient = httpClient;\r\n        this.user = user;\r\n    }\r\n\r\n    //Gets the life table based on the users race and gender\r\n    async getLifeTableData(user) {\r\n        let data = await this.httpClient.fetch('/api/life-table/' + user.clientPersonalInfo.race.toLowerCase() + '-' + user.clientPersonalInfo.gender.toLowerCase() + '.json');\r\n        let data2 = await data.json();\r\n        this.setUserExpectedAge(data2, user);\r\n        this.getTestTuples(data2);\r\n    }\r\n\r\n    //Iterates through the json object to determine the user's expected age\r\n    setUserExpectedAge(data, user) {\r\n        data.forEach(function(value) {\r\n            //If the user is currently the age in the json object, then the current age is set\r\n            var currentAgeArray = [];\r\n            currentAgeArray[0] = parseInt(value.Age.slice(0, 2));\r\n            currentAgeArray[1] = parseInt(value.Age.slice(3, 5));\r\n            if(currentAgeArray[0] === user.clientPersonalInfo.age || currentAgeArray[1] === user.clientPersonalInfo.age) {\r\n                user.clientPersonalInfo.expectedYearsLeft = parseInt(value.ExpectedAge);\r\n            }\r\n        });\r\n    }\r\n\r\n    //Averages the life expectancy from the life table and life expectancy county table\r\n    averageLifeExpectancy() {\r\n        var averagedLifeExpectancy = ((this.user.clientPersonalInfo.expectedYearsLeft + this.user.clientPersonalInfo.age) + this.user.clientPersonalInfo.ageAndRaceLifeExpectancy ) / 2;\r\n        //TODO: Set this variable to new life expectancy if we decide to in future\r\n    }\r\n    \r\n    //Gets test tuples for chart data\r\n    getTestTuples(jsonData) {\r\n        var self = this;\r\n        var tempArr = [];\r\n        jsonData.forEach(function(value) {\r\n            tempArr.push([value.Age, 1 - value.Probability]);\r\n        });\r\n        this.user.clientPersonalInfo.testTuples = tempArr;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport * as HighCharts from \"highcharts\";\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class Chart {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    createChart(containerID) {\r\n        console.log(this.user.clientPersonalInfo.testTuples);\r\n        Highcharts.chart(containerID, {\r\n                title: {\r\n                    text: 'Life Expectancy'\r\n                },\r\n                xAxis: {\r\n                    title: {\r\n                        text: 'Age'\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    series: {\r\n                        pointStart: this.user.clientPersonalInfo.age\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: 'Probability'\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Client',\r\n                    data:  this.user.clientPersonalInfo.testTuples\r\n                }, {\r\n                    name: 'Co-client',\r\n                    data: this.user.clientPersonalInfo.testTuples\r\n                }, {\r\n                    name: 'Average',\r\n                    data: this.user.clientPersonalInfo.testTuples\r\n                }]\r\n            }); \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {StateData} from '../services/stateData';\r\n\r\n@inject(StateData)\r\nexport class ReadFile {\r\n\r\n    constructor(stateData) {\r\n        this.stateData = stateData;\r\n    }\r\n\r\n    //Given the json data this method will create a set of states and save in stateData.js\r\n    getStateList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject) { \r\n            self.stateData.stateSet.add(stateObject.State.toLowerCase())\r\n        });\r\n        this.getCountyList(jsonData);\r\n    } \r\n\r\n    //Given a state as input this method reads the csv file and returns all counties for that state.\r\n    getCountyList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject){\r\n            if(self.stateData.stateToCountyMap.has(stateObject.State.toLowerCase())) {\r\n                   var existingValues = self.stateData.stateToCountyMap.get(stateObject.State.toLowerCase());\r\n                   // Format for each county => County : Male Life Expectancy : Female Life Expectancy\r\n                   existingValues += \" \" + stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\";\r\n                   self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), existingValues);\r\n            }\r\n            else  self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\");\r\n        });\r\n    }\r\n\r\n    //Given a county name this method will return the life expectancy for that county\r\n    getCountyLifeExpectancy(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject) {\r\n            if(self.stateData.countyToLifeExpectancy.has(stateObject.County.toLowerCase())) {\r\n                \r\n            }\r\n        });\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\n\r\n@inject(User)\r\nexport class Slider {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n    \r\n    createAgeSlider() {\r\n        $(\"#age\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientPersonalInfo.age = data.from;\r\n            }\r\n        });\r\n\r\n        $(\"#spouseage\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spousePersonalInfo.age = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    createLifeExpectancySlider() {\r\n        $('#familyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n\r\n        $('#spousefamilyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spouseFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n}","export class FamilyHealthData {\r\n    constructor() {\r\n        this.familyLifeExpectancy = 70;\r\n        this.checkHeartDisease = false;\r\n        this.checkCancer = false;\r\n        this.checkMentalHealth = false;\r\n        this.checkDiabetes = false;\r\n        \r\n    }\r\n}","export class MyHealthData {\r\n    constructor() {\r\n        this.height;\r\n        this.heightInInches;\r\n        this.weight;\r\n        this.bmi;\r\n\r\n        this.exercisePerWeek;\r\n        this.sleepPerWeek;\r\n        this.healthRank;\r\n\r\n        this.alcoholPerWeek;\r\n        this.checksmoking;\r\n    }\r\n}","export class OccupationData {\r\n    constructor() {\r\n        this.checkEducation = false;\r\n        this.checkConstruction = false;\r\n        this.checkEmergencyResponding = false;\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class PersonalInfoData {\r\n    constructor() {\r\n        this.checkspouse = false;\r\n        \r\n        this.age = 30;\r\n        this.checkgender = true;\r\n        this.gender = 'male';\r\n        this.race = 'white';\r\n        this.maritalStatus;\r\n\r\n        this.state = \"Please Select\";\r\n        this.county = 'Please Select';\r\n        this.countyLifeExpectancy;\r\n        this.expectedYearsLeft;\r\n        this.testTuples = [];\r\n    }\r\n}","export class StateData {\r\n    stateSet = new Set();\r\n    stateToCountyMap = new Map();\r\n}","import {singleton} from 'aurelia-framework';\r\nimport {PersonalInfoData} from '../services/personalInfoData';\r\nimport {MyHealthData} from '../services/myHealthData';\r\nimport {FamilyHealthData} from '../services/familyHealthData';\r\nimport {OccupationData} from '../services/occupationData';\r\n\r\n@singleton()\r\nexport class User {\r\n    constructor() {\r\n        this.clientPersonalInfo = new PersonalInfoData();\r\n        this.spousePersonalInfo = new PersonalInfoData();\r\n        \r\n        this.clientMyHealth = new MyHealthData();\r\n        this.spouseMyHealth = new MyHealthData();\r\n\r\n        this.clientFamilyHealth = new FamilyHealthData();\r\n        this.spouseFamilyHealth = new FamilyHealthData();\r\n\r\n        this.clientOccupation = new OccupationData();\r\n        this.spouseOccupation = new OccupationData();\r\n    }\r\n}"],"sourceRoot":".."}