{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/aboutyou/personalinfo.js","src/health/familyhealth.js","src/health/myhealth.js","src/occupation/occupation.js","src/resources/index.js","src/results/results.js","src/utilities/chart.js","src/utilities/readFile.js","src/utilities/slider.js","src/services/familyHealthData.js","src/services/myHealthData.js","src/services/occupationData.js","src/services/personalInfoData.js","src/services/stateData.js","src/services/user.js"],"names":["App","httpClient","readFile","message","activate","fetch","data","json","data2","getStateList","configureRouter","config","router","title","map","route","moduleId","name","nav","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","ionRangeSlider","personalinfo","user","stateData","currentCountyArray","checkState","gender","clientPersonalInfo","checkgender","console","log","checkspouse","state","stateToCountyMap","get","split","pop","myhealth","navigate","familyhealth","occupation","submit","attached","$","grid","min","max","from","step","onFinish","age","back","results","Chart","ReadFile","jsonData","self","forEach","stateObject","stateSet","add","State","toLowerCase","getCountyList","has","existingValues","County","set","getCountyLifeExpectancy","countyToLifeExpectancy","slider","createAgeSlider","type","to","FamilyHealthData","motherHealthCheck","fatherHealthCheck","MyHealthData","height","weight","OccupationData","job","PersonalInfoData","race","county","StateData","Set","Map","User","spousePersonalInfo","clientMyHealth","spouseMyHealth","clientFamilyHealth","spouseFamilyHealth","clientOccupation","spouseOccupation"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {ReadFile} from 'utilities/readFile';\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\n@inject(HttpClient, ReadFile)\r\nexport class App {\r\n  httpClient;\r\n\r\n  constructor(httpClient, readFile) {\r\n    this.httpClient = httpClient;\r\n    this.readFile = readFile;\r\n    this.message = 'Life Expectancy Calculator';\r\n  }\r\n\r\n  async activate() {\r\n    let data = await this.httpClient.fetch('/api/life-expectancy/get.json');\r\n    let data2 = await data.json();\r\n    this.readFile.getStateList(data2);\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Life Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'personalinfo'], moduleId: 'aboutyou/personalinfo',\r\n        name: 'personalinfo', title: 'Personal Info', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'myhealth', moduleId: 'health/myhealth',\r\n        name: 'myhealth', title: 'My Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'familyhealth', moduleId: 'health/familyhealth',\r\n        name: 'familyhealth', title: 'Family Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'occupation', moduleId: 'occupation/occupation',\r\n        name: 'occupation', title: 'Occupation', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Results', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'jsonfile', moduleId: 'services/lifeExpectancy.json!json',\r\n        name: 'jsonfile', title: 'Json File', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {StateData} from '../services/stateData';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\n\r\n\r\n@inject(Router, User, StateData)\r\nexport class personalinfo {\r\n    currentCountyArray = [];\r\n\r\n    constructor(router, user, stateData) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.stateData = stateData;\r\n        this.checkState();\r\n    }\r\n\r\n    gender() {\r\n        this.user.clientPersonalInfo.checkgender = !this.user.clientPersonalInfo.checkgender;\r\n        this.user.clientPersonalInfo.gender = (this.user.clientPersonalInfo.checkgender) ? 'Male' : 'Female';\r\n\r\n        console.log(this.user.clientPersonalInfo);\r\n    }\r\n\r\n    checkspouse() {\r\n        this.user.clientPersonalInfo.checkspouse = !this.user.clientPersonalInfo.checkspouse;\r\n    }\r\n\r\n    checkState() {\r\n        var state = this.user.clientPersonalInfo.state;\r\n        this.currentCountyArray = [];\r\n        this.currentCountyArray = this.stateData.stateToCountyMap.get(state).split(',');\r\n        this.currentCountyArray.pop();\r\n    }\r\n\r\n    myhealth() {\r\n        this.router.navigate('#/myhealth');  \r\n    }\r\n\r\n    familyhealth() {\r\n        this.router.navigate('#/familyhealth');  \r\n    }\r\n\r\n    occupation() {\r\n        this.router.navigate('#/occupation');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/results');  \r\n    }\r\n\r\n    attached() {\r\n        $(\"#age\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientPersonalInfo.age = data.from;\r\n            }\r\n        });\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class familyhealth {\r\n    constructor(router) {\r\n        this.router = router;\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class myhealth {\r\n    constructor(router) {\r\n        this.router = router;\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class occupation {\r\n    constructor(router) {\r\n        this.router = router;\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class results {\r\n    constructor(router) {\r\n        this.router = router;\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","export class Chart {\r\n    constructor() {\r\n        \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {StateData} from '../services/stateData';\r\n\r\n@inject(StateData)\r\nexport class ReadFile {\r\n\r\n    constructor(stateData) {\r\n        this.stateData = stateData;\r\n    }\r\n\r\n    //Given the json data this method will create a set of states and save in stateData.js\r\n    getStateList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject) { \r\n            self.stateData.stateSet.add(stateObject.State.toLowerCase())\r\n        });\r\n        this.getCountyList(jsonData);\r\n    } \r\n\r\n    //Given a state as input this method reads the csv file and returns all counties for that state.\r\n    getCountyList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject){\r\n            if(self.stateData.stateToCountyMap.has(stateObject.State.toLowerCase())) {\r\n                   var existingValues = self.stateData.stateToCountyMap.get(stateObject.State.toLowerCase());\r\n                   existingValues += \" \" + stateObject.County.toLowerCase() + \",\";\r\n                   self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), existingValues);\r\n            }\r\n            else  self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), stateObject.County.toLowerCase() + \",\");\r\n        });\r\n    }\r\n\r\n    //Given a county name this method will return the life expectancy for that county\r\n    getCountyLifeExpectancy(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject) {\r\n            if(self.stateData.countyToLifeExpectancy.has(stateObject.County.toLowerCase())) {\r\n                \r\n            }\r\n        });\r\n    }\r\n}","import * as ionRangeSlider from \"ion-rangeslider\";\r\n\r\nexport class slider {\r\n    constructor() {\r\n\r\n    }\r\n    \r\n    createAgeSlider() {\r\n        $(\"#age\").ionRangeSlider({\r\n            grid: true,\r\n            type: \"double\",\r\n            min: 0,\r\n            max: 100,\r\n            from: 5,\r\n            to: 95,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                // this.userData.client.retirementAge = data.from;\r\n                // this.userData.client.lifeExpectancy = data.to;\r\n                // this.userData.client.retirementyear = this.userData.client.retirementAge + this.userData.client.yearOfBirth;\r\n            }\r\n        });\r\n    }\r\n}","export class FamilyHealthData {\r\n    constructor() {\r\n        this.motherHealthCheck = false;\r\n        this.fatherHealthCheck = false;\r\n    }\r\n}","export class MyHealthData {\r\n    constructor() {\r\n        this.height;\r\n        this.weight;\r\n    }\r\n}","export class OccupationData {\r\n    constructor() {\r\n        this.job;\r\n    }\r\n}","export class PersonalInfoData {\r\n    constructor() {\r\n        this.age;\r\n        this.checkgender = true;\r\n        this.gender;\r\n        this.race;\r\n        this.checkspouse = false;\r\n        this.state = 'alabama';\r\n        this.county = 'autauga county';\r\n    }\r\n}","export class StateData {\r\n    stateSet = new Set();\r\n    stateToCountyMap = new Map();\r\n    countyToLifeExpectancy = new Map();\r\n}","import {singleton} from 'aurelia-framework';\r\nimport {PersonalInfoData} from '../services/personalInfoData';\r\nimport {MyHealthData} from '../services/myHealthData';\r\nimport {FamilyHealthData} from '../services/familyHealthData';\r\nimport {OccupationData} from '../services/occupationData';\r\n\r\n@singleton()\r\nexport class User {\r\n    constructor() {\r\n        this.clientPersonalInfo = new PersonalInfoData();\r\n        this.spousePersonalInfo = new PersonalInfoData();\r\n        \r\n        this.clientMyHealth = new MyHealthData();\r\n        this.spouseMyHealth = new MyHealthData();\r\n\r\n        this.clientFamilyHealth = new FamilyHealthData();\r\n        this.spouseFamilyHealth = new FamilyHealthData();\r\n\r\n        this.clientOccupation = new OccupationData();\r\n        this.spouseOccupation = new OccupationData();\r\n    }\r\n}"],"sourceRoot":".."}