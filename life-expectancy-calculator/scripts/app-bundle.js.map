{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/aboutyou/personalinfo.js","src/health/familyhealth.js","src/health/myhealth.js","src/occupation/occupation.js","src/resources/index.js","src/results/results.js","src/services/user.js","src/utilities/chart.js","src/utilities/readFile.js","src/utilities/slider.js","src/services/data/familyHealthData.js","src/services/data/myHealthData.js","src/services/data/occupationData.js","src/services/data/personalInfoData.js","src/services/data/resultsData.js","src/services/data/stateData.js","src/utilities/calculations/calculateFamilyHealth.js","src/utilities/calculations/calculateMyHealth.js","src/utilities/calculations/calculateOccupation.js","src/utilities/calculations/calculateResults.js","src/aboutyou/CapitalizeConverter.js","src/aboutyou/capitalize-converter.js"],"names":["App","httpClient","readFile","message","activate","fetch","data","json","data2","getStateList","configureRouter","config","router","title","map","route","moduleId","name","nav","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","ionRangeSlider","personalinfo","user","stateData","slider","calculateResults","calculateOccupation","currentCountyArray","gender","person","checkgender","console","log","checkspouse","clientPersonalInfo","checkState","state","self","toLowerCase","countyWithLifeArrays","stateToCountyMap","get","split","forEach","currentCountyInfo","push","pop","county","checkLifeExpectancy","lifeExpectancy","indexOf","countyLifeExpectancy","myhealth","navigate","familyhealth","occupation","loadOccupation","submit","getLifeTableData","clientResults","ethnicity","ethnicityLifeExpectancy","addMyHealthExpectancy","spousePersonalInfo","spouseResults","attached","createAgeSlider","capitalize","str","replace","txt","charAt","toUpperCase","substr","calculateFamilyHealth","heartdisease","checkHeartDisease","cancer","checkCancer","mentalhealth","checkMentalHealth","diabetes","checkDiabetes","back","createLifeExpectancySlider","calculateMyHealth","formHeightWeight","checkHeight","valid","test","height","validHeight","heightError","feetAndInches","heightInInches","parseInt","validWeight","calculateBMI","validBMI","setIconType","iconType","spouse","bmi","smoking","checksmoking","stillSmoking","checkStillSmoking","check","exerciseCalculations","calc","results","exercisePerWeek","calculateExercise","exercise","exerciseLifeExpectancy","alert","smokerCalculations","kindOfSmoker","calculateSmoker","smoker","smokerLifeExpectancy","ageQuitSmoking","clientMyHealth","spouseMyHealth","tooltip","content","allowDrop","ev","preventDefault","drag","dataTransfer","setData","target","id","drop","getData","currentTarget","appendChild","document","getElementById","education","checkEducation","construction","checkConstruction","emergencyResponding","checkEmergencyResponding","occupationArray","chart","createChart","User","clientFamilyHealth","spouseFamilyHealth","clientOccupation","spouseOccupation","HighCharts","Chart","containerID","Highcharts","text","xAxis","plotOptions","series","pointStart","age","yAxis","testTuples","testTuples2","testTuples3","ReadFile","occupationData","jsonData","stateObject","stateSet","add","State","getCountyList","has","existingValues","County","Male","Female","set","getCategoryList","jobObject","occupationCategorySet","Category","categoryToJobMap","Occupation","getOccupationDeathNumber","arrayOccupations","deathTotal","userOccupation","total","Slider","$","grid","min","max","from","step","onFinish","familyLifeExpectancy","FamilyHealthData","MyHealthData","weight","sleepPerWeek","healthRank","alcoholPerWeek","OccupationData","Set","Map","occupationChangeInLifeExpectancy","PersonalInfoData","race","maritalStatus","expectedYearsLeft","ResultsData","overallLifeExpectancy","StateData","CalculateFamilyHealth","CalculateMyHealth","metricWeight","metricHeight","metricHeightSquared","toPrecision","CalculateOccupation","loadedData","calculationOccupation","CalculateResults","resultsData","setUserExpectedAge","getTestTuples","value","currentAgeArray","Age","slice","ExpectedAge","personResults","tempArr","tempArr2","tempArr3","Number","CapitalizeConverter","toView","CapitalizeValueConverter"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {ReadFile} from 'utilities/readFile';\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\n@inject(HttpClient, ReadFile)\r\nexport class App {\r\n  httpClient;\r\n\r\n  constructor(httpClient, readFile) {\r\n    this.httpClient = httpClient;\r\n    this.readFile = readFile;\r\n    this.message = 'Life Expectancy Calculator';\r\n  }\r\n\r\n  async activate() {\r\n    let data = await this.httpClient.fetch('/api/life-expectancy/get.json');\r\n    let data2 = await data.json();\r\n    this.readFile.getStateList(data2);\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Life Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'personalinfo'], moduleId: 'aboutyou/personalinfo',\r\n        name: 'personalinfo', title: 'Personal Info', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'myhealth', moduleId: 'health/myhealth',\r\n        name: 'myhealth', title: 'My Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'familyhealth', moduleId: 'health/familyhealth',\r\n        name: 'familyhealth', title: 'Family Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'occupation', moduleId: 'occupation/occupation',\r\n        name: 'occupation', title: 'Occupation', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Results', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'jsonfile', moduleId: 'services/lifeExpectancy.json!json',\r\n        name: 'jsonfile', title: 'Json File', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {StateData} from '../services/data/stateData';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\nimport {Slider} from '../utilities/slider';\r\nimport {CalculateResults} from '../utilities/calculations/calculateResults';\r\nimport {CalculateOccupation} from '../utilities/calculations/calculateOccupation';\r\n\r\n@inject(Router, User, StateData, Slider, CalculateResults, CalculateOccupation)\r\nexport class personalinfo {\r\n    currentCountyArray = [];\r\n\r\n    constructor(router, user, stateData, slider, calculateResults, calculateOccupation) {\r\n        this.slider = slider;\r\n        this.router = router;\r\n        this.user = user;\r\n        this.stateData = stateData;\r\n        this.calculateResults = calculateResults;\r\n        this.calculateOccupation = calculateOccupation;\r\n    }\r\n\r\n    gender(person) {\r\n        person.checkgender = !person.checkgender;\r\n        person.gender = person.checkgender ? 'Male' : 'Female';\r\n        console.log(person);\r\n    }\r\n\r\n    checkspouse() {\r\n        this.user.clientPersonalInfo.checkspouse = !this.user.clientPersonalInfo.checkspouse;\r\n    }\r\n\r\n    //======================LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n    //This method retrieves all of the counties from the client's current state\r\n    checkState(person) {\r\n        var state = person.state;\r\n        if(state != \"Please Select\") {\r\n            var self = this;\r\n            this.currentCountyArray = [];\r\n            state = state.toLowerCase();\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                self.currentCountyArray.push(currentCountyInfo[0]);\r\n            });\r\n            this.currentCountyArray.pop();\r\n        }\r\n        else person.county = \"Please Select\";\r\n    }\r\n\r\n    //This method checks the current client's life expectancy\r\n    checkLifeExpectancy(person) {\r\n        if(person.county != \"Please Select\") {\r\n            var state = person.state;\r\n            state = state.toLowerCase();\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                //Life expectancy of male is index 2, life expectancy of female is index 1\r\n                var lifeExpectancy =  person.checkgender ? currentCountyInfo[2] : currentCountyInfo[1];\r\n                //If county name is found in array, then get life expectancy\r\n                if(currentCountyInfo[0].indexOf(person.county) != -1) {\r\n                    person.countyLifeExpectancy =  person.checkgender ? currentCountyInfo[1] : currentCountyInfo[2];\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //===================END LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n\r\n    myhealth() {\r\n        this.router.navigate('#/myhealth');  \r\n    }\r\n\r\n    familyhealth() {\r\n        this.router.navigate('#/familyhealth');  \r\n    }\r\n\r\n    occupation() {\r\n        this.calculateOccupation.loadOccupation();\r\n        this.router.navigate('#/occupation');  \r\n    }\r\n\r\n    async submit() {\r\n        //Get life expectancy based on age, gender, and ethnicity\r\n        await this.calculateResults.getLifeTableData(this.user.clientPersonalInfo);\r\n        this.user.clientResults.ethnicity = this.user.clientPersonalInfo.ethnicityLifeExpectancy;\r\n\r\n        this.calculateResults.addMyHealthExpectancy(this.user.clientResults);\r\n\r\n        console.log(\"=======CLIENT=======\");\r\n        console.log(this.user.clientPersonalInfo);\r\n        console.log(this.user.clientResults);\r\n\r\n        if(this.user.clientPersonalInfo.checkspouse){\r\n            await this.calculateResults.getLifeTableData(this.user.spousePersonalInfo);\r\n            this.user.spouseResults.ethnicity = this.user.spousePersonalInfo.ethnicityLifeExpectancy;\r\n\r\n            this.calculateResults.addMyHealthExpectancy(this.user.spouseResults);\r\n        \r\n            console.log(\"=======SPOUSE=======\");\r\n            console.log(this.user.spousePersonalInfo);\r\n            console.log(this.user.spouseResults);\r\n        } \r\n\r\n        \r\n        this.router.navigate('#/results');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createAgeSlider();\r\n    }\r\n\r\n    capitalize(str) {\r\n        return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateFamilyHealth} from '../utilities/calculations/calculateFamilyHealth';\r\nimport {Slider} from '../utilities/slider';\r\n\r\n@inject(Router, User, CalculateFamilyHealth, Slider)\r\nexport class familyhealth {\r\n    constructor(router, user, calculateFamilyHealth, slider) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateFamilyHealth = calculateFamilyHealth;\r\n        this.slider = slider;\r\n    }\r\n\r\n    //HEART DISEASE\r\n    heartdisease(person) {\r\n        person.checkHeartDisease = !person.checkHeartDisease;\r\n    }\r\n\r\n    //CANCER\r\n    cancer(person) {\r\n        person.checkCancer = !person.checkCancer;\r\n    }\r\n\r\n    //MENTAL HEALTH\r\n    mentalhealth(person) {\r\n        person.checkMentalHealth = !person.checkMentalHealth;\r\n    }\r\n\r\n    //DIABETES\r\n    diabetes(person) {\r\n        person.checkDiabetes = !person.checkDiabetes;\r\n    }\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createLifeExpectancySlider();\r\n    }\r\n}","import $ from 'jquery';\r\nimport 'jquery-ui-dist';\r\nimport {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateMyHealth} from '../utilities/calculations/calculateMyHealth';\r\n\r\n@inject(Router, User, CalculateMyHealth)\r\nexport class myhealth {\r\n    formHeightWeight = \"\";\r\n\r\n    constructor(router, user, calculateMyHealth) {\r\n        this.calculateMyHealth = calculateMyHealth;\r\n        this.router = router;\r\n        this.user = user;\r\n    }\r\n\r\n    //Checks for valid height for the client.\r\n    checkHeight(person) {\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(person.height);\r\n        person.validHeight = valid;\r\n        person.heightError = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = person.height.split(\"'\");\r\n            person.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        //This handles the case where they first entered their weight\r\n        if(person.validWeight) {\r\n            this.calculateBMI(person);\r\n        }\r\n    }\r\n\r\n    //This calculates the BMI once both of the height and weight have been entered\r\n    calculateBMI(person) {\r\n        if(person.validHeight) {\r\n            this.calculateMyHealth.calculateBMI(person);\r\n            person.validBMI = true;\r\n            this.setIconType(person, false)\r\n            person.iconType = \"./src/health/images/\" + person.iconType + \".jpg\";\r\n        }\r\n        person.validWeight = true;\r\n        person.formHeightWeight = true;\r\n    }\r\n\r\n    //Determines the icon types give the client/spouse. If client is passed in then, spouse = false.\r\n    setIconType(person, spouse) {\r\n        switch(true) {\r\n            case person.bmi < 18.5:\r\n                person.iconType = \"underweight\";\r\n                break;\r\n            case person.bmi >= 18.5 && person.bmi < 25:\r\n                person.iconType = \"normal\";\r\n                break;\r\n            case person.bmi >= 25 && person.bmi < 30:\r\n                person.iconType = \"overweight\";\r\n                break;\r\n            case person.bmi > 30 && person.bmi < 35:\r\n                person.iconType = \"obese\";\r\n                break;\r\n            default:\r\n                person.iconType = \"extremely-obese\";\r\n                break;\r\n        }\r\n        return person;\r\n    }\r\n\r\n    //CHECK SMOKING\r\n    smoking(person) {\r\n        person.checksmoking = !person.checksmoking;\r\n    }\r\n\r\n    stillSmoking(person) {\r\n        person.checkStillSmoking = !person.checkStillSmoking;\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        var check = true;\r\n\r\n        //EXERCISE\r\n        function exerciseCalculations(person, calc, results) {\r\n            if(person.exercisePerWeek && person.exercisePerWeek != \"Please Select\") {\r\n                if(person.bmi) {\r\n                    calc.calculateExercise(person);\r\n                    results.exercise = person.exerciseLifeExpectancy;\r\n                }\r\n                else {\r\n                    check = false;\r\n                    alert(\"We need a BMI to factor in your exercise per week\");\r\n                }\r\n            }\r\n        }\r\n        \r\n        function smokerCalculations(person, calc, results) {\r\n            if(person.checksmoking) {\r\n                if(person.kindOfSmoker && person.kindOfSmoker != \"Please Select\") {\r\n                    if(person.checkStillSmoking) {\r\n                        calc.calculateSmoker(person);\r\n                        results.smoker = person.smokerLifeExpectancy;\r\n                    }\r\n                }\r\n                else {\r\n                    check = false;\r\n                    alert(\"Enter what kind of smoker you are\");\r\n                }\r\n\r\n                if(!person.checkStillSmoking && person.ageQuitSmoking && person.ageQuitSmoking != \"Please Select\") {\r\n                    calc.calculateSmoker(person);\r\n                    results.smoker = person.smokerLifeExpectancy;\r\n                }\r\n                else if(!person.checkStillSmoking && (person.ageQuitSmoking || person.ageQuitSmoking != \"Please Select\")) {\r\n                    check = false;\r\n                    alert(\"Enter what age you quit smoking\");\r\n                }\r\n            }\r\n        }\r\n\r\n        //this.calculateMyHealth.calculateExercise(this.user.clientMyHealth);\r\n\r\n        exerciseCalculations(this.user.clientMyHealth, this.calculateMyHealth, this.user.clientResults);\r\n        smokerCalculations(this.user.clientMyHealth, this.calculateMyHealth, this.user.clientResults);\r\n        console.log(this.user.clientMyHealth);\r\n\r\n        if(this.user.clientPersonalInfo.checkspouse) {\r\n            exerciseCalculations(this.user.spouseMyHealth, this.calculateMyHealth, this.user.spouseResults);\r\n            smokerCalculations(this.user.spouseMyHealth, this.calculateMyHealth, this.user.spouseResults);\r\n            console.log(this.user.spouseMyHealth);\r\n        }\r\n        \r\n        if(check) this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    //This takes care of setting up the content for the tooltips\r\n    attached() {\r\n        //=====================CLIENT TOOLTIPS============================\r\n        $('#height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise, you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n\r\n        $('#health-rank-tooltip').tooltip({\r\n            content: \"How you view your health impacts your life expectancy.\"\r\n        })\r\n\r\n        //=====================SPOUSE TOOLTIPS============================\r\n        $('#spouse-height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#spouse-weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#spouse-exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise, you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n\r\n        $('#spouse-health-rank-tooltip').tooltip({\r\n            content: \"How you view your health impacts your life expectancy.\"\r\n        })\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { User } from '../services/user';\r\nimport { CalculateOccupation } from '../utilities/calculations/calculateOccupation';\r\n\r\n@inject(Router, User, CalculateOccupation)\r\nexport class occupation {\r\n    constructor(router, user, calculateOccupation) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateOccupation = calculateOccupation;\r\n    }\r\n\r\n    allowDrop(ev) {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    drag(ev) {\r\n        ev.dataTransfer.setData(\"tonberry\", ev.target.id);\r\n        return true;\r\n    }\r\n\r\n    drop(ev) {\r\n        ev.preventDefault();\r\n        var data = ev.dataTransfer.getData(\"tonberry\");\r\n        ev.currentTarget.appendChild(document.getElementById(data));\r\n    }\r\n\r\n    //EDUCATION\r\n    education(person) {\r\n        person.checkEducation = !person.checkEducation;\r\n    }\r\n\r\n    //CONSTRUCTION\r\n    construction(person) {\r\n        person.checkConstruction = !person.checkConstruction;\r\n    }\r\n\r\n    //EMERGENCY RESPONDING\r\n    emergencyResponding(person) {\r\n        person.checkEmergencyResponding = !person.checkEmergencyResponding;\r\n    }\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');\r\n    }\r\n\r\n    submit(occupationArray) {\r\n        this.calculateOccupation.calculateOccupation(occupationArray);\r\n        this.router.navigate('#/personalinfo');\r\n    }\r\n}","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {Chart} from '../utilities/chart';\r\nimport {CalculateResults} from '../utilities/calculations/calculateResults';\r\n\r\n@inject(Router, User, Chart, CalculateResults)\r\nexport class results {\r\n    constructor(router, user, chart, calculateResults) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.chart = chart;\r\n        this.calculateResults = calculateResults;\r\n    }\r\n\r\n    attached() {\r\n        this.chart.createChart('chart-container');\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","import {singleton} from 'aurelia-framework';\r\nimport {PersonalInfoData} from '../services/data/personalInfoData';\r\nimport {MyHealthData} from '../services/data/myHealthData';\r\nimport {FamilyHealthData} from '../services/data/familyHealthData';\r\nimport {OccupationData} from '../services/data/occupationData';\r\nimport {ResultsData} from '../services/data/resultsData';\r\n\r\n@singleton()\r\nexport class User {\r\n    constructor() {\r\n        this.clientPersonalInfo = new PersonalInfoData();\r\n        this.spousePersonalInfo = new PersonalInfoData();\r\n        \r\n        this.clientMyHealth = new MyHealthData();\r\n        this.spouseMyHealth = new MyHealthData();\r\n\r\n        this.clientFamilyHealth = new FamilyHealthData();\r\n        this.spouseFamilyHealth = new FamilyHealthData();\r\n\r\n        this.clientOccupation = new OccupationData();\r\n        this.spouseOccupation = new OccupationData();\r\n\r\n        this.clientResults = new ResultsData();\r\n        this.spouseResults = new ResultsData();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport * as HighCharts from \"highcharts\";\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class Chart {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    createChart(containerID) {\r\n        //console.log(this.user.clientPersonalInfo.testTuples);\r\n        Highcharts.chart(containerID, {\r\n                title: {\r\n                    text: 'Life Expectancy'\r\n                },\r\n                xAxis: {\r\n                    title: {\r\n                        text: 'Age'\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    series: {\r\n                        pointStart: this.user.clientPersonalInfo.age\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: 'Chance of Living'\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Client',\r\n                    data:  this.user.clientPersonalInfo.testTuples\r\n                }, {\r\n                    name: 'Co-client',\r\n                    data:  this.user.clientPersonalInfo.testTuples2\r\n                }, {\r\n                    name: 'Average',\r\n                    data:  this.user.clientPersonalInfo.testTuples3\r\n                }]\r\n            }); \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {StateData} from '../services/data/stateData';\r\nimport {OccupationData} from '../services/data/occupationData';\r\n\r\n@inject(StateData, OccupationData)\r\nexport class ReadFile {\r\n\r\n    constructor(stateData, occupationData) {\r\n        this.stateData = stateData;\r\n        this.occupationData = occupationData;\r\n    }\r\n\r\n    //Given the json data this method will create a set of states and save in stateData.js\r\n    getStateList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject) { \r\n            self.stateData.stateSet.add(stateObject.State.toLowerCase())\r\n        });\r\n        this.getCountyList(jsonData);\r\n    } \r\n\r\n    //Given a state as input this method reads the json object and returns all counties for that state.\r\n    getCountyList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject){\r\n            if(self.stateData.stateToCountyMap.has(stateObject.State.toLowerCase())) {\r\n                   var existingValues = self.stateData.stateToCountyMap.get(stateObject.State.toLowerCase());\r\n                   // Format for each county => County : Male Life Expectancy : Female Life Expectancy\r\n                   existingValues += \" \" + stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\";\r\n                   self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), existingValues);\r\n            }\r\n            else self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\");\r\n        });\r\n    }\r\n\r\n    //Given json data as input this method reads the json object and saves the information in a category set and map for jobs.\r\n    getCategoryList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach((jobObject) => {\r\n            self.occupationData.occupationCategorySet.add(jobObject.Category);\r\n            var existingValues = self.occupationData.categoryToJobMap.get(jobObject.Category);\r\n            existingValues += \" \" + jobObject.Occupation + \":\";\r\n            self.occupationData.categoryToJobMap.set(jobObject.Category, existingValues);\r\n        });\r\n    }\r\n\r\n    //Given json data and array of user occupations, this will find the change in life expectancy from occupation.\r\n    getOccupationDeathNumber(jsonData, arrayOccupations) {\r\n        var self = this;\r\n        var deathTotal = 0;\r\n        jsonData.forEach((jobObject) => {\r\n            arrayOccupations.forEach((userOccupation) => {\r\n                if(userOccupation === jobObject.Occupation)\r\n                    total += jobObject.deathTotal;\r\n            })\r\n        });\r\n        return deathTotal;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\n\r\n@inject(User)\r\nexport class Slider {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n    \r\n    createAgeSlider() {\r\n        $(\"#age\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientPersonalInfo.age = data.from;\r\n            }\r\n        });\r\n\r\n        $(\"#spouseage\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spousePersonalInfo.age = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    createLifeExpectancySlider() {\r\n        $('#familyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n\r\n        $('#spousefamilyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spouseFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n}","export class FamilyHealthData {\r\n    constructor() {\r\n        this.familyLifeExpectancy = 70;\r\n        this.checkHeartDisease = false;\r\n        this.checkCancer = false;\r\n        this.checkMentalHealth = false;\r\n        this.checkDiabetes = false;\r\n        \r\n    }\r\n}","export class MyHealthData {\r\n    constructor() {\r\n        this.height;\r\n        this.heightInInches;\r\n        this.weight;\r\n        this.bmi;\r\n        this.formHeightWeight = false;\r\n        this.exerciseLifeExpectancy = 0;\r\n\r\n        this.validHeight = false;\r\n        this.validWeight = false;\r\n        this.validBMI = false;\r\n        this.iconType = \"underweight\";\r\n        this.heightError = \"\";\r\n\r\n        this.exercisePerWeek;\r\n        this.sleepPerWeek;\r\n        this.healthRank;\r\n\r\n        this.alcoholPerWeek;\r\n\r\n        this.checksmoking = false;\r\n        this.checkStillSmoking = true;\r\n        this.kindOfSmoker;\r\n        this.ageQuitSmoking;\r\n        this.smokerLifeExpectancy = 0;\r\n    }\r\n}","export class OccupationData {\r\n    occupationCategorySet = new Set();\r\n    categoryToJobMap = new Map();\r\n    occupationChangeInLifeExpectancy = 0;\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class PersonalInfoData {\r\n    constructor() {\r\n        this.checkspouse = false;\r\n        \r\n        this.age = 30;\r\n        this.checkgender = true;\r\n        this.gender = 'male';\r\n        this.race = 'black';\r\n        this.maritalStatus;\r\n\r\n        this.state = \"Please Select\";\r\n        this.county = 'Please Select';\r\n        this.countyLifeExpectancy;\r\n        this.expectedYearsLeft;\r\n        this.testTuples = [];\r\n        this.testTuples2 = [];\r\n        this.testTuples3 = [];\r\n\r\n        this.ethnicityLifeExpectancy;\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class ResultsData {\r\n    constructor() {\r\n        //PERSONAL INFO EXPECTANCIES\r\n        this.ethnicity = 0;\r\n\r\n        //MY HEALTH EXPECTANCIES\r\n        this.exercise = 0;\r\n        this.smoker = 0;\r\n        \r\n        //FAMILY HEALTH EXPECTANCIES\r\n\r\n\r\n        //OCCUPATION EXPECTANCIES\r\n\r\n\r\n        //OVERALL EXPECTANCY\r\n        this.overallLifeExpectancy = 0;\r\n    }\r\n}","export class StateData {\r\n    stateSet = new Set();\r\n    stateToCountyMap = new Map();\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateFamilyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateMyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    //this calculates the body mass index(if you're wondering, tweet me @JesseCochran1)\r\n    calculateBMI(person) {\r\n        var metricWeight = person.weight * 0.45;\r\n        var metricHeight = person.heightInInches * 0.025;\r\n        var metricHeightSquared = metricHeight * metricHeight;\r\n        person.bmi = (metricWeight / metricHeightSquared).toPrecision(4);\r\n    }\r\n\r\n    //this calculates added/decreased life expectancy based on how many hours of exercise per week\r\n    calculateExercise(person) {\r\n        var exerciseLifeExpectancy = 0;\r\n\r\n        if(person.exercisePerWeek) {\r\n            var bmi = person.bmi;\r\n\r\n            if(person.exercisePerWeek.indexOf(\"0\") !== -1) {\r\n                exerciseLifeExpectancy = 0;\r\n                if(bmi >= 18.5 && bmi < 25) exerciseLifeExpectancy -= 4.7;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 3.9;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 5.0;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 7.2;\r\n            }\r\n            else if(person.exercisePerWeek.indexOf(\"Less\") !== -1) {\r\n                exerciseLifeExpectancy = 1.8;\r\n                if(bmi >= 18.5 && bmi <= 24.9) exerciseLifeExpectancy -= 2.4;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 1.8;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 3.2;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 6.2;\r\n            }\r\n            else if(person.exercisePerWeek.indexOf(\"Approximately\") !== -1) {\r\n                exerciseLifeExpectancy = 3.4;\r\n                if(bmi >= 18.5 && bmi <= 24.9) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 1.6;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 4.5;\r\n            }\r\n            else if(person.exercisePerWeek.indexOf(\"More\") !== -1) {\r\n                exerciseLifeExpectancy = 4.5;\r\n                if(bmi >= 18.5 && bmi <= 24.9) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 1.6;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 4.5;\r\n            }\r\n        }\r\n        person.exerciseLifeExpectancy = exerciseLifeExpectancy;\r\n    }\r\n\r\n    calculateSmoker(person) {\r\n        var smokerLifeExpectancy = 0;\r\n        var stillSmoking = person.checkStillSmoking;\r\n        var kindOfSmoker = person.kindOfSmoker;\r\n        \r\n        //CHECK KIND OF SMOKER\r\n        if(kindOfSmoker.indexOf(\"Light\") !== -1) {\r\n            smokerLifeExpectancy = -4.8;\r\n\r\n            //Add years if they quit smoking\r\n            if(!stillSmoking) { \r\n                var age = person.ageQuitSmoking;\r\n                if(age.indexOf(\"25\") !== -1) smokerLifeExpectancy += 4.8; //max 10\r\n                else if(age.indexOf(\"35\") !== -1) smokerLifeExpectancy += 4.8; //max 9\r\n                else if(age.indexOf(\"45\") !== -1) smokerLifeExpectancy += 4.8; //max 6\r\n                else if(age.indexOf(\"60\") !== -1) smokerLifeExpectancy += 3; //max 3\r\n            }\r\n        }\r\n        else if(kindOfSmoker.indexOf(\"Average\") !== -1) {\r\n            smokerLifeExpectancy -= 6.8;\r\n\r\n            //Add years if they quit smoking\r\n            if(!stillSmoking) { \r\n                var age = person.ageQuitSmoking;\r\n                if(age.indexOf(\"25\") !== -1) smokerLifeExpectancy += 6.8; //max 10\r\n                else if(age.indexOf(\"35\") !== -1) smokerLifeExpectancy += 6.8; //max 9\r\n                else if(age.indexOf(\"45\") !== -1) smokerLifeExpectancy += 6; //max 6\r\n                else if(age.indexOf(\"60\") !== -1) smokerLifeExpectancy += 3; //max 3\r\n            }\r\n        }\r\n        else if(kindOfSmoker.indexOf(\"Heavy\") !== -1) {\r\n            smokerLifeExpectancy -= 8.8;\r\n\r\n            //Add years if they quit smoking\r\n            if(!stillSmoking) { \r\n                var age = person.ageQuitSmoking;\r\n                if(age.indexOf(\"25\") !== -1) smokerLifeExpectancy += 8.8; //max 10\r\n                else if(age.indexOf(\"35\") !== -1) smokerLifeExpectancy += 8.8; //max 9\r\n                else if(age.indexOf(\"45\") !== -1) smokerLifeExpectancy += 6; //max 6\r\n                else if(age.indexOf(\"60\") !== -1) smokerLifeExpectancy += 3; //max 3\r\n            }\r\n        }\r\n        person.smokerLifeExpectancy = smokerLifeExpectancy;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../../services/user';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {ReadFile} from 'utilities/readFile';\r\n\r\n@inject(User, HttpClient, ReadFile)\r\nexport class CalculateOccupation {\r\n    constructor(user, httpClient, readFile) {\r\n        this.user = user;\r\n        this.httpClient = httpClient;\r\n        this.readFile = readFile;\r\n    }\r\n\r\n    async loadOccupation() {\r\n        let data = await this.httpClient.fetch('/api/occupation-table/occupation.json');\r\n        let loadedData = await data.json();\r\n        this.readFile.getCategoryList(loadedData);\r\n    }\r\n\r\n    async calculationOccupation(arrayOccupations) {\r\n        let data = await this.httpClient.fetch('/api/occupation-table/occupation.json');\r\n        let loadedData = await data.json();\r\n        this.user.occupationData.occupationChangeInLifeExpectancy = this.readFile.getOccupationDeathNumber(arrayOccupations);\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {User} from '../../services/user';\r\n\r\n@inject(HttpClient, User)\r\nexport class CalculateResults {\r\n    httpClient;\r\n\r\n    constructor(httpClient, user) {\r\n        this.httpClient = httpClient;\r\n        this.user = user;\r\n    }\r\n\r\n    //Gets the life table based on the users race and gender\r\n    async getLifeTableData(person) {\r\n        let results = await this.httpClient.fetch('/api/life-table/' + person.race.toLowerCase() + '-' + person.gender.toLowerCase() + '.json');\r\n        let resultsData = await results.json();\r\n        this.setUserExpectedAge(resultsData, person);\r\n        this.getTestTuples(resultsData, person);\r\n    }\r\n\r\n    //Iterates through the json object to determine the user's expected age\r\n    setUserExpectedAge(data, person) {\r\n        data.forEach(function(value) {\r\n            //If the user is currently the age in the json object, then the current age is set\r\n            var currentAgeArray = [];\r\n            currentAgeArray[0] = parseInt(value.Age.slice(0, 2));\r\n            currentAgeArray[1] = parseInt(value.Age.slice(3, 5));\r\n            if(currentAgeArray[0] === person.age || currentAgeArray[1] === person.age) {\r\n                person.expectedYearsLeft = parseInt(value.ExpectedAge);\r\n                person.ethnicityLifeExpectancy = person.age;\r\n            }\r\n        });\r\n    }\r\n\r\n    addMyHealthExpectancy(personResults) {\r\n        personResults.overallLifeExpectancy = personResults.ethnicity;\r\n        personResults.overallLifeExpectancy += personResults.exercise;\r\n        personResults.overallLifeExpectancy += personResults.smoker;        \r\n    }\r\n\r\n    //Averages the life expectancy from the life table and life expectancy county table\r\n    // averageLifeExpectancy(person) {\r\n    //     var averagedLifeExpectancy = ((person.expectedYearsLeft + person.age) + person.ethnicityLifeExpectancy ) / 2;\r\n    //     TODO: Set this variable to new life expectancy if we decide to in future\r\n    //}\r\n    \r\n    //Gets test tuples for chart data\r\n    getTestTuples(jsonData, person) {\r\n        var tempArr = [];\r\n        var tempArr2 = [];\r\n        var tempArr3 = [];\r\n        \r\n        jsonData.forEach(function(value) {\r\n            tempArr.push([value.Age, value.Number]);\r\n        });\r\n        jsonData.forEach(function(value) {\r\n            tempArr2.push([parseInt(value.Age) + 3, value.Number]);\r\n        });\r\n        jsonData.forEach(function(value) {\r\n            tempArr3.push([parseInt(value.Age) - 5, value.Number]);\r\n        });\r\n        person.testTuples = tempArr;\r\n        person.testTuples2 = tempArr2;\r\n        console.log(tempArr2);\r\n        person.testTuples3 = tempArr3;\r\n        console.log(tempArr3);\r\n    }\r\n}","export class CapitalizeConverter {\r\n    toView(value) {\r\n        return value.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\r\n    }\r\n}","export class CapitalizeValueConverter {\r\n    toView(value) {\r\n        return value.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\r\n    }\r\n}"],"sourceRoot":".."}