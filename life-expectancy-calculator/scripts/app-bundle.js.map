{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/aboutyou/personalinfo.js","src/health/familyhealth.js","src/health/myhealth.js","src/occupation/occupation.js","src/resources/index.js","src/results/results.js","src/services/user.js","src/utilities/chart.js","src/utilities/readFile.js","src/utilities/slider.js","src/services/data/familyHealthData.js","src/services/data/myHealthData.js","src/services/data/occupationData.js","src/services/data/personalInfoData.js","src/services/data/resultsData.js","src/services/data/stateData.js","src/utilities/calculations/calculateFamilyHealth.js","src/utilities/calculations/calculateMyHealth.js","src/utilities/calculations/calculateOccupation.js","src/utilities/calculations/calculateResults.js"],"names":["App","httpClient","readFile","message","activate","fetch","data","json","data2","getStateList","configureRouter","config","router","title","map","route","moduleId","name","nav","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","ionRangeSlider","personalinfo","user","stateData","slider","calculateResults","currentCountyArray","gender","person","checkgender","console","log","checkspouse","clientPersonalInfo","checkState","state","self","countyWithLifeArrays","stateToCountyMap","get","split","forEach","currentCountyInfo","push","pop","county","checkLifeExpectancy","lifeExpectancy","indexOf","countyLifeExpectancy","myhealth","navigate","familyhealth","occupation","submit","getLifeTableData","calculateEducation","clientResults","addExpectancies","spousePersonalInfo","spouseResults","attached","createAgeSlider","calculateFamilyHealth","heartdisease","checkHeartDisease","cancer","checkCancer","mentalhealth","checkMentalHealth","diabetes","checkDiabetes","back","createLifeExpectancySlider","calculateMyHealth","heightError","formHeightWeight","checkHeight","valid","test","clientMyHealth","height","validHeight","feetAndInches","heightInInches","parseInt","validWeight","calculateBMI","validBMI","setIconType","iconType","spouse","bmi","smoking","checksmoking","stillSmoking","checkStillSmoking","check","exerciseCalculations","calc","results","exercisePerWeek","calculateExercise","exercise","exerciseLifeExpectancy","alert","smokerCalculations","kindOfSmoker","calculateSmoker","smoker","smokerLifeExpectancy","ageQuitSmoking","spouseMyHealth","tooltip","content","calculateOccupation","allowDrop","ev","preventDefault","drag","dataTransfer","setData","target","id","drop","getData","currentTarget","appendChild","document","getElementById","income","checkincome","checkOccupation","occupationName","type","clientOccupation","isNaN","calculateIncome","spouseOccupation","chart","createChart","User","clientFamilyHealth","spouseFamilyHealth","HighCharts","Chart","containerID","Highcharts","text","xAxis","plotOptions","series","pointStart","age","yAxis","testTuples","testTuples2","testTuples3","ReadFile","jsonData","stateObject","stateSet","add","State","toLowerCase","getCountyList","has","existingValues","County","Male","Female","set","Slider","$","grid","min","max","from","step","onFinish","familyLifeExpectancy","FamilyHealthData","MyHealthData","weight","sleepPerWeek","healthRank","alcoholPerWeek","OccupationData","incomeLifeExpectancy","occupationType","PersonalInfoData","education","race","maritalStatus","expectedYearsLeft","ethnicityLifeExpectancy","ResultsData","overallLifeExpectancy","StateData","Set","Map","CalculateFamilyHealth","CalculateMyHealth","metricWeight","metricHeight","metricHeightSquared","toPrecision","CalculateOccupation","parseFloat","CalculateResults","resultsData","setUserExpectedAge","getTestTuples","value","currentAgeArray","Age","slice","ExpectedAge","personResults","tempArr","tempArr2","tempArr3","Number"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {ReadFile} from 'utilities/readFile';\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\n@inject(HttpClient, ReadFile)\r\nexport class App {\r\n  httpClient;\r\n\r\n  constructor(httpClient, readFile) {\r\n    this.httpClient = httpClient;\r\n    this.readFile = readFile;\r\n    this.message = 'Life Expectancy Calculator';\r\n  }\r\n\r\n  async activate() {\r\n    let data = await this.httpClient.fetch('/api/life-expectancy/get.json');\r\n    let data2 = await data.json();\r\n    this.readFile.getStateList(data2);\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Life Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'personalinfo'], moduleId: 'aboutyou/personalinfo',\r\n        name: 'personalinfo', title: 'Personal Info', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'myhealth', moduleId: 'health/myhealth',\r\n        name: 'myhealth', title: 'My Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'familyhealth', moduleId: 'health/familyhealth',\r\n        name: 'familyhealth', title: 'Family Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'occupation', moduleId: 'occupation/occupation',\r\n        name: 'occupation', title: 'Occupation', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Results', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'jsonfile', moduleId: 'services/lifeExpectancy.json!json',\r\n        name: 'jsonfile', title: 'Json File', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {StateData} from '../services/data/stateData';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\nimport {Slider} from '../utilities/slider';\r\nimport {CalculateResults} from '../utilities/calculations/calculateResults';\r\n\r\n@inject(Router, User, StateData, Slider, CalculateResults)\r\nexport class personalinfo {\r\n    currentCountyArray = [];\r\n\r\n    constructor(router, user, stateData, slider, calculateResults) {\r\n        this.slider = slider;\r\n        this.router = router;\r\n        this.user = user;\r\n        this.stateData = stateData;\r\n        this.calculateResults = calculateResults;\r\n    }\r\n\r\n    gender(person) {\r\n        person.checkgender = !person.checkgender;\r\n        person.gender = person.checkgender ? 'Male' : 'Female';\r\n        console.log(person);\r\n    }\r\n\r\n    checkspouse() {\r\n        this.user.clientPersonalInfo.checkspouse = !this.user.clientPersonalInfo.checkspouse;\r\n    }\r\n\r\n    //======================LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n    //This method retrieves all of the counties from the client's current state\r\n    checkState(person) {\r\n        var state = person.state;\r\n        if(state != \"Please Select\") {\r\n            var self = this;\r\n            this.currentCountyArray = [];\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                self.currentCountyArray.push(currentCountyInfo[0]);\r\n            });\r\n            this.currentCountyArray.pop();\r\n        }\r\n        else person.county = \"Please Select\";\r\n    }\r\n\r\n    //This method checks the current client's life expectancy\r\n    checkLifeExpectancy(person) {\r\n        if(person.county != \"Please Select\") {\r\n            var state = person.state;\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                //Life expectancy of male is index 2, life expectancy of female is index 1\r\n                var lifeExpectancy =  person.checkgender ? currentCountyInfo[2] : currentCountyInfo[1];\r\n                //If county name is found in array, then get life expectancy\r\n                if(currentCountyInfo[0].indexOf(person.county) != -1) {\r\n                    person.countyLifeExpectancy =  person.checkgender ? currentCountyInfo[1] : currentCountyInfo[2];\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //===================END LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n\r\n    myhealth() {\r\n        this.router.navigate('#/myhealth');  \r\n    }\r\n\r\n    familyhealth() {\r\n        this.router.navigate('#/familyhealth');  \r\n    }\r\n\r\n    occupation() {\r\n        this.router.navigate('#/occupation');  \r\n    }\r\n\r\n    async submit() {\r\n        //Get life expectancy based on age, gender, and ethnicity\r\n        await this.calculateResults.getLifeTableData(this.user.clientPersonalInfo);\r\n        this.calculateResults.calculateEducation(this.user.clientPersonalInfo, this.user.clientResults)\r\n        this.calculateResults.addExpectancies(this.user.clientResults);\r\n\r\n        console.log(\"=======CLIENT=======\");\r\n        console.log(this.user.clientPersonalInfo);\r\n        console.log(this.user.clientResults);\r\n\r\n        if(this.user.clientPersonalInfo.checkspouse){\r\n            await this.calculateResults.getLifeTableData(this.user.spousePersonalInfo);\r\n            this.calculateResults.calculateEducation(this.user.spousePersonalInfo, this.user.spouseResults)\r\n            this.calculateResults.addExpectancies(this.user.spouseResults);\r\n        \r\n            console.log(\"=======SPOUSE=======\");\r\n            console.log(this.user.spousePersonalInfo);\r\n            console.log(this.user.spouseResults);\r\n        } \r\n        \r\n        this.router.navigate('#/results');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createAgeSlider();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateFamilyHealth} from '../utilities/calculations/calculateFamilyHealth';\r\nimport {Slider} from '../utilities/slider';\r\n\r\n@inject(Router, User, CalculateFamilyHealth, Slider)\r\nexport class familyhealth {\r\n    constructor(router, user, calculateFamilyHealth, slider) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateFamilyHealth = calculateFamilyHealth;\r\n        this.slider = slider;\r\n    }\r\n\r\n    //HEART DISEASE\r\n    heartdisease(person) {\r\n        person.checkHeartDisease = !person.checkHeartDisease;\r\n    }\r\n\r\n    //CANCER\r\n    cancer(person) {\r\n        person.checkCancer = !person.checkCancer;\r\n    }\r\n\r\n    //MENTAL HEALTH\r\n    mentalhealth(person) {\r\n        person.checkMentalHealth = !person.checkMentalHealth;\r\n    }\r\n\r\n    //DIABETES\r\n    diabetes(person) {\r\n        person.checkDiabetes = !person.checkDiabetes;\r\n    }\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createLifeExpectancySlider();\r\n    }\r\n}","import $ from 'jquery';\r\nimport 'jquery-ui-dist';\r\nimport {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateMyHealth} from '../utilities/calculations/calculateMyHealth';\r\n\r\n@inject(Router, User, CalculateMyHealth)\r\nexport class myhealth {\r\n    heightError = \"\";\r\n    formHeightWeight = \"\";\r\n\r\n    constructor(router, user, calculateMyHealth) {\r\n        this.calculateMyHealth = calculateMyHealth;\r\n        this.router = router;\r\n        this.user = user;\r\n    }\r\n\r\n    //Checks for valid height for the client.\r\n    checkHeight(person) {\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(this.user.clientMyHealth.height);\r\n        person.validHeight = valid;\r\n        this.heightError = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = person.height.split(\"'\");\r\n            person.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        //This handles the case where they first entered their weight\r\n        if(person.validWeight) {\r\n            this.calculateBMI(person);\r\n        }\r\n    }\r\n\r\n    //This calculates the BMI once both of the height and weight have been entered\r\n    calculateBMI(person) {\r\n        if(person.validHeight) {\r\n            this.calculateMyHealth.calculateBMI(person);\r\n            person.validBMI = true;\r\n            this.setIconType(person, false)\r\n            person.iconType = \"./src/health/images/\" + person.iconType + \".jpg\";\r\n        }\r\n        person.validWeight = true;\r\n        person.formHeightWeight = true;\r\n    }\r\n\r\n    //Determines the icon types give the client/spouse. If client is passed in then, spouse = false.\r\n    setIconType(person, spouse) {\r\n        switch(true) {\r\n            case person.bmi < 18.5:\r\n                person.iconType = \"underweight\";\r\n                break;\r\n            case person.bmi >= 18.5 && person.bmi < 25:\r\n                person.iconType = \"normal\";\r\n                break;\r\n            case person.bmi >= 25 && person.bmi < 30:\r\n                person.iconType = \"overweight\";\r\n                break;\r\n            case person.bmi > 30 && person.bmi < 35:\r\n                person.iconType = \"obese\";\r\n                break;\r\n            default:\r\n                person.iconType = \"extremely-obese\";\r\n                break;\r\n        }\r\n        return person;\r\n    }\r\n\r\n    //CHECK SMOKING\r\n    smoking(person) {\r\n        person.checksmoking = !person.checksmoking;\r\n    }\r\n\r\n    stillSmoking(person) {\r\n        person.checkStillSmoking = !person.checkStillSmoking;\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        var check = true;\r\n\r\n        //EXERCISE\r\n        function exerciseCalculations(person, calc, results) {\r\n            if(person.exercisePerWeek && person.exercisePerWeek != \"Please Select\") {\r\n                if(person.bmi) {\r\n                    calc.calculateExercise(person);\r\n                    results.exercise = person.exerciseLifeExpectancy;\r\n                }\r\n                else {\r\n                    check = false;\r\n                    alert(\"We need a BMI to factor in your exercise per week\");\r\n                }\r\n            }\r\n        }\r\n        \r\n        function smokerCalculations(person, calc, results) {\r\n            if(person.checksmoking) {\r\n                if(person.kindOfSmoker && person.kindOfSmoker != \"Please Select\") {\r\n                    if(person.checkStillSmoking) {\r\n                        calc.calculateSmoker(person);\r\n                        results.smoker = person.smokerLifeExpectancy;\r\n                    }\r\n                }\r\n                else {\r\n                    check = false;\r\n                    alert(\"Enter what kind of smoker you are\");\r\n                }\r\n\r\n                if(!person.checkStillSmoking && person.ageQuitSmoking && person.ageQuitSmoking != \"Please Select\") {\r\n                    calc.calculateSmoker(person);\r\n                    results.smoker = person.smokerLifeExpectancy;\r\n                }\r\n                else if(!person.checkStillSmoking && (person.ageQuitSmoking || person.ageQuitSmoking != \"Please Select\")) {\r\n                    check = false;\r\n                    alert(\"Enter what age you quit smoking\");\r\n                }\r\n            }\r\n        }\r\n\r\n        //this.calculateMyHealth.calculateExercise(this.user.clientMyHealth);\r\n\r\n        exerciseCalculations(this.user.clientMyHealth, this.calculateMyHealth, this.user.clientResults);\r\n        smokerCalculations(this.user.clientMyHealth, this.calculateMyHealth, this.user.clientResults);\r\n        console.log(this.user.clientMyHealth);\r\n\r\n        if(this.user.clientPersonalInfo.checkspouse) {\r\n            exerciseCalculations(this.user.spouseMyHealth, this.calculateMyHealth, this.user.spouseResults);\r\n            smokerCalculations(this.user.spouseMyHealth, this.calculateMyHealth, this.user.spouseResults);\r\n            console.log(this.user.spouseMyHealth);\r\n        }\r\n        \r\n        if(check) this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    //This takes care of setting up the content for the tooltips\r\n    attached() {\r\n        //=====================CLIENT TOOLTIPS============================\r\n        $('#height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise, you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n\r\n        $('#health-rank-tooltip').tooltip({\r\n            content: \"How you view your health impacts your life expectancy.\"\r\n        })\r\n\r\n        //=====================SPOUSE TOOLTIPS============================\r\n        $('#spouse-height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#spouse-weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your <b>Body Mass Index (BMI)</b>.\"\r\n        });\r\n\r\n        $('#spouse-exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise, you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n\r\n        $('#spouse-health-rank-tooltip').tooltip({\r\n            content: \"How you view your health impacts your life expectancy.\"\r\n        })\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { User } from '../services/user';\r\nimport { CalculateOccupation } from '../utilities/calculations/calculateOccupation';\r\n\r\n@inject(Router, User, CalculateOccupation)\r\nexport class occupation {\r\n    constructor(router, user, calculateOccupation) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateOccupation = calculateOccupation;\r\n    }\r\n\r\n    //DRAG AND DROP\r\n    allowDrop(ev) {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    drag(ev) {\r\n        ev.dataTransfer.setData(\"tonberry\", ev.target.id);\r\n        return true;\r\n    }\r\n\r\n    drop(ev) {\r\n        ev.preventDefault();\r\n        var data = ev.dataTransfer.getData(\"tonberry\");\r\n        ev.currentTarget.appendChild(document.getElementById(data));\r\n    }\r\n\r\n    //INCOME\r\n    income(person) {\r\n        person.checkincome = !person.checkincome;\r\n    }\r\n\r\n    //CHECK OCCUPATION TYPE\r\n    checkOccupation(person, occupationName) {\r\n        person.type = occupationName.type;\r\n    }\r\n\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');\r\n    }\r\n\r\n    submit() {\r\n        var check = true;\r\n        if(this.user.clientOccupation.checkincome) {\r\n            if(!isNaN(this.user.clientOccupation.income)) {\r\n                this.calculateOccupation.calculateIncome(this.user.clientOccupation, this.user.clientPersonalInfo.gender, this.user.clientResults);\r\n            }\r\n            else {\r\n                check = false;\r\n                alert('Enter a valid income');\r\n            }\r\n        }\r\n     \r\n        \r\n        if(this.user.clientPersonalInfo.checkspouse) {\r\n            if(this.user.spouseOccupation.checkincome) {\r\n                if(!isNaN(this.user.spouseOccupation.income)) {\r\n                    this.calculateOccupation.calculateIncome(this.user.spouseOccupation, this.user.spousePersonalInfo.gender, this.user.spouseResults);\r\n                }\r\n                else {\r\n                    check = false;\r\n                    alert('Enter a valid income');\r\n                }\r\n            }\r\n        }\r\n        \r\n        if(check) this.router.navigate('#/personalinfo');\r\n    }\r\n}","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {Chart} from '../utilities/chart';\r\nimport {CalculateResults} from '../utilities/calculations/calculateResults';\r\n\r\n@inject(Router, User, Chart, CalculateResults)\r\nexport class results {\r\n    constructor(router, user, chart, calculateResults) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.chart = chart;\r\n        this.calculateResults = calculateResults;\r\n    }\r\n\r\n    attached() {\r\n        this.chart.createChart('chart-container');\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","import {singleton} from 'aurelia-framework';\r\nimport {PersonalInfoData} from '../services/data/personalInfoData';\r\nimport {MyHealthData} from '../services/data/myHealthData';\r\nimport {FamilyHealthData} from '../services/data/familyHealthData';\r\nimport {OccupationData} from '../services/data/occupationData';\r\nimport {ResultsData} from '../services/data/resultsData';\r\n\r\n@singleton()\r\nexport class User {\r\n    constructor() {\r\n        this.clientPersonalInfo = new PersonalInfoData();\r\n        this.spousePersonalInfo = new PersonalInfoData();\r\n        \r\n        this.clientMyHealth = new MyHealthData();\r\n        this.spouseMyHealth = new MyHealthData();\r\n\r\n        this.clientFamilyHealth = new FamilyHealthData();\r\n        this.spouseFamilyHealth = new FamilyHealthData();\r\n\r\n        this.clientOccupation = new OccupationData();\r\n        this.spouseOccupation = new OccupationData();\r\n\r\n        this.clientResults = new ResultsData();\r\n        this.spouseResults = new ResultsData();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport * as HighCharts from \"highcharts\";\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class Chart {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    createChart(containerID) {\r\n        //console.log(this.user.clientPersonalInfo.testTuples);\r\n        Highcharts.chart(containerID, {\r\n                title: {\r\n                    text: 'Life Expectancy'\r\n                },\r\n                xAxis: {\r\n                    title: {\r\n                        text: 'Age'\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    series: {\r\n                        pointStart: this.user.clientPersonalInfo.age\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: 'Chance of Living'\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Client',\r\n                    data:  this.user.clientPersonalInfo.testTuples\r\n                }, {\r\n                    name: 'Co-client',\r\n                    data:  this.user.clientPersonalInfo.testTuples2\r\n                }, {\r\n                    name: 'Average',\r\n                    data:  this.user.clientPersonalInfo.testTuples3\r\n                }]\r\n            }); \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {StateData} from '../services/data/stateData';\r\n\r\n@inject(StateData)\r\nexport class ReadFile {\r\n\r\n    constructor(stateData) {\r\n        this.stateData = stateData;\r\n    }\r\n\r\n    //Given the json data this method will create a set of states and save in stateData.js\r\n    getStateList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject) { \r\n            self.stateData.stateSet.add(stateObject.State.toLowerCase())\r\n        });\r\n        this.getCountyList(jsonData);\r\n    } \r\n\r\n    //Given a state as input this method reads the csv file and returns all counties for that state.\r\n    getCountyList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject){\r\n            if(self.stateData.stateToCountyMap.has(stateObject.State.toLowerCase())) {\r\n                   var existingValues = self.stateData.stateToCountyMap.get(stateObject.State.toLowerCase());\r\n                   // Format for each county => County : Male Life Expectancy : Female Life Expectancy\r\n                   existingValues += \" \" + stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\";\r\n                   self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), existingValues);\r\n            }\r\n            else self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\");\r\n        });\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\n\r\n@inject(User)\r\nexport class Slider {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n    \r\n    createAgeSlider() {\r\n        $(\"#age\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientPersonalInfo.age = data.from;\r\n            }\r\n        });\r\n\r\n        $(\"#spouseage\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spousePersonalInfo.age = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    createLifeExpectancySlider() {\r\n        $('#familyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n\r\n        $('#spousefamilyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spouseFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n}","export class FamilyHealthData {\r\n    constructor() {\r\n        this.familyLifeExpectancy = 70;\r\n        this.checkHeartDisease = false;\r\n        this.checkCancer = false;\r\n        this.checkMentalHealth = false;\r\n        this.checkDiabetes = false;\r\n        \r\n    }\r\n}","export class MyHealthData {\r\n    constructor() {\r\n        this.height;\r\n        this.heightInInches;\r\n        this.weight;\r\n        this.bmi;\r\n        this.formHeightWeight = false;\r\n        this.exerciseLifeExpectancy = 0;\r\n\r\n        this.validHeight = false;\r\n        this.validWeight = false;\r\n        this.validBMI = false;\r\n        this.iconType = \"underweight\";\r\n\r\n        this.exercisePerWeek;\r\n        this.sleepPerWeek;\r\n        this.healthRank;\r\n\r\n        this.alcoholPerWeek;\r\n\r\n        this.checksmoking = false;\r\n        this.checkStillSmoking = true;\r\n        this.kindOfSmoker;\r\n        this.ageQuitSmoking;\r\n        this.smokerLifeExpectancy = 0;\r\n    }\r\n}","export class OccupationData {\r\n    constructor() {\r\n        this.checkincome = false;\r\n        this.income = 0;\r\n        this.incomeLifeExpectancy = 0;\r\n\r\n        this.occupationType = ['Manual Labor', 'Industry', 'Public Service', 'Management'];\r\n        this.type = 'Manual Labor';\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class PersonalInfoData {\r\n    constructor() {\r\n        this.checkspouse = false;\r\n        \r\n        this.age = 30;\r\n        this.checkgender = true;\r\n        this.gender = 'male';\r\n\r\n        this.education;\r\n        this.race = 'black';\r\n        this.maritalStatus;\r\n\r\n        this.state = \"Please Select\";\r\n        this.county = 'Please Select';\r\n        this.countyLifeExpectancy;\r\n        this.expectedYearsLeft;\r\n        this.testTuples = [];\r\n        this.testTuples2 = [];\r\n        this.testTuples3 = [];\r\n\r\n        this.ethnicityLifeExpectancy;\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class ResultsData {\r\n    constructor() {\r\n        //PERSONAL INFO EXPECTANCIES\r\n        this.education = 0;\r\n\r\n        //MY HEALTH EXPECTANCIES\r\n        this.exercise = 0;\r\n        this.smoker = 0;\r\n        this.diabetes = 0;\r\n        \r\n        //FAMILY HEALTH EXPECTANCIES\r\n\r\n\r\n        //OCCUPATION EXPECTANCIES\r\n        this.income = 0;\r\n\r\n        //OVERALL EXPECTANCY\r\n        this.overallLifeExpectancy = 0;\r\n    }\r\n}","export class StateData {\r\n    stateSet = new Set();\r\n    stateToCountyMap = new Map();\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateFamilyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateMyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    //this calculates the body mass index(if you're wondering, tweet me @JesseCochran1)\r\n    calculateBMI(person) {\r\n        var metricWeight = person.weight * 0.45;\r\n        var metricHeight = person.heightInInches * 0.025;\r\n        var metricHeightSquared = metricHeight * metricHeight;\r\n        person.bmi = (metricWeight / metricHeightSquared).toPrecision(4);\r\n    }\r\n\r\n    //this calculates added/decreased life expectancy based on how many hours of exercise per week\r\n    calculateExercise(person) {\r\n        var exerciseLifeExpectancy = 0;\r\n\r\n        if(person.exercisePerWeek) {\r\n            var bmi = person.bmi;\r\n\r\n            if(person.exercisePerWeek.indexOf(\"0\") !== -1) {\r\n                exerciseLifeExpectancy = 0;\r\n                if(bmi >= 18.5 && bmi < 25) exerciseLifeExpectancy -= 4.7;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 3.9;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 5.0;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 7.2;\r\n            }\r\n            else if(person.exercisePerWeek.indexOf(\"Less\") !== -1) {\r\n                exerciseLifeExpectancy = 1.8;\r\n                if(bmi >= 18.5 && bmi <= 24.9) exerciseLifeExpectancy -= 2.4;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 1.8;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 3.2;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 6.2;\r\n            }\r\n            else if(person.exercisePerWeek.indexOf(\"Approximately\") !== -1) {\r\n                exerciseLifeExpectancy = 3.4;\r\n                if(bmi >= 18.5 && bmi <= 24.9) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 1.6;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 4.5;\r\n            }\r\n            else if(person.exercisePerWeek.indexOf(\"More\") !== -1) {\r\n                exerciseLifeExpectancy = 4.5;\r\n                if(bmi >= 18.5 && bmi <= 24.9) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 25 && bmi < 30) exerciseLifeExpectancy -= 0;\r\n                else if(bmi >= 30 && bmi < 35) exerciseLifeExpectancy -= 1.6;\r\n                else if(bmi >= 35) exerciseLifeExpectancy -= 4.5;\r\n            }\r\n        }\r\n        person.exerciseLifeExpectancy = exerciseLifeExpectancy;\r\n    }\r\n\r\n    calculateSmoker(person) {\r\n        var smokerLifeExpectancy = 0;\r\n        var stillSmoking = person.checkStillSmoking;\r\n        var kindOfSmoker = person.kindOfSmoker;\r\n        \r\n        //CHECK KIND OF SMOKER\r\n        if(kindOfSmoker.indexOf(\"Light\") !== -1) {\r\n            smokerLifeExpectancy = -4.8;\r\n\r\n            //Add years if they quit smoking\r\n            if(!stillSmoking) { \r\n                var age = person.ageQuitSmoking;\r\n                if(age.indexOf(\"25\") !== -1) smokerLifeExpectancy += 4.8; //max 10\r\n                else if(age.indexOf(\"35\") !== -1) smokerLifeExpectancy += 4.8; //max 9\r\n                else if(age.indexOf(\"45\") !== -1) smokerLifeExpectancy += 4.8; //max 6\r\n                else if(age.indexOf(\"60\") !== -1) smokerLifeExpectancy += 3; //max 3\r\n            }\r\n        }\r\n        else if(kindOfSmoker.indexOf(\"Average\") !== -1) {\r\n            smokerLifeExpectancy -= 6.8;\r\n\r\n            //Add years if they quit smoking\r\n            if(!stillSmoking) { \r\n                var age = person.ageQuitSmoking;\r\n                if(age.indexOf(\"25\") !== -1) smokerLifeExpectancy += 6.8; //max 10\r\n                else if(age.indexOf(\"35\") !== -1) smokerLifeExpectancy += 6.8; //max 9\r\n                else if(age.indexOf(\"45\") !== -1) smokerLifeExpectancy += 6; //max 6\r\n                else if(age.indexOf(\"60\") !== -1) smokerLifeExpectancy += 3; //max 3\r\n            }\r\n        }\r\n        else if(kindOfSmoker.indexOf(\"Heavy\") !== -1) {\r\n            smokerLifeExpectancy -= 8.8;\r\n\r\n            //Add years if they quit smoking\r\n            if(!stillSmoking) { \r\n                var age = person.ageQuitSmoking;\r\n                if(age.indexOf(\"25\") !== -1) smokerLifeExpectancy += 8.8; //max 10\r\n                else if(age.indexOf(\"35\") !== -1) smokerLifeExpectancy += 8.8; //max 9\r\n                else if(age.indexOf(\"45\") !== -1) smokerLifeExpectancy += 6; //max 6\r\n                else if(age.indexOf(\"60\") !== -1) smokerLifeExpectancy += 3; //max 3\r\n            }\r\n        }\r\n        person.smokerLifeExpectancy = smokerLifeExpectancy;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateOccupation {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    //Calculate \r\n    calculateIncome(person, gender, results) {\r\n        var incomeLifeExpectancy = 0;\r\n\r\n        if(person.checkincome) {\r\n            if(parseFloat(person.income) >= 188996) {\r\n                if(gender == \"male\" || gender == \"Male\") incomeLifeExpectancy += 2.34;\r\n                else if(gender == \"Female\") incomeLifeExpectancy += 2.91;\r\n            }\r\n            else {\r\n                if(gender == \"male\" || gender == \"Male\") incomeLifeExpectancy += 0.32;\r\n                else if(gender == \"Female\") incomeLifeExpectancy += 0.04;\r\n            }\r\n        }\r\n\r\n        person.incomeLifeExpectancy = incomeLifeExpectancy;\r\n        results.income = incomeLifeExpectancy;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {User} from '../../services/user';\r\n\r\n@inject(HttpClient, User)\r\nexport class CalculateResults {\r\n    httpClient;\r\n\r\n    constructor(httpClient, user) {\r\n        this.httpClient = httpClient;\r\n        this.user = user;\r\n    }\r\n\r\n    //Gets the life table based on the users race and gender\r\n    async getLifeTableData(person) {\r\n        let results = await this.httpClient.fetch('/api/life-table/' + person.race.toLowerCase() + '-' + person.gender.toLowerCase() + '.json');\r\n        let resultsData = await results.json();\r\n        this.setUserExpectedAge(resultsData, person);\r\n        this.getTestTuples(resultsData, person);\r\n    }\r\n\r\n    //Iterates through the json object to determine the user's expected age\r\n    setUserExpectedAge(data, person) {\r\n        data.forEach(function(value) {\r\n            //If the user is currently the age in the json object, then the current age is set\r\n            var currentAgeArray = [];\r\n            currentAgeArray[0] = parseInt(value.Age.slice(0, 2));\r\n            currentAgeArray[1] = parseInt(value.Age.slice(3, 5));\r\n            if(currentAgeArray[0] === person.age || currentAgeArray[1] === person.age) {\r\n                person.expectedYearsLeft = parseInt(value.ExpectedAge);\r\n                person.ethnicityLifeExpectancy = person.expectedYearsLeft + person.age;\r\n            }\r\n        });\r\n    }\r\n\r\n    //Education calculation\r\n    calculateEducation(person, results) {\r\n        console.log(person.education);\r\n    }\r\n\r\n    addExpectancies(personResults) {\r\n        //MyHealth Factors\r\n        personResults.overallLifeExpectancy += personResults.exercise;\r\n        personResults.overallLifeExpectancy += personResults.smoker;\r\n\r\n        //FamilyHealth Factors\r\n\r\n\r\n        //Occupation Factors\r\n        personResults.overallLifeExpectancy += personResults.income;\r\n    }\r\n    \r\n    //Gets test tuples for chart data\r\n    getTestTuples(jsonData, person) {\r\n        var tempArr = [];\r\n        var tempArr2 = [];\r\n        var tempArr3 = [];\r\n\r\n        //TODO: Adjust curve to extend to beginning at 0 and to the bottom x axis at 0\r\n        jsonData.forEach(function(value) {\r\n            tempArr.push([value.Age, value.Number]);\r\n        });\r\n        jsonData.forEach(function(value) {\r\n            tempArr2.push([parseInt(value.Age) + 3, value.Number]);\r\n        });\r\n        jsonData.forEach(function(value) {\r\n            tempArr3.push([parseInt(value.Age) - 5, value.Number]);\r\n        });\r\n        person.testTuples = tempArr;\r\n        person.testTuples2 = tempArr2;\r\n        console.log(tempArr2);\r\n        person.testTuples3 = tempArr3;\r\n        console.log(tempArr3);\r\n    }\r\n}"],"sourceRoot":".."}