{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/aboutyou/personalinfo.js","src/health/familyhealth.js","src/health/myhealth.js","src/occupation/occupation.js","src/resources/index.js","src/results/results.js","src/services/familyHealthData.js","src/services/myHealthData.js","src/services/occupationData.js","src/services/personalInfoData.js","src/services/stateData.js","src/services/user.js","src/utilities/calculateFamilyHealth.js","src/utilities/calculateMyHealth.js","src/utilities/calculateOccupation.js","src/utilities/chart.js","src/utilities/readFile.js","src/utilities/slider.js"],"names":["App","httpClient","readFile","message","activate","fetch","data","json","data2","getStateList","configureRouter","config","router","title","map","route","moduleId","name","nav","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","ionRangeSlider","personalinfo","user","stateData","slider","currentCountyArray","checkState","gender","clientPersonalInfo","checkgender","console","log","spousegender","spousePersonalInfo","checkspouse","state","self","countyWithLifeArrays","stateToCountyMap","get","split","forEach","currentCountyInfo","push","pop","county","checkLifeExpectancy","lifeExpectancy","indexOf","checkStateSpouse","checkLifeExpectancySpouse","myhealth","navigate","familyhealth","occupation","submit","attached","createAgeSlider","calculateFamilyHealth","back","calculateMyHealth","heightError","validHeight","validHeightSpouse","checkHeight","valid","test","clientMyHealth","height","feetAndInches","heightInInches","parseInt","checkHeightSpouse","spouseMyHealth","heightErrorSpouse","calculateBMI","calculateOccupation","results","FamilyHealthData","motherHealthCheck","fatherHealthCheck","MyHealthData","weight","bmi","healthRank","OccupationData","job","PersonalInfoData","age","race","countyLifeExpectancy","StateData","stateSet","Set","Map","User","clientFamilyHealth","spouseFamilyHealth","clientOccupation","spouseOccupation","CalculateFamilyHealth","CalculateMyHealth","metricWeight","metricHeight","metricHeightSquared","CalculateOccupation","Chart","ReadFile","jsonData","stateObject","add","State","toLowerCase","getCountyList","has","existingValues","County","Male","Female","set","getCountyLifeExpectancy","countyToLifeExpectancy","Slider","$","grid","min","max","from","step","onFinish"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {ReadFile} from 'utilities/readFile';\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\n@inject(HttpClient, ReadFile)\r\nexport class App {\r\n  httpClient;\r\n\r\n  constructor(httpClient, readFile) {\r\n    this.httpClient = httpClient;\r\n    this.readFile = readFile;\r\n    this.message = 'Life Expectancy Calculator';\r\n  }\r\n\r\n  async activate() {\r\n    let data = await this.httpClient.fetch('/api/life-expectancy/get.json');\r\n    let data2 = await data.json();\r\n    this.readFile.getStateList(data2);\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Life Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'personalinfo'], moduleId: 'aboutyou/personalinfo',\r\n        name: 'personalinfo', title: 'Personal Info', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'myhealth', moduleId: 'health/myhealth',\r\n        name: 'myhealth', title: 'My Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'familyhealth', moduleId: 'health/familyhealth',\r\n        name: 'familyhealth', title: 'Family Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'occupation', moduleId: 'occupation/occupation',\r\n        name: 'occupation', title: 'Occupation', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Results', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'jsonfile', moduleId: 'services/lifeExpectancy.json!json',\r\n        name: 'jsonfile', title: 'Json File', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {StateData} from '../services/stateData';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\nimport {Slider} from '../utilities/slider';\r\n\r\n@inject(Router, User, StateData, Slider)\r\nexport class personalinfo {\r\n    currentCountyArray = [];\r\n\r\n    constructor(router, user, stateData, slider) {\r\n        this.slider = slider;\r\n        this.router = router;\r\n        this.user = user;\r\n        this.stateData = stateData;\r\n        this.checkState();\r\n    }\r\n\r\n    gender() {\r\n        this.user.clientPersonalInfo.checkgender = !this.user.clientPersonalInfo.checkgender;\r\n        this.user.clientPersonalInfo.gender = (this.user.clientPersonalInfo.checkgender) ? 'Male' : 'Female';\r\n\r\n        console.log(this.user.clientPersonalInfo);\r\n    }\r\n\r\n    spousegender() {\r\n        this.user.spousePersonalInfo.checkgender = !this.user.spousePersonalInfo.checkgender;\r\n        this.user.spousePersonalInfo.gender = (this.user.spousePersonalInfo.checkgender) ? 'Male' : 'Female';\r\n        console.log(this.user.clientPersonalInfo);\r\n        console.log(this.user.spousePersonalInfo);\r\n    }\r\n\r\n    checkspouse() {\r\n        this.user.clientPersonalInfo.checkspouse = !this.user.clientPersonalInfo.checkspouse;\r\n    }\r\n\r\n    //======================LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n    //This method retrieves all of the counties from the client's current state\r\n    checkState() {\r\n        var state = this.user.clientPersonalInfo.state;\r\n        if(state != \"Please Select\") {\r\n            var self = this;\r\n            this.currentCountyArray = [];\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                self.currentCountyArray.push(currentCountyInfo[0]);\r\n            });\r\n            this.currentCountyArray.pop();\r\n        }\r\n        else this.user.clientPersonalInfo.county = \"Please Select\";\r\n    }\r\n\r\n    //This method checks the current client's life expectancy\r\n    checkLifeExpectancy() {\r\n        if(this.user.clientPersonalInfo.county != \"Please Select\") {\r\n            var self = this;\r\n            var state = this.user.clientPersonalInfo.state;\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                //Life expectancy of male is index 2, life expectancy of female is index 1\r\n                var lifeExpectancy =  self.user.clientPersonalInfo.checkgender ? currentCountyInfo[2] : currentCountyInfo[1];\r\n                //If county name is found in array, then get life expectancy\r\n                if(currentCountyInfo[0].indexOf(self.user.clientPersonalInfo.county) != -1) {\r\n                    self.user.clientPersonalInfo.lifeExpectancy =  self.user.clientPersonalInfo.checkgender ? currentCountyInfo[1] : currentCountyInfo[2];\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    //This method retrieves all of the counties from the co-client's current state\r\n    checkStateSpouse() {\r\n        var state = this.user.spousePersonalInfo.state;\r\n        if(state != \"Please Select\") {\r\n            var self = this;\r\n            this.currentCountyArray = [];\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                self.currentCountyArray.push(currentCountyInfo[0]);\r\n            });\r\n            this.currentCountyArray.pop();\r\n        }\r\n        else this.user.spousePersonalInfo.county = \"Please Select\";\r\n    }\r\n\r\n    //This method checks the current co-client's life expectancy\r\n    checkLifeExpectancySpouse() {\r\n        if(this.user.spousePersonalInfo.county != \"Please Select\") {\r\n            var self = this;\r\n            var state = this.user.spousePersonalInfo.state;\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                //Life expectancy of male is index 2, life expectancy of female is index 1\r\n                var lifeExpectancy =  self.user.spousePersonalInfo.checkgender ? currentCountyInfo[2] : currentCountyInfo[1];\r\n                //If county name is found in array, then get life expectancy\r\n                if(currentCountyInfo[0].indexOf(self.user.spousePersonalInfo.county) != -1) {\r\n                    self.user.spousePersonalInfo.lifeExpectancy =  self.user.spousePersonalInfo.checkgender ? currentCountyInfo[1] : currentCountyInfo[2];\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //===================END LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n\r\n\r\n    myhealth() {\r\n        this.router.navigate('#/myhealth');  \r\n    }\r\n\r\n    familyhealth() {\r\n        this.router.navigate('#/familyhealth');  \r\n    }\r\n\r\n    occupation() {\r\n        this.router.navigate('#/occupation');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/results');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createAgeSlider();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateFamilyHealth} from '../utilities/calculateFamilyHealth'\r\n\r\n@inject(Router, User, CalculateFamilyHealth)\r\nexport class familyhealth {\r\n    constructor(router, user, calculateFamilyHealth) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateFamilyHealth = calculateFamilyHealth;\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateMyHealth} from '../utilities/calculateMyHealth';\r\n\r\n@inject(Router, User, CalculateMyHealth)\r\nexport class myhealth {\r\n    heightError = \"\";\r\n    validHeight = false;\r\n    validHeightSpouse = false;\r\n\r\n    constructor(router, user, calculateMyHealth) {\r\n        this.calculateMyHealth = calculateMyHealth;\r\n        this.router = router;\r\n        this.user = user;\r\n    }\r\n\r\n    checkHeight() {\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(this.user.clientMyHealth.height);\r\n        this.validHeight = !valid;\r\n        this.heightError = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = this.user.clientMyHealth.height.split(\"'\");\r\n            this.user.clientMyHealth.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        console.log(this.user.clientMyHealth.heightInInches);\r\n    }\r\n\r\n    checkHeightSpouse() {\r\n        console.log(this.user.spouseMyHealth.height);\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(this.user.spouseMyHealth.height);\r\n        this.validHeightSpouse = !valid;\r\n        this.heightErrorSpouse = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = this.user.spouseMyHealth.height.split(\"'\");\r\n            this.user.spouseMyHealth.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        console.log(this.user.spouseMyHealth.heightInInches);\r\n    }\r\n\r\n    back() {\r\n        console.log(this.user.clientMyHealth);\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.calculateMyHealth.calculateBMI();\r\n        console.log(this.user.clientMyHealth);\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateOccupation} from '../utilities/calculateOccupation';\r\n\r\n@inject(Router, User, CalculateOccupation)\r\nexport class occupation {\r\n    constructor(router, user, calculateOccupation) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateOccupation = calculateOccupation;\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class results {\r\n    constructor(router) {\r\n        this.router = router;\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","export class FamilyHealthData {\r\n    constructor() {\r\n        this.motherHealthCheck = false;\r\n        this.fatherHealthCheck = false;\r\n    }\r\n}","export class MyHealthData {\r\n    constructor() {\r\n        this.height;\r\n        this.heightInInches;\r\n        this.weight;\r\n        this.bmi;\r\n        this.healthRank;\r\n    }\r\n}","export class OccupationData {\r\n    constructor() {\r\n        this.job;\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class PersonalInfoData {\r\n    constructor() {\r\n        this.age = 30;\r\n        this.checkgender = true;\r\n        this.gender = \"Male\";\r\n        this.race = \"White\";\r\n        this.checkspouse = false;\r\n        this.state = \"Please Select\";\r\n        this.county = 'Please Select';\r\n        this.countyLifeExpectancy;\r\n    }\r\n}","export class StateData {\r\n    stateSet = new Set();\r\n    stateToCountyMap = new Map();\r\n}","import {singleton} from 'aurelia-framework';\r\nimport {PersonalInfoData} from '../services/personalInfoData';\r\nimport {MyHealthData} from '../services/myHealthData';\r\nimport {FamilyHealthData} from '../services/familyHealthData';\r\nimport {OccupationData} from '../services/occupationData';\r\n\r\n@singleton()\r\nexport class User {\r\n    constructor() {\r\n        this.clientPersonalInfo = new PersonalInfoData();\r\n        this.spousePersonalInfo = new PersonalInfoData();\r\n        \r\n        this.clientMyHealth = new MyHealthData();\r\n        this.spouseMyHealth = new MyHealthData();\r\n\r\n        this.clientFamilyHealth = new FamilyHealthData();\r\n        this.spouseFamilyHealth = new FamilyHealthData();\r\n\r\n        this.clientOccupation = new OccupationData();\r\n        this.spouseOccupation = new OccupationData();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateFamilyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateMyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    //this calculates the body mass index(if you're wondering, tweet me @JesseCochran1)\r\n    calculateBMI() {\r\n        var metricWeight = this.user.clientMyHealth.weight * 0.45;\r\n        var metricHeight = this.user.clientMyHealth.heightInInches * 0.025;\r\n        var metricHeightSquared = metricHeight * metricHeight;\r\n        this.user.clientMyHealth.bmi = metricWeight / metricHeightSquared;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateOccupation {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n}","export class Chart {\r\n    constructor() {\r\n        \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {StateData} from '../services/stateData';\r\n\r\n@inject(StateData)\r\nexport class ReadFile {\r\n\r\n    constructor(stateData) {\r\n        this.stateData = stateData;\r\n    }\r\n\r\n    //Given the json data this method will create a set of states and save in stateData.js\r\n    getStateList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject) { \r\n            self.stateData.stateSet.add(stateObject.State.toLowerCase())\r\n        });\r\n        this.getCountyList(jsonData);\r\n    } \r\n\r\n    //Given a state as input this method reads the csv file and returns all counties for that state.\r\n    getCountyList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject){\r\n            if(self.stateData.stateToCountyMap.has(stateObject.State.toLowerCase())) {\r\n                   var existingValues = self.stateData.stateToCountyMap.get(stateObject.State.toLowerCase());\r\n                   // Format for each county => County : Male Life Expectancy : Female Life Expectancy\r\n                   existingValues += \" \" + stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\";\r\n                   self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), existingValues);\r\n            }\r\n            else  self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\");\r\n        });\r\n    }\r\n\r\n    //Given a county name this method will return the life expectancy for that county\r\n    getCountyLifeExpectancy(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject) {\r\n            if(self.stateData.countyToLifeExpectancy.has(stateObject.County.toLowerCase())) {\r\n                \r\n            }\r\n        });\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\n\r\n@inject(User)\r\nexport class Slider {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n    \r\n    createAgeSlider() {\r\n        $(\"#age\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientPersonalInfo.age = data.from;\r\n            }\r\n        });\r\n\r\n        $(\"#spouseage\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spousePersonalInfo.age = data.from;\r\n            }\r\n        });\r\n    }\r\n}"],"sourceRoot":".."}