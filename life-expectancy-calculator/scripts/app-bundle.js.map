{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/aboutyou/personalinfo.js","src/health/familyhealth.js","src/health/myhealth.js","src/occupation/occupation.js","src/resources/index.js","src/results/results.js","src/services/familyHealthData.js","src/services/myHealthData.js","src/services/occupationData.js","src/services/personalInfoData.js","src/services/resultsData.js","src/services/stateData.js","src/services/user.js","src/utilities/calculateFamilyHealth.js","src/utilities/calculateMyHealth.js","src/utilities/calculateOccupation.js","src/utilities/calculateResults.js","src/utilities/chart.js","src/utilities/readFile.js","src/utilities/slider.js"],"names":["App","httpClient","readFile","message","activate","fetch","data","json","data2","getStateList","configureRouter","config","router","title","map","route","moduleId","name","nav","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","ionRangeSlider","personalinfo","user","stateData","slider","calculateResults","currentCountyArray","gender","person","checkgender","console","log","checkspouse","clientPersonalInfo","checkState","state","self","countyWithLifeArrays","stateToCountyMap","get","split","forEach","currentCountyInfo","push","pop","county","checkLifeExpectancy","lifeExpectancy","indexOf","countyLifeExpectancy","myhealth","navigate","familyhealth","occupation","submit","getLifeTableData","clientResults","ethnicity","ethnicityLifeExpectancy","addExerciseExpectancy","spousePersonalInfo","spouseResults","attached","createAgeSlider","calculateFamilyHealth","heartdisease","checkHeartDisease","cancer","checkCancer","mentalhealth","checkMentalHealth","diabetes","checkDiabetes","back","createLifeExpectancySlider","calculateMyHealth","heightError","validHeight","validHeightSpouse","checkHeight","valid","test","clientMyHealth","height","feetAndInches","heightInInches","parseInt","checkHeightSpouse","spouseMyHealth","heightErrorSpouse","smoking","checksmoking","calculateBMI","calculateExercise","exercise","exerciseLifeExpectancy","tooltip","content","calculateOccupation","education","checkEducation","construction","checkConstruction","emergencyResponding","checkEmergencyResponding","results","chart","createChart","FamilyHealthData","familyLifeExpectancy","MyHealthData","weight","bmi","exercisePerWeek","sleepPerWeek","healthRank","alcoholPerWeek","OccupationData","PersonalInfoData","age","race","maritalStatus","expectedYearsLeft","testTuples","ResultsData","overallLifeExpectancy","StateData","stateSet","Set","Map","User","clientFamilyHealth","spouseFamilyHealth","clientOccupation","spouseOccupation","CalculateFamilyHealth","CalculateMyHealth","metricWeight","metricHeight","metricHeightSquared","CalculateOccupation","CalculateResults","toLowerCase","setUserExpectedAge","getTestTuples","value","currentAgeArray","Age","slice","ExpectedAge","personResults","jsonData","tempArr","Probability","HighCharts","Chart","containerID","Highcharts","text","xAxis","plotOptions","series","pointStart","yAxis","ReadFile","stateObject","add","State","getCountyList","has","existingValues","County","Male","Female","set","Slider","$","grid","min","max","from","step","onFinish"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {ReadFile} from 'utilities/readFile';\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\n@inject(HttpClient, ReadFile)\r\nexport class App {\r\n  httpClient;\r\n\r\n  constructor(httpClient, readFile) {\r\n    this.httpClient = httpClient;\r\n    this.readFile = readFile;\r\n    this.message = 'Life Expectancy Calculator';\r\n  }\r\n\r\n  async activate() {\r\n    let data = await this.httpClient.fetch('/api/life-expectancy/get.json');\r\n    let data2 = await data.json();\r\n    this.readFile.getStateList(data2);\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Life Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'personalinfo'], moduleId: 'aboutyou/personalinfo',\r\n        name: 'personalinfo', title: 'Personal Info', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'myhealth', moduleId: 'health/myhealth',\r\n        name: 'myhealth', title: 'My Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'familyhealth', moduleId: 'health/familyhealth',\r\n        name: 'familyhealth', title: 'Family Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'occupation', moduleId: 'occupation/occupation',\r\n        name: 'occupation', title: 'Occupation', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Results', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'jsonfile', moduleId: 'services/lifeExpectancy.json!json',\r\n        name: 'jsonfile', title: 'Json File', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {StateData} from '../services/stateData';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\nimport {Slider} from '../utilities/slider';\r\nimport {CalculateResults} from '../utilities/calculateResults';\r\n\r\n@inject(Router, User, StateData, Slider, CalculateResults)\r\nexport class personalinfo {\r\n    currentCountyArray = [];\r\n\r\n    constructor(router, user, stateData, slider, calculateResults) {\r\n        this.slider = slider;\r\n        this.router = router;\r\n        this.user = user;\r\n        this.stateData = stateData;\r\n        this.calculateResults = calculateResults;\r\n    }\r\n\r\n    gender(person) {\r\n        person.checkgender = !person.checkgender;\r\n        person.gender = person.checkgender ? 'Male' : 'Female';\r\n        console.log(person);\r\n    }\r\n\r\n    checkspouse() {\r\n        this.user.clientPersonalInfo.checkspouse = !this.user.clientPersonalInfo.checkspouse;\r\n    }\r\n\r\n    //======================LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n    //This method retrieves all of the counties from the client's current state\r\n    checkState(person) {\r\n        var state = person.state;\r\n        if(state != \"Please Select\") {\r\n            var self = this;\r\n            this.currentCountyArray = [];\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                self.currentCountyArray.push(currentCountyInfo[0]);\r\n            });\r\n            this.currentCountyArray.pop();\r\n        }\r\n        else person.county = \"Please Select\";\r\n    }\r\n\r\n    //This method checks the current client's life expectancy\r\n    checkLifeExpectancy(person) {\r\n        if(person.county != \"Please Select\") {\r\n            var state = person.state;\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                //Life expectancy of male is index 2, life expectancy of female is index 1\r\n                var lifeExpectancy =  person.checkgender ? currentCountyInfo[2] : currentCountyInfo[1];\r\n                //If county name is found in array, then get life expectancy\r\n                if(currentCountyInfo[0].indexOf(person.county) != -1) {\r\n                    person.countyLifeExpectancy =  person.checkgender ? currentCountyInfo[1] : currentCountyInfo[2];\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //===================END LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n\r\n    myhealth() {\r\n        this.router.navigate('#/myhealth');  \r\n    }\r\n\r\n    familyhealth() {\r\n        this.router.navigate('#/familyhealth');  \r\n    }\r\n\r\n    occupation() {\r\n        this.router.navigate('#/occupation');  \r\n    }\r\n\r\n    async submit() {\r\n        //Get life expectancy based on age, gender, and ethnicity\r\n        await this.calculateResults.getLifeTableData(this.user.clientPersonalInfo);\r\n        this.user.clientResults.ethnicity = this.user.clientPersonalInfo.ethnicityLifeExpectancy;\r\n\r\n        this.calculateResults.addExerciseExpectancy(this.user.clientResults);\r\n\r\n        console.log(\"=======CLIENT=======\");\r\n        console.log(this.user.clientPersonalInfo);\r\n        console.log(this.user.clientResults);\r\n\r\n        if(this.user.clientPersonalInfo.checkspouse){\r\n            await this.calculateResults.getLifeTableData(this.user.spousePersonalInfo);\r\n            this.user.spouseResults.ethnicity = this.user.spousePersonalInfo.ethnicityLifeExpectancy;\r\n\r\n            this.calculateResults.addExerciseExpectancy(this.user.spouseResults);\r\n        \r\n            console.log(\"=======SPOUSE=======\");\r\n            console.log(this.user.spousePersonalInfo);\r\n            console.log(this.user.spouseResults);\r\n        } \r\n\r\n        \r\n        this.router.navigate('#/results');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createAgeSlider();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateFamilyHealth} from '../utilities/calculateFamilyHealth';\r\nimport {Slider} from '../utilities/slider';\r\n\r\n@inject(Router, User, CalculateFamilyHealth, Slider)\r\nexport class familyhealth {\r\n    constructor(router, user, calculateFamilyHealth, slider) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateFamilyHealth = calculateFamilyHealth;\r\n        this.slider = slider;\r\n    }\r\n\r\n    //HEART DISEASE\r\n    heartdisease(person) {\r\n        person.checkHeartDisease = !person.checkHeartDisease;\r\n    }\r\n\r\n    //CANCER\r\n    cancer(person) {\r\n        person.checkCancer = !person.checkCancer;\r\n    }\r\n\r\n    //MENTAL HEALTH\r\n    mentalhealth(person) {\r\n        person.checkMentalHealth = !person.checkMentalHealth;\r\n    }\r\n\r\n    //DIABETES\r\n    diabetes(person) {\r\n        person.checkDiabetes = !person.checkDiabetes;\r\n    }\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createLifeExpectancySlider();\r\n    }\r\n}","import $ from 'jquery';\r\nimport 'jquery-ui-dist';\r\n\r\nimport {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateMyHealth} from '../utilities/calculateMyHealth';\r\n\r\n@inject(Router, User, CalculateMyHealth)\r\nexport class myhealth {\r\n    heightError = \"\";\r\n    validHeight = false;\r\n    validHeightSpouse = false;\r\n\r\n    constructor(router, user, calculateMyHealth) {\r\n        this.calculateMyHealth = calculateMyHealth;\r\n        this.router = router;\r\n        this.user = user;\r\n    }\r\n\r\n    checkHeight() {\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(this.user.clientMyHealth.height);\r\n        this.validHeight = !valid;\r\n        this.heightError = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = this.user.clientMyHealth.height.split(\"'\");\r\n            this.user.clientMyHealth.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        //console.log(this.user.clientMyHealth.heightInInches);\r\n    }\r\n\r\n    checkHeightSpouse() {\r\n        //DONT LET CLICK SUBMIT WITHOUT PROPER HEIGHT\r\n        console.log(this.user.spouseMyHealth.height);\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(this.user.spouseMyHealth.height);\r\n        this.validHeightSpouse = !valid;\r\n        this.heightErrorSpouse = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = this.user.spouseMyHealth.height.split(\"'\");\r\n            this.user.spouseMyHealth.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        //console.log(this.user.spouseMyHealth.heightInInches);\r\n    }\r\n\r\n    smoking(person) {\r\n        person.checksmoking = !person.checksmoking;\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.calculateMyHealth.calculateBMI(this.user.clientMyHealth);\r\n        this.calculateMyHealth.calculateExercise(this.user.clientMyHealth);\r\n        this.user.clientResults.exercise = this.user.clientMyHealth.exerciseLifeExpectancy;\r\n        console.log(this.user.clientMyHealth);\r\n\r\n        if(this.user.clientPersonalInfo.checkspouse) {\r\n            this.calculateMyHealth.calculateBMI(this.user.spouseMyHealth);\r\n            this.calculateMyHealth.calculateExercise(this.user.spouseMyHealth);\r\n            this.user.spouseResults.exercise = this.user.spouseMyHealth.exerciseLifeExpectancy;\r\n            console.log(this.user.spouseMyHealth);\r\n        }\r\n\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    attached() {\r\n        //=====================MY HEALTH TOOLTIPS============================\r\n        $('#height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n\r\n        $('#spouse-height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#spouse-weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#spouse-exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateOccupation} from '../utilities/calculateOccupation';\r\n\r\n@inject(Router, User, CalculateOccupation)\r\nexport class occupation {\r\n    constructor(router, user, calculateOccupation) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateOccupation = calculateOccupation;\r\n    }\r\n\r\n    //EDUCATION\r\n    education(person) {\r\n        person.checkEducation = !person.checkEducation;\r\n    }\r\n\r\n    //CONSTRUCTION\r\n    construction(person) {\r\n        person.checkConstruction = !person.checkConstruction;\r\n    }\r\n\r\n    //EMERGENCY RESPONDING\r\n    emergencyResponding(person) {\r\n        person.checkEmergencyResponding = !person.checkEmergencyResponding;\r\n    }\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {Chart} from '../utilities/chart';\r\nimport {CalculateResults} from '../utilities/calculateResults';\r\n\r\n@inject(Router, User, Chart, CalculateResults)\r\nexport class results {\r\n    constructor(router, user, chart, calculateResults) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.chart = chart;\r\n        this.calculateResults = calculateResults;\r\n    }\r\n\r\n    attached() {\r\n        this.chart.createChart('chart-container');\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","export class FamilyHealthData {\r\n    constructor() {\r\n        this.familyLifeExpectancy = 70;\r\n        this.checkHeartDisease = false;\r\n        this.checkCancer = false;\r\n        this.checkMentalHealth = false;\r\n        this.checkDiabetes = false;\r\n        \r\n    }\r\n}","export class MyHealthData {\r\n    constructor() {\r\n        this.height;\r\n        this.heightInInches;\r\n        this.weight;\r\n        this.bmi;\r\n\r\n        this.exercisePerWeek;\r\n        this.sleepPerWeek;\r\n        this.healthRank;\r\n\r\n        this.alcoholPerWeek;\r\n        this.checksmoking;\r\n\r\n        this.exerciseLifeExpectancy;\r\n    }\r\n}","export class OccupationData {\r\n    constructor() {\r\n        this.checkEducation = false;\r\n        this.checkConstruction = false;\r\n        this.checkEmergencyResponding = false;\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class PersonalInfoData {\r\n    constructor() {\r\n        this.checkspouse = false;\r\n        \r\n        this.age = 30;\r\n        this.checkgender = true;\r\n        this.gender = 'male';\r\n        this.race = 'white';\r\n        this.maritalStatus;\r\n\r\n        this.state = \"Please Select\";\r\n        this.county = 'Please Select';\r\n        this.countyLifeExpectancy;\r\n        this.expectedYearsLeft;\r\n        this.testTuples = [];\r\n\r\n        this.ethnicityLifeExpectancy;\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class ResultsData {\r\n    constructor() {\r\n        //PERSONAL INFO EXPECTANCIES\r\n        this.ethnicity;\r\n\r\n        //MY HEALTH EXPECTANCIES\r\n        this.exercise;\r\n        \r\n        //FAMILY HEALTH EXPECTANCIES\r\n\r\n\r\n        //OCCUPATION EXPECTANCIES\r\n\r\n\r\n        //OVERALL EXPECTANCY\r\n        this.overallLifeExpectancy;\r\n    }\r\n}","export class StateData {\r\n    stateSet = new Set();\r\n    stateToCountyMap = new Map();\r\n}","import {singleton} from 'aurelia-framework';\r\nimport {PersonalInfoData} from '../services/personalInfoData';\r\nimport {MyHealthData} from '../services/myHealthData';\r\nimport {FamilyHealthData} from '../services/familyHealthData';\r\nimport {OccupationData} from '../services/occupationData';\r\nimport {ResultsData} from '../services/resultsData';\r\n\r\n@singleton()\r\nexport class User {\r\n    constructor() {\r\n        this.clientPersonalInfo = new PersonalInfoData();\r\n        this.spousePersonalInfo = new PersonalInfoData();\r\n        \r\n        this.clientMyHealth = new MyHealthData();\r\n        this.spouseMyHealth = new MyHealthData();\r\n\r\n        this.clientFamilyHealth = new FamilyHealthData();\r\n        this.spouseFamilyHealth = new FamilyHealthData();\r\n\r\n        this.clientOccupation = new OccupationData();\r\n        this.spouseOccupation = new OccupationData();\r\n\r\n        this.clientResults = new ResultsData();\r\n        this.spouseResults = new ResultsData();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateFamilyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateMyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    //this calculates the body mass index(if you're wondering, tweet me @JesseCochran1)\r\n    calculateBMI(person) {\r\n        var metricWeight = person.weight * 0.45;\r\n        var metricHeight = person.heightInInches * 0.025;\r\n        var metricHeightSquared = metricHeight * metricHeight;\r\n        person.bmi = metricWeight / metricHeightSquared;\r\n    }\r\n\r\n    //this calculates added/decreased life expectancy based on how many hours of exercise per week\r\n    calculateExercise(person) {\r\n        var exercisePerWeek = person.exercisePerWeek;\r\n        var bmi = person.bmi;\r\n        \r\n        if(exercisePerWeek.indexOf(\"0\") !== -1) {\r\n            person.exerciseLifeExpectancy = 0;\r\n            if(bmi >= 18.5 && bmi < 25) person.exerciseLifeExpectancy -= 4.7;\r\n            else if(bmi >= 25 && bmi < 30) person.exerciseLifeExpectancy -= 3.9;\r\n            else if(bmi >= 30 && bmi < 35) person.exerciseLifeExpectancy -= 5.0;\r\n            else if(bmi >= 35) person.exerciseLifeExpectancy -= 7.2;\r\n        }\r\n        else if(exercisePerWeek.indexOf(\"Less\") !== -1) {\r\n            person.exerciseLifeExpectancy = 1.8;\r\n            if(bmi >= 18.5 && bmi <= 24.9) person.exerciseLifeExpectancy -= 2.4;\r\n            else if(bmi >= 25 && bmi < 30) person.exerciseLifeExpectancy -= 1.8;\r\n            else if(bmi >= 30 && bmi < 35) person.exerciseLifeExpectancy -= 3.2;\r\n            else if(bmi >= 35) person.exerciseLifeExpectancy -= 6.2;\r\n        }\r\n        else if(exercisePerWeek.indexOf(\"Approximately\") !== -1) {\r\n            person.exerciseLifeExpectancy = 3.4;\r\n            if(bmi >= 18.5 && bmi <= 24.9) person.exerciseLifeExpectancy -= 0;\r\n            else if(bmi >= 25 && bmi < 30) person.exerciseLifeExpectancy -= 0;\r\n            else if(bmi >= 30 && bmi < 35) person.exerciseLifeExpectancy -= 1.6;\r\n            else if(bmi >= 35) person.exerciseLifeExpectancy -= 4.5;\r\n        }\r\n        else if(exercisePerWeek.indexOf(\"More\") !== -1) {\r\n            person.exerciseLifeExpectancy = 4.5;\r\n            if(bmi >= 18.5 && bmi <= 24.9) person.exerciseLifeExpectancy -= 0;\r\n            else if(bmi >= 25 && bmi < 30) person.exerciseLifeExpectancy -= 0;\r\n            else if(bmi >= 30 && bmi < 35) person.exerciseLifeExpectancy -= 1.6;\r\n            else if(bmi >= 35) person.exerciseLifeExpectancy -= 4.5;\r\n        }\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateOccupation {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {User} from '../services/user';\r\n\r\n@inject(HttpClient, User)\r\nexport class CalculateResults {\r\n    httpClient;\r\n\r\n    constructor(httpClient, user) {\r\n        this.httpClient = httpClient;\r\n        this.user = user;\r\n    }\r\n\r\n    //Gets the life table based on the users race and gender\r\n    async getLifeTableData(person) {\r\n        let data = await this.httpClient.fetch('/api/life-table/' + person.race.toLowerCase() + '-' + person.gender.toLowerCase() + '.json');\r\n        let data2 = await data.json();\r\n        this.setUserExpectedAge(data2, person);\r\n        this.getTestTuples(data2, person);\r\n    }\r\n\r\n    //Iterates through the json object to determine the user's expected age\r\n    setUserExpectedAge(data, person) {\r\n        data.forEach(function(value) {\r\n            //If the user is currently the age in the json object, then the current age is set\r\n            var currentAgeArray = [];\r\n            currentAgeArray[0] = parseInt(value.Age.slice(0, 2));\r\n            currentAgeArray[1] = parseInt(value.Age.slice(3, 5));\r\n            if(currentAgeArray[0] === person.age || currentAgeArray[1] === person.age) {\r\n                person.expectedYearsLeft = parseInt(value.ExpectedAge);\r\n                person.ethnicityLifeExpectancy = person.expectedYearsLeft + person.age;\r\n            }\r\n        });\r\n    }\r\n\r\n    addExerciseExpectancy(personResults) {\r\n        personResults.overallLifeExpectancy = personResults.ethnicity + personResults.exercise;\r\n    }\r\n\r\n    //Averages the life expectancy from the life table and life expectancy county table\r\n    // averageLifeExpectancy(person) {\r\n    //     var averagedLifeExpectancy = ((person.expectedYearsLeft + person.age) + person.ethnicityLifeExpectancy ) / 2;\r\n    //     TODO: Set this variable to new life expectancy if we decide to in future\r\n    //}\r\n    \r\n    //Gets test tuples for chart data\r\n    getTestTuples(jsonData, person) {\r\n        var tempArr = [];\r\n        jsonData.forEach(function(value) {\r\n            tempArr.push([value.Age, 1 - value.Probability]);\r\n        });\r\n        person.testTuples = tempArr;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport * as HighCharts from \"highcharts\";\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class Chart {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    createChart(containerID) {\r\n        //console.log(this.user.clientPersonalInfo.testTuples);\r\n        Highcharts.chart(containerID, {\r\n                title: {\r\n                    text: 'Life Expectancy'\r\n                },\r\n                xAxis: {\r\n                    title: {\r\n                        text: 'Age'\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    series: {\r\n                        pointStart: this.user.clientPersonalInfo.age\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: 'Probability'\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Client',\r\n                    data:  this.user.clientPersonalInfo.testTuples\r\n                }, {\r\n                    name: 'Co-client',\r\n                    data: this.user.clientPersonalInfo.testTuples\r\n                }, {\r\n                    name: 'Average',\r\n                    data: this.user.clientPersonalInfo.testTuples\r\n                }]\r\n            }); \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {StateData} from '../services/stateData';\r\n\r\n@inject(StateData)\r\nexport class ReadFile {\r\n\r\n    constructor(stateData) {\r\n        this.stateData = stateData;\r\n    }\r\n\r\n    //Given the json data this method will create a set of states and save in stateData.js\r\n    getStateList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject) { \r\n            self.stateData.stateSet.add(stateObject.State.toLowerCase())\r\n        });\r\n        this.getCountyList(jsonData);\r\n    } \r\n\r\n    //Given a state as input this method reads the csv file and returns all counties for that state.\r\n    getCountyList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject){\r\n            if(self.stateData.stateToCountyMap.has(stateObject.State.toLowerCase())) {\r\n                   var existingValues = self.stateData.stateToCountyMap.get(stateObject.State.toLowerCase());\r\n                   // Format for each county => County : Male Life Expectancy : Female Life Expectancy\r\n                   existingValues += \" \" + stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\";\r\n                   self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), existingValues);\r\n            }\r\n            else self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\");\r\n        });\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\n\r\n@inject(User)\r\nexport class Slider {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n    \r\n    createAgeSlider() {\r\n        $(\"#age\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientPersonalInfo.age = data.from;\r\n            }\r\n        });\r\n\r\n        $(\"#spouseage\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spousePersonalInfo.age = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    createLifeExpectancySlider() {\r\n        $('#familyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n\r\n        $('#spousefamilyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spouseFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n}"],"sourceRoot":".."}