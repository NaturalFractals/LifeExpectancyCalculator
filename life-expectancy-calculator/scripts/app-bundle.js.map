{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/aboutyou/personalinfo.js","src/health/familyhealth.js","src/health/myhealth.js","src/occupation/occupation.js","src/resources/index.js","src/results/results.js","src/services/familyHealthData.js","src/services/myHealthData.js","src/services/occupationData.js","src/services/personalInfoData.js","src/services/resultsData.js","src/services/stateData.js","src/services/user.js","src/utilities/calculateFamilyHealth.js","src/utilities/calculateMyHealth.js","src/utilities/calculateOccupation.js","src/utilities/calculateResults.js","src/utilities/chart.js","src/utilities/readFile.js","src/utilities/slider.js"],"names":["App","httpClient","readFile","message","activate","fetch","data","json","data2","getStateList","configureRouter","config","router","title","map","route","moduleId","name","nav","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","ionRangeSlider","personalinfo","user","stateData","slider","calculateResults","currentCountyArray","gender","person","checkgender","console","log","checkspouse","clientPersonalInfo","checkState","state","self","countyWithLifeArrays","stateToCountyMap","get","split","forEach","currentCountyInfo","push","pop","county","checkLifeExpectancy","lifeExpectancy","indexOf","myhealth","navigate","familyhealth","occupation","submit","getLifeTableData","addExerciseExpectancy","clientResults","spousePersonalInfo","spouseResults","attached","createAgeSlider","calculateFamilyHealth","heartdisease","clientFamilyHealth","checkHeartDisease","spouseheartdisease","spouseFamilyHealth","cancer","checkCancer","spousecancer","mentalhealth","checkMentalHealth","spousementalhealth","diabetes","checkDiabetes","spousediabetes","back","createLifeExpectancySlider","calculateMyHealth","heightError","validHeight","validHeightSpouse","checkHeight","valid","test","clientMyHealth","height","feetAndInches","heightInInches","parseInt","checkHeightSpouse","spouseMyHealth","heightErrorSpouse","smoking","checksmoking","smokingSpouse","calculateBMI","calculateExercise","tooltip","content","calculateOccupation","education","clientOccupation","checkEducation","spouseeducation","spouseOccupation","construction","checkConstruction","spouseconstruction","emergencyResponding","checkEmergencyResponding","spouseemergencyResponding","results","chart","createChart","FamilyHealthData","familyLifeExpectancy","MyHealthData","weight","bmi","exercisePerWeek","sleepPerWeek","healthRank","alcoholPerWeek","exerciseLifeExpectancy","OccupationData","PersonalInfoData","age","race","maritalStatus","countyLifeExpectancy","expectedYearsLeft","testTuples","ethnicityLifeExpectancy","ResultsData","overallLifeExpectancy","StateData","stateSet","Set","Map","User","CalculateFamilyHealth","CalculateMyHealth","metricWeight","metricHeight","metricHeightSquared","CalculateOccupation","CalculateResults","toLowerCase","setUserExpectedAge","getTestTuples","value","currentAgeArray","Age","slice","ExpectedAge","personResults","expectedLife","addedExercise","jsonData","tempArr","Probability","HighCharts","Chart","containerID","Highcharts","text","xAxis","plotOptions","series","pointStart","yAxis","ReadFile","stateObject","add","State","getCountyList","has","existingValues","County","Male","Female","set","Slider","$","grid","min","max","from","step","onFinish"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAOaA,cAAAA,cADZ;AAIC,iBAAYC,UAAZ,EAAwBC,QAAxB,EAAkC;AAAA;;AAChC,WAAKD,UAAL,GAAkBA,UAAlB;AACA,WAAKC,QAAL,GAAgBA,QAAhB;AACA,WAAKC,OAAL,GAAe,4BAAf;AACD;;kBAEKC;;;;;;;;uBACa,KAAKH,UAAL,CAAgBI,KAAhB,CAAsB,+BAAtB;;;AAAbC;;uBACcA,KAAKC,IAAL;;;AAAdC;;AACJ,qBAAKN,QAAL,CAAcO,YAAd,CAA2BD,KAA3B;;;;;;;;;;;;;;;;;kBAGFE,2CAAgBC,QAAQC,QAAQ;AAC9B,WAAKA,MAAL,GAAcA,MAAd;AACAD,aAAOE,KAAP,GAAe,4BAAf;AACAF,aAAOG,GAAP,CAAW,CACT;AACEC,eAAO,CAAC,EAAD,EAAK,cAAL,CADT,EAC+BC,UAAU,uBADzC;AAEEC,cAAM,cAFR,EAEwBJ,OAAO,eAF/B,EAEgDK,KAAK;AAFrD,OADS,EAMT;AACEH,eAAO,UADT,EACqBC,UAAU,iBAD/B;AAEEC,cAAM,UAFR,EAEoBJ,OAAO,WAF3B,EAEwCK,KAAK;AAF7C,OANS,EAWT;AACEH,eAAO,cADT,EACyBC,UAAU,qBADnC;AAEEC,cAAM,cAFR,EAEwBJ,OAAO,eAF/B,EAEgDK,KAAK;AAFrD,OAXS,EAgBT;AACEH,eAAO,YADT,EACuBC,UAAU,uBADjC;AAEEC,cAAM,YAFR,EAEsBJ,OAAO,YAF7B,EAE2CK,KAAK;AAFhD,OAhBS,EAqBT;AACEH,eAAO,SADT,EACoBC,UAAU,iBAD9B;AAEEC,cAAM,SAFR,EAEmBJ,OAAO,SAF1B,EAEqCK,KAAK;AAF1C,OArBS,EA0BT;AACEH,eAAO,UADT,EACqBC,UAAU,mCAD/B;AAEEC,cAAM,UAFR,EAEoBJ,OAAO,WAF3B,EAEwCK,KAAK;AAF7C,OA1BS,CAAX;AA+BD;;;;;;;;;;;oBCxDY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCECC,YAAAA;;;;;;;;;;AAAT,WAASA,SAAT,CAAmBC,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYN,KAAhB,EAAuB;AACrBG,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYN,OAAhB,EAAyB;AACvBE,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;QCZWC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAKCC,uBAAAA,uBADZ;AAIG,8BAAYpB,MAAZ,EAAoBqB,IAApB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,gBAA7C,EAA+D;AAAA;;AAAA,iBAF/DC,kBAE+D,GAF1C,EAE0C;;AAC3D,iBAAKF,MAAL,GAAcA,MAAd;AACA,iBAAKvB,MAAL,GAAcA,MAAd;AACA,iBAAKqB,IAAL,GAAYA,IAAZ;AACA,iBAAKC,SAAL,GAAiBA,SAAjB;AACA,iBAAKE,gBAAL,GAAwBA,gBAAxB;AACH;;+BAEDE,yBAAOC,QAAQ;AACXA,mBAAOC,WAAP,GAAqB,CAACD,OAAOC,WAA7B;AACAD,mBAAOD,MAAP,GAAgBC,OAAOC,WAAP,GAAqB,MAArB,GAA8B,QAA9C;AACAC,oBAAQC,GAAR,CAAYH,MAAZ;AACH;;+BAEDI,qCAAc;AACV,iBAAKV,IAAL,CAAUW,kBAAV,CAA6BD,WAA7B,GAA2C,CAAC,KAAKV,IAAL,CAAUW,kBAAV,CAA6BD,WAAzE;AACH;;+BAIDE,iCAAWN,QAAQ;AACf,gBAAIO,QAAQP,OAAOO,KAAnB;AACA,gBAAGA,SAAS,eAAZ,EAA6B;AACzB,oBAAIC,OAAO,IAAX;AACA,qBAAKV,kBAAL,GAA0B,EAA1B;AACA,oBAAIW,uBAAuB,KAAKd,SAAL,CAAee,gBAAf,CAAgCC,GAAhC,CAAoCJ,KAApC,EAA2CK,KAA3C,CAAiD,GAAjD,CAA3B;AACAH,qCAAqBI,OAArB,CAA6B,UAAU9C,IAAV,EAAgB;AACzC,wBAAI+C,oBAAoB/C,KAAK6C,KAAL,CAAW,GAAX,CAAxB;AACAJ,yBAAKV,kBAAL,CAAwBiB,IAAxB,CAA6BD,kBAAkB,CAAlB,CAA7B;AACH,iBAHD;AAIA,qBAAKhB,kBAAL,CAAwBkB,GAAxB;AACH,aATD,MAUKhB,OAAOiB,MAAP,GAAgB,eAAhB;AACR;;+BAGDC,mDAAoBlB,QAAQ;AACxB,gBAAGA,OAAOiB,MAAP,IAAiB,eAApB,EAAqC;AACjC,oBAAIT,OAAO,IAAX;AACA,oBAAID,QAAQP,OAAOO,KAAnB;AACA,oBAAIE,uBAAuB,KAAKd,SAAL,CAAee,gBAAf,CAAgCC,GAAhC,CAAoCJ,KAApC,EAA2CK,KAA3C,CAAiD,GAAjD,CAA3B;AACAH,qCAAqBI,OAArB,CAA6B,UAAU9C,IAAV,EAAgB;AACzC,wBAAI+C,oBAAoB/C,KAAK6C,KAAL,CAAW,GAAX,CAAxB;;AAEA,wBAAIO,iBAAkBnB,OAAOC,WAAP,GAAqBa,kBAAkB,CAAlB,CAArB,GAA4CA,kBAAkB,CAAlB,CAAlE;;AAEA,wBAAGA,kBAAkB,CAAlB,EAAqBM,OAArB,CAA6BpB,OAAOiB,MAApC,KAA+C,CAAC,CAAnD,EAAsD;AAClDjB,+BAAOmB,cAAP,GAAyBnB,OAAOC,WAAP,GAAqBa,kBAAkB,CAAlB,CAArB,GAA4CA,kBAAkB,CAAlB,CAArE;AACH;AACJ,iBARD;AASH;AACJ;;+BAGDO,+BAAW;AACP,iBAAKhD,MAAL,CAAYiD,QAAZ,CAAqB,YAArB;AACH;;+BAEDC,uCAAe;AACX,iBAAKlD,MAAL,CAAYiD,QAAZ,CAAqB,gBAArB;AACH;;+BAEDE,mCAAa;AACT,iBAAKnD,MAAL,CAAYiD,QAAZ,CAAqB,cAArB;AACH;;+BAEKG;;;;;;;uCAEI,KAAK5B,gBAAL,CAAsB6B,gBAAtB,CAAuC,KAAKhC,IAAL,CAAUW,kBAAjD;;;AACN,qCAAKR,gBAAL,CAAsB8B,qBAAtB,CAA4C,KAAKjC,IAAL,CAAUW,kBAAtD,EAA0E,KAAKX,IAAL,CAAUkC,aAApF;;AAEA1B,wCAAQC,GAAR,CAAY,cAAZ;AACAD,wCAAQC,GAAR,CAAY,KAAKT,IAAL,CAAUW,kBAAtB;AACAH,wCAAQC,GAAR,CAAY,KAAKT,IAAL,CAAUkC,aAAtB;;qCAEG,KAAKlC,IAAL,CAAUW,kBAAV,CAA6BD;;;;;;uCACtB,KAAKP,gBAAL,CAAsB6B,gBAAtB,CAAuC,KAAKhC,IAAL,CAAUmC,kBAAjD;;;AACN,qCAAKhC,gBAAL,CAAsB8B,qBAAtB,CAA4C,KAAKjC,IAAL,CAAUmC,kBAAtD,EAA0E,KAAKnC,IAAL,CAAUoC,aAApF;;;;AAGJ5B,wCAAQC,GAAR,CAAY,cAAZ;AACAD,wCAAQC,GAAR,CAAY,KAAKT,IAAL,CAAUmC,kBAAtB;AACA3B,wCAAQC,GAAR,CAAY,KAAKT,IAAL,CAAUoC,aAAtB;AACA,qCAAKzD,MAAL,CAAYiD,QAAZ,CAAqB,WAArB;;;;;;;;;;;;;;;;;+BAGJS,+BAAW;AACP,iBAAKnC,MAAL,CAAYoC,eAAZ;AACH;;;;;;;;;;;;;;;;;;;;;QC7FQT,uBAAAA,uBADZ;AAEG,8BAAYlD,MAAZ,EAAoBqB,IAApB,EAA0BuC,qBAA1B,EAAiDrC,MAAjD,EAAyD;AAAA;;AACrD,iBAAKvB,MAAL,GAAcA,MAAd;AACA,iBAAKqB,IAAL,GAAYA,IAAZ;AACA,iBAAKuC,qBAAL,GAA6BA,qBAA7B;AACA,iBAAKrC,MAAL,GAAcA,MAAd;AACH;;+BAGDsC,uCAAe;AACX,iBAAKxC,IAAL,CAAUyC,kBAAV,CAA6BC,iBAA7B,GAAiD,CAAC,KAAK1C,IAAL,CAAUyC,kBAAV,CAA6BC,iBAA/E;AACH;;+BAEDC,mDAAqB;AACjB,iBAAK3C,IAAL,CAAU4C,kBAAV,CAA6BF,iBAA7B,GAAiD,CAAC,KAAK1C,IAAL,CAAU4C,kBAAV,CAA6BF,iBAA/E;AACH;;+BAGDG,2BAAS;AACL,iBAAK7C,IAAL,CAAUyC,kBAAV,CAA6BK,WAA7B,GAA2C,CAAC,KAAK9C,IAAL,CAAUyC,kBAAV,CAA6BK,WAAzE;AACH;;+BAEDC,uCAAe;AACX,iBAAK/C,IAAL,CAAU4C,kBAAV,CAA6BE,WAA7B,GAA2C,CAAC,KAAK9C,IAAL,CAAU4C,kBAAV,CAA6BE,WAAzE;AACH;;+BAGDE,uCAAe;AACX,iBAAKhD,IAAL,CAAUyC,kBAAV,CAA6BQ,iBAA7B,GAAiD,CAAC,KAAKjD,IAAL,CAAUyC,kBAAV,CAA6BQ,iBAA/E;AACH;;+BAEDC,mDAAqB;AACjB,iBAAKlD,IAAL,CAAU4C,kBAAV,CAA6BK,iBAA7B,GAAiD,CAAC,KAAKjD,IAAL,CAAU4C,kBAAV,CAA6BK,iBAA/E;AACH;;+BAGDE,+BAAW;AACP,iBAAKnD,IAAL,CAAUyC,kBAAV,CAA6BW,aAA7B,GAA6C,CAAC,KAAKpD,IAAL,CAAUyC,kBAAV,CAA6BW,aAA3E;AACH;;+BAEDC,2CAAiB;AACb,iBAAKrD,IAAL,CAAU4C,kBAAV,CAA6BQ,aAA7B,GAA6C,CAAC,KAAKpD,IAAL,CAAU4C,kBAAV,CAA6BQ,aAA3E;AACH;;+BAIDE,uBAAO;AACH,iBAAK3E,MAAL,CAAYiD,QAAZ,CAAqB,gBAArB;AACH;;+BAEDG,2BAAS;AACL,iBAAKpD,MAAL,CAAYiD,QAAZ,CAAqB,gBAArB;AACH;;+BAEDS,+BAAW;AACP,iBAAKnC,MAAL,CAAYqD,0BAAZ;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCtDQ5B,mBAAAA,mBADZ;AAMG,0BAAYhD,MAAZ,EAAoBqB,IAApB,EAA0BwD,iBAA1B,EAA6C;AAAA;;AAAA,iBAJ7CC,WAI6C,GAJ/B,EAI+B;AAAA,iBAH7CC,WAG6C,GAH/B,KAG+B;AAAA,iBAF7CC,iBAE6C,GAFzB,KAEyB;;AACzC,iBAAKH,iBAAL,GAAyBA,iBAAzB;AACA,iBAAK7E,MAAL,GAAcA,MAAd;AACA,iBAAKqB,IAAL,GAAYA,IAAZ;AACH;;2BAED4D,qCAAc;AACV,gBAAIC,QAAQ,4BAA4BC,IAA5B,CAAiC,KAAK9D,IAAL,CAAU+D,cAAV,CAAyBC,MAA1D,CAAZ;AACA,iBAAKN,WAAL,GAAmB,CAACG,KAApB;AACA,iBAAKJ,WAAL,GAAmBI,QAAQ,EAAR,GAAa,WAAhC;AACA,gBAAGA,KAAH,EAAU;AACN,oBAAII,gBAAgB,KAAKjE,IAAL,CAAU+D,cAAV,CAAyBC,MAAzB,CAAgC9C,KAAhC,CAAsC,GAAtC,CAApB;AACA,qBAAKlB,IAAL,CAAU+D,cAAV,CAAyBG,cAAzB,GAA0CC,SAASF,cAAc,CAAd,CAAT,IAA6B,EAA7B,GAAkCE,SAASF,cAAc,CAAd,CAAT,CAA5E;AACH;AACDzD,oBAAQC,GAAR,CAAY,KAAKT,IAAL,CAAU+D,cAAV,CAAyBG,cAArC;AACH;;2BAEDE,iDAAoB;AAEhB5D,oBAAQC,GAAR,CAAY,KAAKT,IAAL,CAAUqE,cAAV,CAAyBL,MAArC;AACA,gBAAIH,QAAQ,4BAA4BC,IAA5B,CAAiC,KAAK9D,IAAL,CAAUqE,cAAV,CAAyBL,MAA1D,CAAZ;AACA,iBAAKL,iBAAL,GAAyB,CAACE,KAA1B;AACA,iBAAKS,iBAAL,GAAyBT,QAAQ,EAAR,GAAa,WAAtC;AACA,gBAAGA,KAAH,EAAU;AACN,oBAAII,gBAAgB,KAAKjE,IAAL,CAAUqE,cAAV,CAAyBL,MAAzB,CAAgC9C,KAAhC,CAAsC,GAAtC,CAApB;AACA,qBAAKlB,IAAL,CAAUqE,cAAV,CAAyBH,cAAzB,GAA0CC,SAASF,cAAc,CAAd,CAAT,IAA6B,EAA7B,GAAkCE,SAASF,cAAc,CAAd,CAAT,CAA5E;AACH;AACDzD,oBAAQC,GAAR,CAAY,KAAKT,IAAL,CAAUqE,cAAV,CAAyBH,cAArC;AACH;;2BAEDK,6BAAU;AACN,iBAAKvE,IAAL,CAAU+D,cAAV,CAAyBS,YAAzB,GAAwC,CAAC,KAAKxE,IAAL,CAAU+D,cAAV,CAAyBS,YAAlE;AACH;;2BAEDC,yCAAgB;AACZ,iBAAKzE,IAAL,CAAUqE,cAAV,CAAyBG,YAAzB,GAAwC,CAAC,KAAKxE,IAAL,CAAUqE,cAAV,CAAyBG,YAAlE;AACH;;2BAEDlB,uBAAO;AACH9C,oBAAQC,GAAR,CAAY,KAAKT,IAAL,CAAU+D,cAAtB;AACA,iBAAKpF,MAAL,CAAYiD,QAAZ,CAAqB,gBAArB;AACH;;2BAEDG,2BAAS;AACL,iBAAKyB,iBAAL,CAAuBkB,YAAvB;AACA,iBAAKlB,iBAAL,CAAuBmB,iBAAvB;AACAnE,oBAAQC,GAAR,CAAY,KAAKT,IAAL,CAAU+D,cAAtB;AACA,iBAAKpF,MAAL,CAAYiD,QAAZ,CAAqB,gBAArB;AACH;;2BAEDS,+BAAW;AAEP,kCAAE,iBAAF,EAAqBuC,OAArB,CAA8B;AAC1BC,yBAAS;AADiB,aAA9B;;AAIA,kCAAE,iBAAF,EAAqBD,OAArB,CAA8B;AAC1BC,yBAAS;AADiB,aAA9B;;AAIA,kCAAE,mBAAF,EAAuBD,OAAvB,CAAgC;AAC5BC,yBAAS;AADmB,aAAhC;;AAIA,kCAAE,wBAAF,EAA4BD,OAA5B,CAAqC;AACjCC,yBAAS;AADwB,aAArC;;AAIA,kCAAE,wBAAF,EAA4BD,OAA5B,CAAqC;AACjCC,yBAAS;AADwB,aAArC;;AAIA,kCAAE,0BAAF,EAA8BD,OAA9B,CAAuC;AACnCC,yBAAS;AAD0B,aAAvC;AAGH;;;;;;;;;;;;;;;;;;;;;QCnFQ/C,qBAAAA,qBADZ;AAEG,4BAAYnD,MAAZ,EAAoBqB,IAApB,EAA0B8E,mBAA1B,EAA+C;AAAA;;AAC3C,iBAAKnG,MAAL,GAAcA,MAAd;AACA,iBAAKqB,IAAL,GAAYA,IAAZ;AACA,iBAAK8E,mBAAL,GAA2BA,mBAA3B;AACH;;6BAGDC,iCAAY;AACR,iBAAK/E,IAAL,CAAUgF,gBAAV,CAA2BC,cAA3B,GAA4C,CAAC,KAAKjF,IAAL,CAAUgF,gBAAV,CAA2BC,cAAxE;AACH;;6BAEDC,6CAAkB;AACd,iBAAKlF,IAAL,CAAUmF,gBAAV,CAA2BF,cAA3B,GAA4C,CAAC,KAAKjF,IAAL,CAAUmF,gBAAV,CAA2BF,cAAxE;AACH;;6BAGDG,uCAAe;AACX,iBAAKpF,IAAL,CAAUgF,gBAAV,CAA2BK,iBAA3B,GAA+C,CAAC,KAAKrF,IAAL,CAAUgF,gBAAV,CAA2BK,iBAA3E;AACH;;6BAEDC,mDAAqB;AACjB,iBAAKtF,IAAL,CAAUmF,gBAAV,CAA2BE,iBAA3B,GAA+C,CAAC,KAAKrF,IAAL,CAAUmF,gBAAV,CAA2BE,iBAA3E;AACH;;6BAGDE,qDAAsB;AAClB,iBAAKvF,IAAL,CAAUgF,gBAAV,CAA2BQ,wBAA3B,GAAsD,CAAC,KAAKxF,IAAL,CAAUgF,gBAAV,CAA2BQ,wBAAlF;AACH;;6BAEDC,iEAA4B;AACxB,iBAAKzF,IAAL,CAAUmF,gBAAV,CAA2BK,wBAA3B,GAAsD,CAAC,KAAKxF,IAAL,CAAUmF,gBAAV,CAA2BK,wBAAlF;AACH;;6BAIDlC,uBAAO;AACH,iBAAK3E,MAAL,CAAYiD,QAAZ,CAAqB,gBAArB;AACH;;6BAEDG,2BAAS;AACL,iBAAKpD,MAAL,CAAYiD,QAAZ,CAAqB,gBAArB;AACH;;;;;;;;;;;UChDWxC,YAAAA;AAAT,WAASA,SAAT,CAAmBV,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;QCKYgH,kBAAAA,kBADZ;AAEG,yBAAY/G,MAAZ,EAAoBqB,IAApB,EAA0B2F,KAA1B,EAAiCxF,gBAAjC,EAAmD;AAAA;;AAC/C,iBAAKxB,MAAL,GAAcA,MAAd;AACA,iBAAKqB,IAAL,GAAYA,IAAZ;AACA,iBAAK2F,KAAL,GAAaA,KAAb;AACA,iBAAKxF,gBAAL,GAAwBA,gBAAxB;AACH;;0BAEDkC,+BAAW;AACP,iBAAKsD,KAAL,CAAWC,WAAX,CAAuB,iBAAvB;AACH;;0BAEDtC,uBAAO;AACH,iBAAK3E,MAAL,CAAYiD,QAAZ,CAAqB,gBAArB;AACH;;;;;;;;;;;;;;;;;;QCrBQiE,2BAAAA,mBACT,4BAAc;AAAA;;AACV,aAAKC,oBAAL,GAA4B,EAA5B;AACA,aAAKpD,iBAAL,GAAyB,KAAzB;AACA,aAAKI,WAAL,GAAmB,KAAnB;AACA,aAAKG,iBAAL,GAAyB,KAAzB;AACA,aAAKG,aAAL,GAAqB,KAArB;AAEH;;;;;;;;;;;;;;;YCRQ2C,uBAAAA,eACT,wBAAc;AAAA;;AACV,qBAAK/B,MAAL;AACA,qBAAKE,cAAL;AACA,qBAAK8B,MAAL;AACA,qBAAKC,GAAL;;AAEA,qBAAKC,eAAL;AACA,qBAAKC,YAAL;AACA,qBAAKC,UAAL;;AAEA,qBAAKC,cAAL;AACA,qBAAK7B,YAAL;;AAEA,qBAAK8B,sBAAL;AACH;;;;;;;;;;;;;;;QCfQC,yBAAAA,iBACT,0BAAc;AAAA;;AACV,aAAKtB,cAAL,GAAsB,KAAtB;AACA,aAAKI,iBAAL,GAAyB,KAAzB;AACA,aAAKG,wBAAL,GAAgC,KAAhC;AACH;;;;;;;;;;;;;;;;;;QCFQgB,2BAAAA,2BADZ,kDAEG,4BAAc;AAAA;;AACV,aAAK9F,WAAL,GAAmB,KAAnB;;AAEA,aAAK+F,GAAL,GAAW,EAAX;AACA,aAAKlG,WAAL,GAAmB,IAAnB;AACA,aAAKF,MAAL,GAAc,MAAd;AACA,aAAKqG,IAAL,GAAY,OAAZ;AACA,aAAKC,aAAL;;AAEA,aAAK9F,KAAL,GAAa,eAAb;AACA,aAAKU,MAAL,GAAc,eAAd;AACA,aAAKqF,oBAAL;AACA,aAAKC,iBAAL;AACA,aAAKC,UAAL,GAAkB,EAAlB;;AAEA,aAAKC,uBAAL;AACH;;;;;;;;;;;;;;;;;;QCjBQC,sBAAAA,sBADZ,kDAEG,uBAAc;AAAA;;AACV,aAAKC,qBAAL;AACH;;;;;;;;;;;;;;;QCNQC,oBAAAA;;;aACTC,WAAW,IAAIC,GAAJ;aACXpG,mBAAmB,IAAIqG,GAAJ;;;;;;;;;;;;;;;;;;;YCMVC,eAAAA,eADZ,kDAEG,gBAAc;AAAA;;AACV,qBAAK3G,kBAAL,GAA0B,wCAA1B;AACA,qBAAKwB,kBAAL,GAA0B,wCAA1B;;AAEA,qBAAK4B,cAAL,GAAsB,gCAAtB;AACA,qBAAKM,cAAL,GAAsB,gCAAtB;;AAEA,qBAAK5B,kBAAL,GAA0B,wCAA1B;AACA,qBAAKG,kBAAL,GAA0B,wCAA1B;;AAEA,qBAAKoC,gBAAL,GAAwB,oCAAxB;AACA,qBAAKG,gBAAL,GAAwB,oCAAxB;;AAEA,qBAAKjD,aAAL,GAAqB,8BAArB;AACA,qBAAKE,aAAL,GAAqB,8BAArB;AACH;;;;;;;;;;;;;;;;;;QCpBQmF,gCAAAA,gCADZ,yDAEG,+BAAYvH,IAAZ,EAAkB;AAAA;;AACd,aAAKA,IAAL,GAAYA,IAAZ;AACH;;;;;;;;;;;;;;;;;;QCHQwH,4BAAAA,4BADZ;AAEG,mCAAYxH,IAAZ,EAAkB;AAAA;;AACd,iBAAKA,IAAL,GAAYA,IAAZ;AACH;;oCAGD0E,uCAAe;AACX,gBAAI+C,eAAe,KAAKzH,IAAL,CAAU+D,cAAV,CAAyBiC,MAAzB,GAAkC,IAArD;AACA,gBAAI0B,eAAe,KAAK1H,IAAL,CAAU+D,cAAV,CAAyBG,cAAzB,GAA0C,KAA7D;AACA,gBAAIyD,sBAAsBD,eAAeA,YAAzC;AACA,iBAAK1H,IAAL,CAAU+D,cAAV,CAAyBkC,GAAzB,GAA+BwB,eAAeE,mBAA9C;AACH;;oCAGDhD,iDAAoB;AAChB,gBAAIuB,kBAAkB,KAAKlG,IAAL,CAAU+D,cAAV,CAAyBmC,eAA/C;AACA,gBAAGA,gBAAgBxE,OAAhB,CAAwB,MAAxB,MAAoC,CAAC,CAAxC,EAA2C;AACvC,qBAAK1B,IAAL,CAAU+D,cAAV,CAAyBuC,sBAAzB,GAAkD,GAAlD;AACH,aAFD,MAGK,IAAGJ,gBAAgBxE,OAAhB,CAAwB,eAAxB,MAA6C,CAAC,CAAjD,EAAoD;AACrD,qBAAK1B,IAAL,CAAU+D,cAAV,CAAyBuC,sBAAzB,GAAkD,GAAlD;AACH,aAFI,MAGA,IAAGJ,gBAAgBxE,OAAhB,CAAwB,MAAxB,MAAoC,CAAC,CAAxC,EAA2C;AAC5C,qBAAK1B,IAAL,CAAU+D,cAAV,CAAyBuC,sBAAzB,GAAkD,GAAlD;AACH,aAFI,MAGA;AACD,qBAAKtG,IAAL,CAAU+D,cAAV,CAAyBuC,sBAAzB,GAAkD,CAAlD;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;QC5BQsB,8BAAAA,8BADZ,yDAEG,6BAAY5H,IAAZ,EAAkB;AAAA;;AACd,aAAKA,IAAL,GAAYA,IAAZ;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCFQ6H,2BAAAA,2BADZ;AAIG,kCAAY7J,UAAZ,EAAwBgC,IAAxB,EAA8B;AAAA;;AAC1B,iBAAKhC,UAAL,GAAkBA,UAAlB;AACA,iBAAKgC,IAAL,GAAYA,IAAZ;AACH;;mCAGKgC;kFAAiB1B;;;;;;;uCACF,KAAKtC,UAAL,CAAgBI,KAAhB,CAAsB,qBAAqBkC,OAAOoG,IAAP,CAAYoB,WAAZ,EAArB,GAAiD,GAAjD,GAAuDxH,OAAOD,MAAP,CAAcyH,WAAd,EAAvD,GAAqF,OAA3G;;;AAAbzJ;;uCACcA,KAAKC,IAAL;;;AAAdC;;AACJ,qCAAKwJ,kBAAL,CAAwBxJ,KAAxB,EAA+B+B,MAA/B;AACA,qCAAK0H,aAAL,CAAmBzJ,KAAnB,EAA0B+B,MAA1B;;;;;;;;;;;;;;;;;mCAIJyH,iDAAmB1J,MAAMiC,QAAQ;AAC7BjC,iBAAK8C,OAAL,CAAa,UAAS8G,KAAT,EAAgB;AAEzB,oBAAIC,kBAAkB,EAAtB;AACAA,gCAAgB,CAAhB,IAAqB/D,SAAS8D,MAAME,GAAN,CAAUC,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAAT,CAArB;AACAF,gCAAgB,CAAhB,IAAqB/D,SAAS8D,MAAME,GAAN,CAAUC,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAAT,CAArB;AACA,oBAAGF,gBAAgB,CAAhB,MAAuB5H,OAAOmG,GAA9B,IAAqCyB,gBAAgB,CAAhB,MAAuB5H,OAAOmG,GAAtE,EAA2E;AACvEnG,2BAAOuG,iBAAP,GAA2B1C,SAAS8D,MAAMI,WAAf,CAA3B;AACA/H,2BAAOyG,uBAAP,GAAiCzG,OAAOuG,iBAAP,GAA2BvG,OAAOmG,GAAnE;AACH;AACJ,aATD;AAUH;;mCAEDxE,uDAAsB3B,QAAQgI,eAAe;AACzC,gBAAIC,eAAejI,OAAOyG,uBAA1B;AACA,gBAAIyB,gBAAgBlI,OAAOgG,sBAA3B;AACAgC,0BAAcrB,qBAAd,GAAsCsB,eAAeC,aAArD;AACH;;mCASDR,uCAAcS,UAAUnI,QAAQ;AAC5B,gBAAIoI,UAAU,EAAd;AACAD,qBAAStH,OAAT,CAAiB,UAAS8G,KAAT,EAAgB;AAC7BS,wBAAQrH,IAAR,CAAa,CAAC4G,MAAME,GAAP,EAAY,IAAIF,MAAMU,WAAtB,CAAb;AACH,aAFD;AAGArI,mBAAOwG,UAAP,GAAoB4B,OAApB;AACH;;;;;;;;;;;;;QCrDOE;;;;;;;;;;;;;;;;;;;;;;;;;;;QAICC,gBAAAA,gBADZ;AAEG,uBAAY7I,IAAZ,EAAkB;AAAA;;AACd,iBAAKA,IAAL,GAAYA,IAAZ;AACH;;wBAED4F,mCAAYkD,aAAa;AAErBC,uBAAWpD,KAAX,CAAiBmD,WAAjB,EAA8B;AACtBlK,uBAAO;AACHoK,0BAAM;AADH,iBADe;AAItBC,uBAAO;AACHrK,2BAAO;AACHoK,8BAAM;AADH;AADJ,iBAJe;AAStBE,6BAAa;AACTC,4BAAQ;AACJC,oCAAY,KAAKpJ,IAAL,CAAUW,kBAAV,CAA6B8F;AADrC;AADC,iBATS;AActB4C,uBAAO;AACHzK,2BAAO;AACHoK,8BAAM;AADH;AADJ,iBAde;AAmBtBG,wBAAQ,CAAC;AACLnK,0BAAM,QADD;AAELX,0BAAO,KAAK2B,IAAL,CAAUW,kBAAV,CAA6BmG;AAF/B,iBAAD,EAGL;AACC9H,0BAAM,WADP;AAECX,0BAAM,KAAK2B,IAAL,CAAUW,kBAAV,CAA6BmG;AAFpC,iBAHK,EAML;AACC9H,0BAAM,SADP;AAECX,0BAAM,KAAK2B,IAAL,CAAUW,kBAAV,CAA6BmG;AAFpC,iBANK;AAnBc,aAA9B;AA8BH;;;;;;;;;;;;;;;;;;;;;QCtCQwC,mBAAAA,mBADZ;AAGG,0BAAYrJ,SAAZ,EAAuB;AAAA;;AACnB,iBAAKA,SAAL,GAAiBA,SAAjB;AACH;;2BAGDzB,qCAAaiK,UAAU;AACnB,gBAAI3H,OAAO,IAAX;AACA2H,qBAAStH,OAAT,CAAiB,UAAUoI,WAAV,EAAuB;AACpCzI,qBAAKb,SAAL,CAAekH,QAAf,CAAwBqC,GAAxB,CAA4BD,YAAYE,KAAZ,CAAkB3B,WAAlB,EAA5B;AACH,aAFD;AAGA,iBAAK4B,aAAL,CAAmBjB,QAAnB;AACH;;2BAGDiB,uCAAcjB,UAAU;AACpB,gBAAI3H,OAAO,IAAX;AACA2H,qBAAStH,OAAT,CAAiB,UAAUoI,WAAV,EAAsB;AACnC,oBAAGzI,KAAKb,SAAL,CAAee,gBAAf,CAAgC2I,GAAhC,CAAoCJ,YAAYE,KAAZ,CAAkB3B,WAAlB,EAApC,CAAH,EAAyE;AAClE,wBAAI8B,iBAAiB9I,KAAKb,SAAL,CAAee,gBAAf,CAAgCC,GAAhC,CAAoCsI,YAAYE,KAAZ,CAAkB3B,WAAlB,EAApC,CAArB;;AAEA8B,sCAAkB,MAAML,YAAYM,MAAZ,CAAmB/B,WAAnB,EAAN,GAAyC,GAAzC,GAA+CyB,YAAYO,IAA3D,GAAkE,GAAlE,GAAwEP,YAAYQ,MAApF,GAA6F,GAA/G;AACAjJ,yBAAKb,SAAL,CAAee,gBAAf,CAAgCgJ,GAAhC,CAAoCT,YAAYE,KAAZ,CAAkB3B,WAAlB,EAApC,EAAqE8B,cAArE;AACN,iBALD,MAMK9I,KAAKb,SAAL,CAAee,gBAAf,CAAgCgJ,GAAhC,CAAoCT,YAAYE,KAAZ,CAAkB3B,WAAlB,EAApC,EAAqEyB,YAAYM,MAAZ,CAAmB/B,WAAnB,KAAmC,GAAnC,GAAyCyB,YAAYO,IAArD,GAA4D,GAA5D,GAAkEP,YAAYQ,MAA9E,GAAuF,GAA5J;AACR,aARD;AASH;;;;;;;;;;;;;QC7BOjK;;;;;;;;;;;;;;;;;;;;;;;;;;;QAGCmK,iBAAAA,iBADZ;AAEG,wBAAYjK,IAAZ,EAAkB;AAAA;;AACd,iBAAKA,IAAL,GAAYA,IAAZ;AACH;;yBAEDsC,6CAAkB;AAAA;;AACd4H,cAAE,MAAF,EAAUpK,cAAV,CAAyB;AACrBqK,sBAAM,IADe;AAErBC,qBAAK,CAFgB;AAGrBC,qBAAK,GAHgB;AAIrBC,sBAAM,EAJe;AAKrBC,sBAAM,CALe;AAMrBC,0BAAU,kBAACnM,IAAD,EAAU;AAChB,0BAAK2B,IAAL,CAAUW,kBAAV,CAA6B8F,GAA7B,GAAmCpI,KAAKiM,IAAxC;AACH;AARoB,aAAzB;;AAWAJ,cAAE,YAAF,EAAgBpK,cAAhB,CAA+B;AAC3BqK,sBAAM,IADqB;AAE3BC,qBAAK,CAFsB;AAG3BC,qBAAK,GAHsB;AAI3BC,sBAAM,EAJqB;AAK3BC,sBAAM,CALqB;AAM3BC,0BAAU,kBAACnM,IAAD,EAAU;AAChB,0BAAK2B,IAAL,CAAUmC,kBAAV,CAA6BsE,GAA7B,GAAmCpI,KAAKiM,IAAxC;AACH;AAR0B,aAA/B;AAUH;;yBAED/G,mEAA6B;AAAA;;AACzB2G,cAAE,uBAAF,EAA2BpK,cAA3B,CAA0C;AACtCqK,sBAAM,IADgC;AAEtCC,qBAAK,CAFiC;AAGtCC,qBAAK,GAHiC;AAItCC,sBAAM,EAJgC;AAKtCC,sBAAM,CALgC;AAMtCC,0BAAU,kBAACnM,IAAD,EAAU;AAChB,2BAAK2B,IAAL,CAAUyC,kBAAV,CAA6BqD,oBAA7B,GAAoDzH,KAAKiM,IAAzD;AACH;AARqC,aAA1C;;AAWAJ,cAAE,6BAAF,EAAiCpK,cAAjC,CAAgD;AAC5CqK,sBAAM,IADsC;AAE5CC,qBAAK,CAFuC;AAG5CC,qBAAK,GAHuC;AAI5CC,sBAAM,EAJsC;AAK5CC,sBAAM,CALsC;AAM5CC,0BAAU,kBAACnM,IAAD,EAAU;AAChB,2BAAK2B,IAAL,CAAU4C,kBAAV,CAA6BkD,oBAA7B,GAAoDzH,KAAKiM,IAAzD;AACH;AAR2C,aAAhD;AAUH","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {ReadFile} from 'utilities/readFile';\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\n@inject(HttpClient, ReadFile)\r\nexport class App {\r\n  httpClient;\r\n\r\n  constructor(httpClient, readFile) {\r\n    this.httpClient = httpClient;\r\n    this.readFile = readFile;\r\n    this.message = 'Life Expectancy Calculator';\r\n  }\r\n\r\n  async activate() {\r\n    let data = await this.httpClient.fetch('/api/life-expectancy/get.json');\r\n    let data2 = await data.json();\r\n    this.readFile.getStateList(data2);\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = \"Life Expectancy Calculator\";\r\n    config.map([\r\n      {\r\n        route: ['', 'personalinfo'], moduleId: 'aboutyou/personalinfo',\r\n        name: 'personalinfo', title: 'Personal Info', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'myhealth', moduleId: 'health/myhealth',\r\n        name: 'myhealth', title: 'My Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'familyhealth', moduleId: 'health/familyhealth',\r\n        name: 'familyhealth', title: 'Family Health', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'occupation', moduleId: 'occupation/occupation',\r\n        name: 'occupation', title: 'Occupation', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'results', moduleId: 'results/results',\r\n        name: 'results', title: 'Results', nav: true\r\n      },\r\n\r\n      {\r\n        route: 'jsonfile', moduleId: 'services/lifeExpectancy.json!json',\r\n        name: 'jsonfile', title: 'Json File', nav: true\r\n      }\r\n    ]);\r\n  }\r\n}\r\n\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {StateData} from '../services/stateData';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\nimport {Slider} from '../utilities/slider';\r\nimport {CalculateResults} from '../utilities/calculateResults';\r\n\r\n@inject(Router, User, StateData, Slider, CalculateResults)\r\nexport class personalinfo {\r\n    currentCountyArray = [];\r\n\r\n    constructor(router, user, stateData, slider, calculateResults) {\r\n        this.slider = slider;\r\n        this.router = router;\r\n        this.user = user;\r\n        this.stateData = stateData;\r\n        this.calculateResults = calculateResults;\r\n    }\r\n\r\n    gender(person) {\r\n        person.checkgender = !person.checkgender;\r\n        person.gender = person.checkgender ? 'Male' : 'Female';\r\n        console.log(person);\r\n    }\r\n\r\n    checkspouse() {\r\n        this.user.clientPersonalInfo.checkspouse = !this.user.clientPersonalInfo.checkspouse;\r\n    }\r\n\r\n    //======================LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n    //This method retrieves all of the counties from the client's current state\r\n    checkState(person) {\r\n        var state = person.state;\r\n        if(state != \"Please Select\") {\r\n            var self = this;\r\n            this.currentCountyArray = [];\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                self.currentCountyArray.push(currentCountyInfo[0]);\r\n            });\r\n            this.currentCountyArray.pop();\r\n        }\r\n        else person.county = \"Please Select\";\r\n    }\r\n\r\n    //This method checks the current client's life expectancy\r\n    checkLifeExpectancy(person) {\r\n        if(person.county != \"Please Select\") {\r\n            var self = this;\r\n            var state = person.state;\r\n            var countyWithLifeArrays = this.stateData.stateToCountyMap.get(state).split(',');\r\n            countyWithLifeArrays.forEach(function (data) {\r\n                var currentCountyInfo = data.split(\":\");\r\n                //Life expectancy of male is index 2, life expectancy of female is index 1\r\n                var lifeExpectancy =  person.checkgender ? currentCountyInfo[2] : currentCountyInfo[1];\r\n                //If county name is found in array, then get life expectancy\r\n                if(currentCountyInfo[0].indexOf(person.county) != -1) {\r\n                    person.lifeExpectancy =  person.checkgender ? currentCountyInfo[1] : currentCountyInfo[2];\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //===================END LIFE EXPECTANCY FROM STATES/COUNTIES==================\r\n\r\n    myhealth() {\r\n        this.router.navigate('#/myhealth');  \r\n    }\r\n\r\n    familyhealth() {\r\n        this.router.navigate('#/familyhealth');  \r\n    }\r\n\r\n    occupation() {\r\n        this.router.navigate('#/occupation');  \r\n    }\r\n\r\n    async submit() {\r\n        //Get life expectancy based on age, gender, and ethnicity\r\n        await this.calculateResults.getLifeTableData(this.user.clientPersonalInfo);\r\n        this.calculateResults.addExerciseExpectancy(this.user.clientPersonalInfo, this.user.clientResults);\r\n        \r\n        console.log(\"===CLIENT===\");\r\n        console.log(this.user.clientPersonalInfo);\r\n        console.log(this.user.clientResults);\r\n\r\n        if(this.user.clientPersonalInfo.checkspouse){\r\n            await this.calculateResults.getLifeTableData(this.user.spousePersonalInfo);\r\n            this.calculateResults.addExerciseExpectancy(this.user.spousePersonalInfo, this.user.spouseResults);\r\n        } \r\n\r\n        console.log(\"===SPOUSE===\");\r\n        console.log(this.user.spousePersonalInfo);\r\n        console.log(this.user.spouseResults);\r\n        this.router.navigate('#/results');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createAgeSlider();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateFamilyHealth} from '../utilities/calculateFamilyHealth';\r\nimport {Slider} from '../utilities/slider';\r\n\r\n@inject(Router, User, CalculateFamilyHealth, Slider)\r\nexport class familyhealth {\r\n    constructor(router, user, calculateFamilyHealth, slider) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateFamilyHealth = calculateFamilyHealth;\r\n        this.slider = slider;\r\n    }\r\n\r\n    //HEART DISEASE\r\n    heartdisease() {\r\n        this.user.clientFamilyHealth.checkHeartDisease = !this.user.clientFamilyHealth.checkHeartDisease;\r\n    }\r\n\r\n    spouseheartdisease() {\r\n        this.user.spouseFamilyHealth.checkHeartDisease = !this.user.spouseFamilyHealth.checkHeartDisease;\r\n    }\r\n\r\n    //CANCER\r\n    cancer() {\r\n        this.user.clientFamilyHealth.checkCancer = !this.user.clientFamilyHealth.checkCancer;\r\n    }\r\n\r\n    spousecancer() {\r\n        this.user.spouseFamilyHealth.checkCancer = !this.user.spouseFamilyHealth.checkCancer;\r\n    }\r\n\r\n    //MENTAL HEALTH\r\n    mentalhealth() {\r\n        this.user.clientFamilyHealth.checkMentalHealth = !this.user.clientFamilyHealth.checkMentalHealth;\r\n    }\r\n\r\n    spousementalhealth() {\r\n        this.user.spouseFamilyHealth.checkMentalHealth = !this.user.spouseFamilyHealth.checkMentalHealth;\r\n    }\r\n\r\n    //DIABETES\r\n    diabetes() {\r\n        this.user.clientFamilyHealth.checkDiabetes = !this.user.clientFamilyHealth.checkDiabetes;\r\n    }\r\n\r\n    spousediabetes() {\r\n        this.user.spouseFamilyHealth.checkDiabetes = !this.user.spouseFamilyHealth.checkDiabetes;\r\n    }\r\n\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    attached() {\r\n        this.slider.createLifeExpectancySlider();\r\n    }\r\n}","import $ from 'jquery';\r\nimport 'jquery-ui-dist';\r\n\r\nimport {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateMyHealth} from '../utilities/calculateMyHealth';\r\n\r\n@inject(Router, User, CalculateMyHealth)\r\nexport class myhealth {\r\n    heightError = \"\";\r\n    validHeight = false;\r\n    validHeightSpouse = false;\r\n\r\n    constructor(router, user, calculateMyHealth) {\r\n        this.calculateMyHealth = calculateMyHealth;\r\n        this.router = router;\r\n        this.user = user;\r\n    }\r\n\r\n    checkHeight() {\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(this.user.clientMyHealth.height);\r\n        this.validHeight = !valid;\r\n        this.heightError = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = this.user.clientMyHealth.height.split(\"'\");\r\n            this.user.clientMyHealth.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        console.log(this.user.clientMyHealth.heightInInches);\r\n    }\r\n\r\n    checkHeightSpouse() {\r\n        //DONT LET CLICK SUBMIT WITHOUT PROPER HEIGHT\r\n        console.log(this.user.spouseMyHealth.height);\r\n        var valid = /^[2-9]' ?(?:\\d|1[0-1])\"?$/.test(this.user.spouseMyHealth.height);\r\n        this.validHeightSpouse = !valid;\r\n        this.heightErrorSpouse = valid ? \"\" : \"has-error\";\r\n        if(valid) {\r\n            var feetAndInches = this.user.spouseMyHealth.height.split(\"'\");\r\n            this.user.spouseMyHealth.heightInInches = parseInt(feetAndInches[0]) * 12 + parseInt(feetAndInches[1]);\r\n        }\r\n        console.log(this.user.spouseMyHealth.heightInInches);\r\n    }\r\n\r\n    smoking() {\r\n        this.user.clientMyHealth.checksmoking = !this.user.clientMyHealth.checksmoking;\r\n    }\r\n\r\n    smokingSpouse() {\r\n        this.user.spouseMyHealth.checksmoking = !this.user.spouseMyHealth.checksmoking;\r\n    }\r\n\r\n    back() {\r\n        console.log(this.user.clientMyHealth);\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.calculateMyHealth.calculateBMI();\r\n        this.calculateMyHealth.calculateExercise();\r\n        console.log(this.user.clientMyHealth);\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    attached() {\r\n        //=====================MY HEALTH TOOLTIPS============================\r\n        $('#height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n\r\n        $('#spouse-height-tooltip').tooltip( {\r\n            content: \"Your height is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#spouse-weight-tooltip').tooltip( {\r\n            content: \"Your weight is used to calculate your BMI (Body Mass Index).\"\r\n        });\r\n\r\n        $('#spouse-exercise-tooltip').tooltip( {\r\n            content: \"For every 1 minute of exercise you get 7 minutes of extra life.<br><b>- National Institute of Health</b>\"\r\n        });\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {CalculateOccupation} from '../utilities/calculateOccupation';\r\n\r\n@inject(Router, User, CalculateOccupation)\r\nexport class occupation {\r\n    constructor(router, user, calculateOccupation) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.calculateOccupation = calculateOccupation;\r\n    }\r\n\r\n    //EDUCATION\r\n    education() {\r\n        this.user.clientOccupation.checkEducation = !this.user.clientOccupation.checkEducation;\r\n    }\r\n\r\n    spouseeducation() {\r\n        this.user.spouseOccupation.checkEducation = !this.user.spouseOccupation.checkEducation;\r\n    }\r\n\r\n    //CONSTRUCTION\r\n    construction() {\r\n        this.user.clientOccupation.checkConstruction = !this.user.clientOccupation.checkConstruction;\r\n    }\r\n\r\n    spouseconstruction() {\r\n        this.user.spouseOccupation.checkConstruction = !this.user.spouseOccupation.checkConstruction;\r\n    }\r\n\r\n    //EMERGENCY RESPONDING\r\n    emergencyResponding() {\r\n        this.user.clientOccupation.checkEmergencyResponding = !this.user.clientOccupation.checkEmergencyResponding;\r\n    }\r\n\r\n    spouseemergencyResponding() {\r\n        this.user.spouseOccupation.checkEmergencyResponding = !this.user.spouseOccupation.checkEmergencyResponding;\r\n    }\r\n\r\n\r\n    //BUTTONS\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n\r\n    submit() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {User} from '../services/user';\r\nimport {Chart} from '../utilities/chart';\r\nimport {CalculateResults} from '../utilities/calculateResults';\r\n\r\n@inject(Router, User, Chart, CalculateResults)\r\nexport class results {\r\n    constructor(router, user, chart, calculateResults) {\r\n        this.router = router;\r\n        this.user = user;\r\n        this.chart = chart;\r\n        this.calculateResults = calculateResults;\r\n    }\r\n\r\n    attached() {\r\n        this.chart.createChart('chart-container');\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate('#/personalinfo');  \r\n    }\r\n}","export class FamilyHealthData {\r\n    constructor() {\r\n        this.familyLifeExpectancy = 70;\r\n        this.checkHeartDisease = false;\r\n        this.checkCancer = false;\r\n        this.checkMentalHealth = false;\r\n        this.checkDiabetes = false;\r\n        \r\n    }\r\n}","export class MyHealthData {\r\n    constructor() {\r\n        this.height;\r\n        this.heightInInches;\r\n        this.weight;\r\n        this.bmi;\r\n\r\n        this.exercisePerWeek;\r\n        this.sleepPerWeek;\r\n        this.healthRank;\r\n\r\n        this.alcoholPerWeek;\r\n        this.checksmoking;\r\n\r\n        this.exerciseLifeExpectancy;\r\n    }\r\n}","export class OccupationData {\r\n    constructor() {\r\n        this.checkEducation = false;\r\n        this.checkConstruction = false;\r\n        this.checkEmergencyResponding = false;\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class PersonalInfoData {\r\n    constructor() {\r\n        this.checkspouse = false;\r\n        \r\n        this.age = 30;\r\n        this.checkgender = true;\r\n        this.gender = 'male';\r\n        this.race = 'white';\r\n        this.maritalStatus;\r\n\r\n        this.state = \"Please Select\";\r\n        this.county = 'Please Select';\r\n        this.countyLifeExpectancy;\r\n        this.expectedYearsLeft;\r\n        this.testTuples = [];\r\n\r\n        this.ethnicityLifeExpectancy;\r\n    }\r\n}","import {transient} from 'aurelia-framework';\r\n\r\n@transient()\r\nexport class ResultsData {\r\n    constructor() {\r\n        this.overallLifeExpectancy;\r\n    }\r\n}","export class StateData {\r\n    stateSet = new Set();\r\n    stateToCountyMap = new Map();\r\n}","import {singleton} from 'aurelia-framework';\r\nimport {PersonalInfoData} from '../services/personalInfoData';\r\nimport {MyHealthData} from '../services/myHealthData';\r\nimport {FamilyHealthData} from '../services/familyHealthData';\r\nimport {OccupationData} from '../services/occupationData';\r\nimport {ResultsData} from '../services/resultsData';\r\n\r\n@singleton()\r\nexport class User {\r\n    constructor() {\r\n        this.clientPersonalInfo = new PersonalInfoData();\r\n        this.spousePersonalInfo = new PersonalInfoData();\r\n        \r\n        this.clientMyHealth = new MyHealthData();\r\n        this.spouseMyHealth = new MyHealthData();\r\n\r\n        this.clientFamilyHealth = new FamilyHealthData();\r\n        this.spouseFamilyHealth = new FamilyHealthData();\r\n\r\n        this.clientOccupation = new OccupationData();\r\n        this.spouseOccupation = new OccupationData();\r\n\r\n        this.clientResults = new ResultsData();\r\n        this.spouseResults = new ResultsData();\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateFamilyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateMyHealth {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    //this calculates the body mass index(if you're wondering, tweet me @JesseCochran1)\r\n    calculateBMI() {\r\n        var metricWeight = this.user.clientMyHealth.weight * 0.45;\r\n        var metricHeight = this.user.clientMyHealth.heightInInches * 0.025;\r\n        var metricHeightSquared = metricHeight * metricHeight;\r\n        this.user.clientMyHealth.bmi = metricWeight / metricHeightSquared;\r\n    }\r\n\r\n    //this calculates added/decreased life expectancy based on how many hours of exercise per week\r\n    calculateExercise() {\r\n        var exercisePerWeek = this.user.clientMyHealth.exercisePerWeek;\r\n        if(exercisePerWeek.indexOf(\"Less\") !== -1) {\r\n            this.user.clientMyHealth.exerciseLifeExpectancy = 1.8;\r\n        }\r\n        else if(exercisePerWeek.indexOf(\"Approximately\") !== -1) {\r\n            this.user.clientMyHealth.exerciseLifeExpectancy = 3.4;\r\n        }\r\n        else if(exercisePerWeek.indexOf(\"More\") !== -1) {\r\n            this.user.clientMyHealth.exerciseLifeExpectancy = 4.5;\r\n        }\r\n        else {\r\n            this.user.clientMyHealth.exerciseLifeExpectancy = 0;\r\n        }\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class CalculateOccupation {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {User} from '../services/user';\r\n\r\n@inject(HttpClient, User)\r\nexport class CalculateResults {\r\n    httpClient;\r\n\r\n    constructor(httpClient, user) {\r\n        this.httpClient = httpClient;\r\n        this.user = user;\r\n    }\r\n\r\n    //Gets the life table based on the users race and gender\r\n    async getLifeTableData(person) {\r\n        let data = await this.httpClient.fetch('/api/life-table/' + person.race.toLowerCase() + '-' + person.gender.toLowerCase() + '.json');\r\n        let data2 = await data.json();\r\n        this.setUserExpectedAge(data2, person);\r\n        this.getTestTuples(data2, person);\r\n    }\r\n\r\n    //Iterates through the json object to determine the user's expected age\r\n    setUserExpectedAge(data, person) {\r\n        data.forEach(function(value) {\r\n            //If the user is currently the age in the json object, then the current age is set\r\n            var currentAgeArray = [];\r\n            currentAgeArray[0] = parseInt(value.Age.slice(0, 2));\r\n            currentAgeArray[1] = parseInt(value.Age.slice(3, 5));\r\n            if(currentAgeArray[0] === person.age || currentAgeArray[1] === person.age) {\r\n                person.expectedYearsLeft = parseInt(value.ExpectedAge);\r\n                person.ethnicityLifeExpectancy = person.expectedYearsLeft + person.age;\r\n            }\r\n        });\r\n    }\r\n\r\n    addExerciseExpectancy(person, personResults) {\r\n        var expectedLife = person.ethnicityLifeExpectancy;\r\n        var addedExercise = person.exerciseLifeExpectancy;\r\n        personResults.overallLifeExpectancy = expectedLife + addedExercise;\r\n    }\r\n\r\n    //Averages the life expectancy from the life table and life expectancy county table\r\n    // averageLifeExpectancy(person) {\r\n    //     var averagedLifeExpectancy = ((person.expectedYearsLeft + person.age) + person.ethnicityLifeExpectancy ) / 2;\r\n    //     TODO: Set this variable to new life expectancy if we decide to in future\r\n    //}\r\n    \r\n    //Gets test tuples for chart data\r\n    getTestTuples(jsonData, person) {\r\n        var tempArr = [];\r\n        jsonData.forEach(function(value) {\r\n            tempArr.push([value.Age, 1 - value.Probability]);\r\n        });\r\n        person.testTuples = tempArr;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport * as HighCharts from \"highcharts\";\r\nimport {User} from '../services/user';\r\n\r\n@inject(User)\r\nexport class Chart {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    createChart(containerID) {\r\n        //console.log(this.user.clientPersonalInfo.testTuples);\r\n        Highcharts.chart(containerID, {\r\n                title: {\r\n                    text: 'Life Expectancy'\r\n                },\r\n                xAxis: {\r\n                    title: {\r\n                        text: 'Age'\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    series: {\r\n                        pointStart: this.user.clientPersonalInfo.age\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: 'Probability'\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Client',\r\n                    data:  this.user.clientPersonalInfo.testTuples\r\n                }, {\r\n                    name: 'Co-client',\r\n                    data: this.user.clientPersonalInfo.testTuples\r\n                }, {\r\n                    name: 'Average',\r\n                    data: this.user.clientPersonalInfo.testTuples\r\n                }]\r\n            }); \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {StateData} from '../services/stateData';\r\n\r\n@inject(StateData)\r\nexport class ReadFile {\r\n\r\n    constructor(stateData) {\r\n        this.stateData = stateData;\r\n    }\r\n\r\n    //Given the json data this method will create a set of states and save in stateData.js\r\n    getStateList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject) { \r\n            self.stateData.stateSet.add(stateObject.State.toLowerCase())\r\n        });\r\n        this.getCountyList(jsonData);\r\n    } \r\n\r\n    //Given a state as input this method reads the csv file and returns all counties for that state.\r\n    getCountyList(jsonData) {\r\n        var self = this;\r\n        jsonData.forEach(function (stateObject){\r\n            if(self.stateData.stateToCountyMap.has(stateObject.State.toLowerCase())) {\r\n                   var existingValues = self.stateData.stateToCountyMap.get(stateObject.State.toLowerCase());\r\n                   // Format for each county => County : Male Life Expectancy : Female Life Expectancy\r\n                   existingValues += \" \" + stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\";\r\n                   self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), existingValues);\r\n            }\r\n            else self.stateData.stateToCountyMap.set(stateObject.State.toLowerCase(), stateObject.County.toLowerCase() + \":\" + stateObject.Male + \":\" + stateObject.Female + \",\");\r\n        });\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {User} from '../services/user';\r\nimport * as ionRangeSlider from \"ion-rangeslider\";\r\n\r\n@inject(User)\r\nexport class Slider {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n    \r\n    createAgeSlider() {\r\n        $(\"#age\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientPersonalInfo.age = data.from;\r\n            }\r\n        });\r\n\r\n        $(\"#spouseage\").ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 30,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spousePersonalInfo.age = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    createLifeExpectancySlider() {\r\n        $('#familyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.clientFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n\r\n        $('#spousefamilyLifeExpectancy').ionRangeSlider({\r\n            grid: true,\r\n            min: 0,\r\n            max: 100,\r\n            from: 70,\r\n            step: 1,\r\n            onFinish: (data) => {\r\n                this.user.spouseFamilyHealth.familyLifeExpectancy = data.from;\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n}"],"sourceRoot":".."}